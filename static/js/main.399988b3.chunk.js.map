{"version":3,"sources":["images/QwertycowMoo.png","images/kgs5.png","images/renzol2.png","images/evanmm3.png","images/logo_nobg.png","components/Navbar/CollapsingButton.js","api/Client.js","api/Pantry.js","firebase.js","components/Navbar/CollapsingMenu.js","constants/Routes.js","components/Navbar/index.js","pages/Home/Landing.js","pages/Home/User.js","pages/Home/index.js","components/AvatarCard.js","pages/About.js","pages/Order.js","components/AccordionWrapper.js","components/ErrorAlert.js","components/Loading.js","api/Stock.js","components/StockModal.js","components/StockCard.js","components/LanguageMenu.js","components/StockInput.js","components/StockOptions.js","constants/Languages.js","pages/Stock.js","components/OrderModal.js","components/OrderCard.js","api/People.js","components/ConfirmationModal.js","pages/OrderStock.js","pages/OrderTracker.js","pages/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","buttonCollapse","breakpoints","up","display","CollapsingButton","children","isOpen","setOpen","classes","className","IconButton","onClick","event","Boolean","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","axios","create","baseURL","item","a","Client","post","then","res","catch","e","env","process","firebase","initializeApp","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","auth","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","addPantry","uid","currentUser","email","name","displayName","db","firestore","root","position","right","buttonBar","down","link","margin","spacing","color","login","profileIcon","marginLeft","CollapsingMenu","useState","useAuthState","user","fullNavigation","page","to","navigation","getAuthButtonText","split","getAuthButtonLink","map","nav","MenuItem","key","component","Link","Button","variant","menuButton","marginRight","backgroundColor","Navbar","trigger","useScrollTrigger","Slide","appear","direction","in","AppBar","Toolbar","src","require","alt","style","width","height","Landing","Container","User","textAlign","marginBottom","fontWeight","borderColor","borderRadius","size","block","signOut","Home","card","paddingTop","paddingBottom","paddingLeft","paddingRight","padding","avatar","AvatarCard","role","github","Paper","elevation","Avatar","Typography","href","target","rel","p","marginTop","team","avatarGroup","flexWrap","alignItems","justifyContent","About","QwertycowMoo","kgs5","renzol2","evanmm3","maxWidth","member","orderSchema","Yup","firstName","required","lastName","adults","moreThan","zipcode","lessThan","integer","orderNotes","OrderForm","history","useHistory","useEffect","push","validationSchema","onSubmit","personInfo","fromForm","initialValues","handleSubmit","handleChange","touched","handleBlur","values","errors","isValid","Form","noValidate","Group","md","controlId","Label","Control","type","placeholder","onChange","isInvalid","Feedback","flexDirection","details","AccordionWrapper","summary","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","ErrorAlert","heading","body","severity","Alert","length","AlertTitle","spinnerDiv","Loading","CircularProgress","fetchStock","get","createStockItem","updateStockCount","updatedItem","put","console","log","error","amountSchema","newCount","modal","paper","palette","background","boxShadow","shadows","button","closeButton","form","StockModal","show","handleClose","getStock","stockId","stockName","stockCount","loading","setLoading","setError","formSubmission","pantry","_id","parseInt","updateIsSuccessful","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","TextField","label","value","onBlur","helperText","fullWidth","actions","setTimeout","cardAction","only","topContent","bottomContent","nameContainer","fontSize","noTranslation","subname","date","countContainer","countHeader","count","alignSelf","StockCard","stockItem","lang","showAmountModal","setShowAmountModal","hasLanguage","setHasLanguage","undefined","Card","CardActionArea","disableRipple","CardContent","Box","Chip","timestamp","seconds","_seconds","Date","toDateString","substr","getItemDateString","menuItem","LanguageMenu","languages","currentLanguage","buttonClass","capitalize","setLanguage","isError","React","setAnchorEl","selectedIndex","setSelectedIndex","keepMounted","getContentAnchorEl","index","selected","textContent","toLowerCase","handleMenuItemClick","itemSchema","container","StockInput","handleReset","isSubmitting","disabled","textTransform","StockOptions","LANGUAGES","title","typography","h3","h4","subheading","column","searchPaper","search","info","Stock","stock","setStock","language","nameQuery","setNameQuery","isMobile","useMediaQuery","useTheme","data","s","charAt","toUpperCase","slice","getFilteredStockItems","filter","inEnglishName","includes","inTranslatedName","Grid","xs","InputProps","startAdornment","InputAdornment","OrderModal","onRequest","selectedAmount","setSelectedAmount","onHide","centered","Header","Title","Body","ButtonGroup","aria-label","Footer","requestedItem","requestedCount","countAfterRequest","OrderCard","isRequested","showOrderModal","as","Text","Badge","update","ConfirmationModal","buttonText","OrderStock","location","useLocation","state","retrieveFromStorage","requestedStockItems","setRequestedStockItems","showConfirmation","setShowConfirmation","defaultValue","stored","localStorage","getItem","JSON","parse","updatedRequestedItems","alreadyRequested","find","concat","itemIndex","indexOf","setItem","stringify","writeRequestToNotes","forEach","r","addPersonInfo","firstname","lastname","fulfilled","stockUpdatePromises","Promise","all","responses","removeItem","Dropdown","Toggle","Item","onSelect","eventKey","some","requested","dismissible","OrderTracker","userLoading","userError","query","setQuery","collection","doc","where","useCollection","snapshot","snapLoading","snapError","fulfillOrder","updatePerson","docs","Fragment","SignIn","App","basename","exact","path","Order","window","hostname","match","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.399988b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/QwertycowMoo.c4707b2e.png\";","module.exports = __webpack_public_path__ + \"static/media/kgs5.ed891ef2.png\";","module.exports = __webpack_public_path__ + \"static/media/renzol2.726b433f.png\";","module.exports = __webpack_public_path__ + \"static/media/evanmm3.c4869c53.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_nobg.484389dc.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Menu } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu'\n\n/**\n * Responsive button for use in navbar\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\n */\nfunction CollapsingButton({ children, isOpen, setOpen }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.buttonCollapse}>\n      <IconButton\n        onClick={(event) => setOpen(Boolean(event.currentTarget))}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        id=\"menu-appbar\"\n        anchorEl={isOpen}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={isOpen}\n        onClose={() => setOpen(false)}\n      >\n        {children}\n      </Menu>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  buttonCollapse: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    margin: '10px',\n    boxShadow: 'none',\n  },\n}));\n\nexport default CollapsingButton;\n","import axios from 'axios';\n\nexport const BASE_API_URL = 'https://us-central1-pan-lang.cloudfunctions.net/';\n\nexport default axios.create({\n  baseURL: BASE_API_URL,\n});\n","import Client from './Client';\n\nexport const PANTRY_ENDPOINT = '/pantry';\n\nexport async function addPantry(item) {\n  Client.post(PANTRY_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\n//put request not done on the frontend yet, this is only a placeholder\nexport async function updatePantry(update) {\n  Client.put(PANTRY_ENDPOINT, update)\n    .then((res) => {\n      console.log(res);\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    })\n\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { addPantry } from './api/Pantry';\n\n// Initialize Firebase\nconst env = process.env;\nfirebase.initializeApp({\n  apiKey: env.REACT_APP_API_KEY,\n  authDomain: env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: env.REACT_APP_DATABASE_URL,\n  projectId: env.REACT_APP_PROJECT_ID,\n  storageBucket: env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: env.REACT_APP_APP_ID,\n  measurementId: env.REACT_APP_MEASUREMENT_ID,\n});\n\n// Auth providers\nexport const auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider).then(() => {\n    let body = {\n      uid: auth.currentUser.uid,\n      email: auth.currentUser.email,\n      name: auth.currentUser.displayName,\n    };\n    addPantry(body);\n  });\n};\n\n// Database\nexport const db = firebase.firestore();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MenuItem, Button } from '@material-ui/core';\nimport CollapsingButton from './CollapsingButton';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  ABOUT,\n  LANDING,\n  ORDER_FORM,\n  ORDER_TRACKER,\n  SIGN_IN,\n  STOCK,\n} from '../../constants/Routes';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../../firebase';\n\n/**\n * Responsive navigation menu\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\n */\nfunction CollapsingMenu() {\n  const [isOpen, setOpen] = useState(false);\n  const [user] = useAuthState(auth);\n\n  // Pages to navigate to\n  const fullNavigation = [\n    { page: 'About', to: ABOUT },\n    { page: 'Order Form', to: ORDER_FORM },\n    { page: 'Order Tracker', to: ORDER_TRACKER },\n    { page: 'Stock', to: STOCK },\n  ];\n\n  // Only show About page when user is not logged in\n  const navigation = Boolean(user) ? fullNavigation : [fullNavigation[0]];\n\n  // Auth button text depends on whether user is logged in\n  function getAuthButtonText() {\n    return Boolean(user) ? user.displayName.split(' ')[0] : 'Sign In';\n  }\n\n  // Profile button redirects to landing page\n  function getAuthButtonLink() {\n    return Boolean(user) ? LANDING : SIGN_IN;\n  }\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {/* Mobile */}\n      <CollapsingButton isOpen={isOpen} setOpen={setOpen}>\n        {navigation.map((nav) => (\n          <MenuItem\n            key={nav.to}\n            component={Link}\n            to={nav.to}\n            // FIXME: sometimes causes menu to pop up in weird places\n            // try: open menu -> About -> open menu again\n            onClick={() => setOpen(false)}\n          >\n            {nav.page}\n          </MenuItem>\n        ))}\n        <MenuItem\n          component={Link}\n          to={getAuthButtonLink()}\n          onClick={() => setOpen(false)}\n        >\n          {getAuthButtonText()}\n          {Boolean(user) && (\n            <AccountCircleIcon className={classes.profileIcon} />\n          )}\n        </MenuItem>\n      </CollapsingButton>\n\n      {/* Desktop */}\n      <nav className={classes.buttonBar} id=\"appbar-collapse\">\n        {navigation.map((nav) => (\n          <Button\n            component={Link}\n            className={classes.link}\n            to={nav.to}\n            key={nav.to}\n          >\n            {nav.page}\n          </Button>\n        ))}\n        <Button\n          component={Link}\n          to={getAuthButtonLink()}\n          variant=\"contained\"\n          className={classes.login}\n        >\n          {getAuthButtonText()}\n          {Boolean(user) && (\n            <AccountCircleIcon className={classes.profileIcon} />\n          )}\n        </Button>\n      </nav>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    right: 0,\n  },\n  buttonBar: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'none',\n    },\n    margin: '10px',\n    paddingLeft: '16px',\n    right: 0,\n    position: 'relative',\n    width: '100%',\n    background: 'transparent',\n  },\n  link: {\n    margin: theme.spacing(1, 1),\n    color: 'gray',\n  },\n  login: {\n    margin: '10px',\n  },\n  profileIcon: {\n    marginLeft: '4px',\n  },\n}));\n\nexport default CollapsingMenu;\n","// Endpoints for all pages in app\nexport const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ABOUT = '/about';\nexport const ORDER_FORM = '/order-form';\nexport const ORDER_STOCK = '/order-stock';\nexport const ORDER_TRACKER = '/order-tracker';\nexport const STOCK = '/stock';","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport CollapsingMenu from './CollapsingMenu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slide from '@material-ui/core/Slide';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\n/**\n * Navigation bar at the top of window\n */\nfunction Navbar() {\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      <AppBar className={classes.navigation}>\n        <Toolbar>\n          {/* Logo */}\n          <Link to=\"/\">\n            <img\n              src={require('../../images/logo_nobg.png')}\n              alt=\"Pan-Lang logo\"\n              style={{ width: 75, height: 75 }}\n            />\n          </Link>\n\n          {/* Navigation menu */}\n          <CollapsingMenu />\n        </Toolbar>\n      </AppBar>\n    </Slide>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  navigation: {\n    backgroundColor: 'white',\n  },\n}));\n\nexport default Navbar;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\n/**\n * Landing page for Pan-Lang.\n * The first thing people will see when visiting our web app.\n */\nfunction Landing() {\n  return (\n    <Container>\n      <p>We'll make this pretty later, just sign in.</p>\n    </Container>\n  );\n}\n\nexport default Landing;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { ORDER_FORM, STOCK } from '../../constants/Routes';\n\n/**\n * User's home page for Pan-Lang.\n * The default screen for users logged in to Pan-Lang.\n */\nfunction User() {\n  return (\n    <Container style={{ textAlign: 'center' }}>\n      <div style={{ marginBottom: 20 }}>\n        <br></br>\n        <h1>Welcome to </h1>{' '}\n        <h1>\n          <font style={{ color: '#35E82A', fontWeight: 'bold' }}>Pan-</font>\n          <font style={{ color: '#2EFFD5', fontWeight: 'bold' }}>Lang</font>\n        </h1>\n      </div>\n      <div>\n        <Link to={ORDER_FORM} style={{ color: 'white' }}>\n          <Button\n            style={{\n              backgroundColor: '#16AB8D',\n              borderColor: '#FFFFF5',\n              color: '#FFFFFF',\n              borderRadius: '200px',\n            }}\n            size=\"lg\"\n            className=\"mb-3\"\n            block\n          >\n            Start a new order\n          </Button>\n        </Link>\n      </div>\n      <Link to={STOCK} style={{ color: 'white' }}>\n        <Button\n          style={{\n            backgroundColor: '#16AB8D',\n            borderColor: '#FFFFF5',\n            color: '#FFFFFF',\n            borderRadius: '200px',\n          }}\n          size=\"lg\"\n          className=\"mb-3\"\n          block\n        >\n          Edit and add stock items\n        </Button>{' '}\n      </Link>\n\n      <br></br>\n      <br></br>\n      <Button\n        style={{\n          backgroundColor: '#16AB8D',\n          borderColor: '#FFFFF5',\n          color: '#FFFFFF',\n          borderRadius: '200px',\n        }}\n        size=\"lg\"\n        className=\"mb-3\"\n        block\n        onClick={() => auth.signOut()}\n      >\n        Sign out\n      </Button>\n    </Container>\n  );\n}\n\nexport default User;\n","import React from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../../firebase';\nimport Landing from './Landing';\nimport User from './User';\n\n/**\n * Landing page\n */\nfunction Home() {\n  const [user] = useAuthState(auth);\n\n  if (!Boolean(user)) {\n    // If the user is not logged in, return landing page\n    return <Landing />;\n  } else {\n    // If user is logged in, return user's home page\n    return <User />;\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport {\n  Avatar,\n  Container,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\n\n/**\n * Card on About page representing each team member\n */\nfunction AvatarCard({ name, src, alt, role = 'Software Developer', github }) {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={3} className={classes.card}>\n      <Container>\n        <Avatar src={src} alt={alt} className={classes.avatar} />\n        <Typography variant=\"h5\">\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </Typography>\n        <Typography variant=\"subtitle1\">{role}</Typography>\n      </Container>\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingLeft: 10,\n    paddingRight: 10,\n    [theme.breakpoints.down('sm')]: {\n      padding: 5,\n      width: '100%',\n    },\n  },\n  avatar: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    [theme.breakpoints.down('sm')]: {\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n    },\n    marginBottom: 10,\n  },\n}));\n\nexport default AvatarCard;\n","import React from 'react';\nimport { Container, makeStyles, Typography } from '@material-ui/core';\nimport AvatarCard from '../components/AvatarCard';\nimport QwertycowMoo from '../images/QwertycowMoo.png';\nimport kgs5 from '../images/kgs5.png';\nimport renzol2 from '../images/renzol2.png';\nimport evanmm3 from '../images/evanmm3.png';\n\n/**\n * About page for Pan-Lang\n * Provides background for our application and service\n */\nfunction About() {\n  const team = [\n    {\n      name: 'Kevin Zhou',\n      src: QwertycowMoo,\n      github: 'https://github.com/QwertycowMoo',\n      role: 'Lead Software Developer',\n    },\n    { name: 'Katie Sanders', src: kgs5, github: 'https://github.com/kgs5' },\n    {\n      name: 'Renzo Ledesma',\n      src: renzol2,\n      github: 'https://github.com/renzol2',\n    },\n    {\n      name: 'Evan Matthews',\n      src: evanmm3,\n      github: 'https://github.com/evanmm3',\n    },\n  ];\n\n  const classes = useStyles();\n  return (\n    <Container>\n      <Container\n        maxWidth=\"md\"\n        style={{\n          paddingBottom: 120,\n          marginBottom: 20,\n        }}\n      >\n        {/* Background */}\n        <Typography variant=\"h2\">\n          {'About '}\n          <font style={{ color: '#26B020', fontWeight: 'bold' }}>\n            Pan-Lang\n          </font>\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          Pan-Lang is an organizational web application designed to help local\n          food bank organizers keep track of orders, maintain visitor records,\n          and communicate with non-English speaking patrons.\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          Food insecurity is an important issue in the Champain County\n          community. Nearly 15% of residents must deal with food insecurity.\n          Many of these individuals are also ineligible for federal nutrition\n          programs and must rely on local food pantries for meals.\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          On top of this, many of these individuals speak limited English,\n          making it difficult for them to communicate their needs to food pantry\n          staff. With Pan-Lang, our mission is to break this language barrier\n          and provide a more efficient method of supporting those in need.\n        </Typography>\n      </Container>\n\n      {/* Team */}\n      <Container className={classes.team}>\n        <Typography variant=\"h3\">Our Team</Typography>\n        <Container className={classes.avatarGroup}>\n          {team.map((member) => (\n            <AvatarCard\n              key={member.src}\n              name={member.name}\n              src={member.src}\n              alt={member.name}\n              role={member.role}\n              github={member.github}\n            />\n          ))}\n        </Container>\n      </Container>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  p: {\n    marginTop: 8,\n    marginBottom: 8,\n  },\n  team: {\n    textAlign: 'center',\n    width: '100%',\n    paddingBottom: 50,\n  },\n  avatarGroup: {\n    marginTop: 15,\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'stretch',\n    justifyContent: 'space-around',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default About;\n","import React, { useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { ORDER_STOCK, LANDING } from '../constants/Routes';\nimport { auth } from '../firebase';\n\n// Validation schema for order form\nconst orderSchema = Yup.object({\n  firstName: Yup.string().required(),\n  lastName: Yup.string().required(),\n  adults: Yup.number().moreThan(-1).required(),\n  children: Yup.number().moreThan(-1).required(),\n  zipcode: Yup.number().moreThan(9999).lessThan(100000).integer().required(),\n  orderNotes: Yup.string().required(),\n});\n\n/**\n * Page to fill out form for patron's order\n */\nfunction OrderForm() {\n  const history = useHistory();\n\n  // Immediately send user back to homepage if not signed in\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      history.push(LANDING);\n    }\n  }, [history]);\n\n  return (\n    <Container style={{ paddingBottom: 120 }}>\n      <h1 style={{ textAlign: 'center' }}>Order</h1>\n      <Formik\n        validationSchema={orderSchema}\n        onSubmit={(personInfo) => {\n          history.push(ORDER_STOCK, { fromForm: true, personInfo });\n        }}\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          adults: -1,\n          children: -1,\n          zipcode: -1,\n          orderNotes: 'test',\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors,\n        }) => (\n          <div>\n            <Form noValidate onSubmit={handleSubmit}>\n              <Form.Group md=\"4\" controlId=\"orderForm1\">\n                <Form.Label>First name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"firstName\"\n                  placeholder={'Enter first name here'}\n                  onChange={handleChange}\n                  isValid={touched.firstName && !errors.firstName}\n                  isInvalid={!!errors.firstName}\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group md=\"4\" controlId=\"orderForm2\">\n                <Form.Label>Last name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"lastName\"\n                  placeholder={'Enter last name here'}\n                  onChange={handleChange}\n                  isValid={touched.lastName && !errors.lastName}\n                  isInvalid={!!errors.lastName}\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group md=\"4\" controlId=\"orderForm3\">\n                <Form.Label># of Adults</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"adults\"\n                  placeholder={'Enter number of adults in household'}\n                  onChange={handleChange}\n                  isValid={touched.adults && !errors.adults}\n                  isInvalid={!!errors.adults}\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group md=\"4\" controlId=\"orderForm4\">\n                <Form.Label># of Children</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"children\"\n                  placeholder={'Enter number of children in household'}\n                  onChange={handleChange}\n                  isValid={touched.children && !errors.children}\n                  isInvalid={!!errors.children}\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group md=\"4\" controlId=\"orderForm4\">\n                <Form.Label>ZIP Code</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"zipcode\"\n                  placeholder={'Enter your ZIP Code'}\n                  onChange={handleChange}\n                  isValid={touched.zipcode && !errors.zipcode}\n                  isInvalid={!!errors.zipcode}\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n                <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: '#16AB8D',\n                    borderColor: '#FFFFF5',\n                    color: '#FFFFFF',\n                    borderRadius: '200px',\n                  }}\n                  block\n                >\n                  Select order\n                </Button>\n              </div>\n            </Form>\n          </div>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n\nexport default OrderForm;\n","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Component that wraps children in accordion\n */\nfunction AccordionWrapper({ summary, children }) {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"stock-input-content\"\n        id=\"stock-input-header\"\n      >\n        <Typography>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.details}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  details: {\n    display: 'block',\n  },\n}));\n\nexport default AccordionWrapper;\n","import React from 'react';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n/**\n * Component signifying an error has occurred, or\n * a different specified severity\n * See: https://material-ui.com/components/alert/#alert\n */\nfunction ErrorAlert({ heading = '', body, severity = 'error', onClose }) {\n  return (\n    <Alert severity={severity} onClose={onClose}>\n      {heading.length > 0 && <AlertTitle>{heading}</AlertTitle>}\n      {body}\n    </Alert>\n  );\n}\n\nexport default ErrorAlert;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Centered spinner to signify loading\n */\nfunction Loading() {\n  const classes = useStyles();\n  return (\n    <Container className={classes.spinnerDiv}>\n      <CircularProgress />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  spinnerDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default Loading;\n","import Client from './Client';\n\nconst STOCK_ENDPOINT = '/stock';\n\nexport async function fetchStock(uid) {\n  return await Client.get(`${STOCK_ENDPOINT}?pantry=${uid}`);\n}\n\nexport async function createStockItem(item) {\n  return await Client.post(STOCK_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\nexport async function updateStockCount(updatedItem) {\n  return await Client.put(STOCK_ENDPOINT, updatedItem)\n    .then((res) => {\n      console.log(res);\n      return true;\n    })\n    .catch((e) => {\n      console.error(e)\n      return false;\n    })\n}\n","import React, { useState } from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Fade from '@material-ui/core/Fade';\nimport Modal from '@material-ui/core/Modal';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorAlert from './ErrorAlert';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n// TODO: use to send PUT request to API\nimport { updateStockCount } from '../api/Stock';\nimport { auth } from '../firebase';\n\n/**\n * Popup modal for editing the stock count of an item\n */\nfunction StockModal({\n  show,\n  handleClose,\n  getStock,\n  stockId,\n  stockName,\n  stockCount,\n}) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  /**\n   * Sends PUT request with updated stock count from input\n   * @param {Object} formSubmission { newCount } containing updated count\n   */\n  async function onSubmit(formSubmission) {\n    setLoading(true);\n\n    const updatedItem = {\n      pantry: auth.currentUser.uid,\n      _id: stockId,\n      newCount: parseInt(formSubmission.newCount)\n    };\n\n    const updateIsSuccessful = await updateStockCount(updatedItem);\n\n    setLoading(false);\n\n    if (!updateIsSuccessful) {\n      setError(true);\n    } else {\n      handleClose();\n      getStock(500);\n    }\n  }\n\n  const classes = useStyles();\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <Formik\n            validationSchema={amountSchema}\n            onSubmit={onSubmit}\n            initialValues={{\n              newCount: '',\n            }}\n          >\n            {/* Formik component */}\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              isValid,\n              errors,\n            }) => (\n              <>\n                <Typography variant=\"h5\">\n                  Edit amount for: {stockName}\n                </Typography>\n\n                {/* Text field for entering new amount */}\n                {!loading && !error && (\n                  <Container className={classes.form}>\n                    <Typography>Current amount: {stockCount}</Typography>\n                    <form onSubmit={handleSubmit}>\n                      <TextField\n                        id=\"newCount\"\n                        label=\"Enter new item count\"\n                        value={values.newCount}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={touched.newCount ? errors.newCount : ''}\n                        error={touched.newCount && Boolean(errors.newCount)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </form>\n                  </Container>\n                )}\n\n                {/* Message when processing request */}\n                {loading && (\n                  <Typography>\n                    Updating stock count for {stockName}...\n                  </Typography>\n                )}\n\n                {/* Error message */}\n                {error && <ErrorAlert body=\"An error occurred.\" />}\n\n                {/* Action buttons */}\n                {!loading && (\n                  <Container className={classes.actions}>\n                    {/* Submit button */}\n                    {!error && (\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        className={classes.button}\n                      >\n                        Save new amount\n                      </Button>\n                    )}\n\n                    {/* Close modal button */}\n                    <Button\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      className={classes.closeButton}\n                      onClick={() => {\n                        // Set timer so buttons don't reappear during\n                        // fade out animation\n                        setTimeout(() => {\n                          setError(false);\n                          setLoading(false);\n                        }, 120);\n\n                        handleClose();\n                      }}\n                    >\n                      Close\n                    </Button>\n                  </Container>\n                )}\n              </>\n            )}\n          </Formik>\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n}\n\n// Schema for updating count\nconst amountSchema = Yup.object({\n  newCount: Yup.number().integer().moreThan(-1).required(),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n  },\n  button: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    width: '100%',\n    marginBottom: 5,\n  },\n  closeButton: {\n    width: '100%',\n  },\n  form: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default StockModal;\n","import React, { useEffect, useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Chip from '@material-ui/core/Chip';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\nimport StockModal from './StockModal';\n\n/**\n * Card component that displays a stock item and allows\n * for editing its amount through a modal popup\n */\nfunction StockCard({ stockItem, getStock, lang = 'name' }) {\n  const [showAmountModal, setShowAmountModal] = useState(false);\n  const [hasLanguage, setHasLanguage] = useState(false);\n\n  // Handlers for showing/closing modal when editing item amount\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  // Determine whether this stock item has a name in the specified language\n  useEffect(() => {\n    setHasLanguage(stockItem[lang] !== undefined);\n  }, [lang, stockItem]);\n\n  /**\n   * Gets a String representing an item's timestamp\n   * @param {Object} stockItem\n   */\n  function getItemDateString(stockItem) {\n    let seconds = stockItem.timestamp._seconds;\n    // Date constructor takes in milliseconds\n    return new Date(seconds * 1000).toDateString().substr(3);\n  }\n\n  const classes = useStyles();\n  return (\n    <>\n      <Fade in={true}>\n        <Card className={classes.card} onClick={handleShow}>\n          {/* Action area makes entire component focusable */}\n          <CardActionArea className={classes.cardAction} disableRipple>\n            <CardContent>\n              {/* Top content of card */}\n              <Box className={classes.topContent}>\n                {/* Name and translation (left) */}\n                <Box className={classes.nameContainer}>\n                  {/* Name */}\n                  <Typography variant=\"h4\" className={classes.name}>\n                    {hasLanguage ? stockItem[lang] : stockItem.name}\n                  </Typography>\n\n                  {/* Translation */}\n                  <Typography variant=\"h5\" className={classes.subname}>\n                    {hasLanguage && lang !== 'name' ? stockItem.name : ''}\n                  </Typography>\n\n                  {/* No translation alert */}\n                  {!hasLanguage && (\n                    <Chip\n                      className={classes.noTranslation}\n                      size=\"small\"\n                      color=\"secondary\"\n                      label={'Translation unavailable'}\n                    />\n                  )}\n                </Box>\n\n                {/* Count (right) */}\n                <Box className={classes.countContainer}>\n                  <Typography className={classes.countHeader}>Count</Typography>\n                  <Typography className={classes.count}>\n                    {stockItem.count}\n                  </Typography>\n                </Box>\n              </Box>\n\n              {/* Bottom content */}\n              <Box className={classes.bottomContent}>\n                {/* Date */}\n                <Typography className={classes.date}>\n                  Updated:{' '}\n                  {stockItem.timestamp !== undefined\n                    ? getItemDateString(stockItem)\n                    : 'Unavailable'}\n                </Typography>\n\n                {/* Out of stock alert */}\n                {stockItem.count <= 0 && (\n                  <Chip size=\"small\" color=\"secondary\" label={'Out of stock'} />\n                )}\n              </Box>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Fade>\n\n      {/* Popup modal for editing stock count */}\n      <StockModal\n        show={showAmountModal}\n        handleClose={handleClose}\n        getStock={getStock}\n        stockName={hasLanguage ? stockItem[lang] : stockItem.name}\n        stockId={stockItem._id}\n        stockCount={stockItem.count}\n      />\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(1),\n    borderRadius: '30px',\n    maxWidth: '100vw',\n  },\n  cardAction: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    [theme.breakpoints.only('sm')]: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(0),\n    },\n  },\n  topContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  bottomContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  },\n  nameContainer: {},\n  name: {\n    fontWeight: 'bold',\n    fontSize: '25px',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '19px',\n    },\n  },\n  noTranslation: {\n    marginTop: 5,\n  },\n  subname: {\n    marginTop: -8,\n    [theme.breakpoints.down('md')]: {\n      fontSize: '18px',\n      marginTop: -4,\n    },\n  },\n  date: {\n    color: 'gray',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '12px',\n    },\n  },\n  countContainer: {},\n  countHeader: {\n    textAlign: 'right',\n  },\n  count: {\n    marginTop: -10,\n    fontWeight: 'bold',\n    fontSize: '40px',\n    textAlign: 'right',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '27px',\n    },\n  },\n  button: {\n    alignSelf: 'center',\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n  },\n}));\n\nexport default StockCard;\n","import React from 'react';\nimport { MenuItem, Menu, Button, makeStyles } from '@material-ui/core';\n\n/**\n * Menu to select language when viewing Stock\n */\nfunction LanguageMenu({\n  languages = [],\n  currentLanguage,\n  buttonClass,\n  capitalize,\n  setLanguage,\n  isError = false,\n}) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setLanguage(event.currentTarget.textContent.toLowerCase());\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      {/* Button to toggle menu */}\n      <Button onClick={handleClickListItem} className={buttonClass}>\n        {`Language: ${capitalize(currentLanguage)}`}\n      </Button>\n\n      {/* Language menu */}\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {languages.map((lang, index) => (\n          <MenuItem\n            key={lang}\n            selected={index === selectedIndex}\n            onClick={(event) => handleMenuItemClick(event, index)}\n            className={classes.menuItem}\n          >\n            {capitalize(lang)}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  menuItem: {\n    paddingLeft: '50px',\n    paddingRight: '50px',\n    textAlign: 'center',\n  },\n}));\n\nexport default LanguageMenu;\n","import React, { useState } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { createStockItem } from '../api/Stock';\nimport { auth } from '../firebase';\nimport { makeStyles } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n/**\n * Form component that handles creation of new stock items\n */\nfunction StockInput({ getStock }) {\n  const [loading, setLoading] = useState(false);\n  /**\n   * Handles sending new stock item requests to API\n   * @param {Object} values { name, count } from form\n   */\n  async function onSubmit(values) {\n    setLoading(true);\n\n    // Create item with user's id\n    const item = {\n      ...values,\n      pantry: auth.currentUser.uid,\n    };\n\n    // Send request to API and stop loading once promise is resolved\n    await createStockItem(item);\n\n    setLoading(false);\n    getStock(500);\n  }\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.container}>\n      <Accordion>\n        {/* Accordion toggle area */}\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"stock-input-content\"\n          id=\"stock-input-header\"\n        >\n          <Typography>Click here to insert a stock item</Typography>\n        </AccordionSummary>\n\n        {/* Accordion expandable area */}\n        <AccordionDetails className={classes.details}>\n          <Formik\n            validationSchema={itemSchema}\n            onSubmit={onSubmit}\n            initialValues={{\n              name: '',\n              count: 1,\n            }}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              handleReset,\n              isSubmitting,\n              values,\n              touched,\n              isValid,\n              errors,\n            }) => (\n              <>\n                {/* Item name text field */}\n                <TextField\n                  id=\"name\"\n                  label=\"Enter new item name\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.name ? errors.name : ''}\n                  error={touched.name && Boolean(errors.name)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n\n                {/* Item count text field */}\n                <TextField\n                  id=\"count\"\n                  label=\"Enter new item count\"\n                  value={values.count}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.count ? errors.count : ''}\n                  error={touched.count && Boolean(errors.count)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n\n                {/* Form buttons */}\n                <Container className={classes.actions}>\n                  {/* Submit button */}\n                  <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    disabled={loading || isSubmitting}\n                    className={classes.button}\n                    onClick={handleSubmit}\n                  >\n                    {isSubmitting ? 'Adding...' : 'Add item'}\n                  </Button>\n\n                  {/* Clear button */}\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    onClick={handleReset}\n                  >\n                    Clear\n                  </Button>\n                </Container>\n              </>\n            )}\n          </Formik>\n        </AccordionDetails>\n      </Accordion>\n    </Container>\n  );\n}\n\n// Schema for new stock item\nconst itemSchema = Yup.object({\n  name: Yup.string().required(),\n  count: Yup.number().integer().moreThan(-1).required(),\n});\n\n// Styling\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  card: {\n    width: '100%',\n    marginTop: 5,\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  actions: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingBottom: 0,\n  },\n  button: {\n    backgroundColor: '#16AB8D',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default StockInput;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core';\nimport LanguageMenu from './LanguageMenu';\nimport StockInput from './StockInput';\n\n/**\n * Options on stock dashboard\n * - Language selection\n * - Refresh stock list\n * - Form to create new stock items\n */\nfunction StockOptions({\n  languages,\n  currentLanguage,\n  capitalize,\n  setLanguage,\n  isError,\n  getStock,\n}) {\n  const classes = useStyles();\n  return (\n    <Box>\n      {/* Button bar */}\n      <Container className={classes.buttonBar}>\n        {/* Language selection */}\n        <LanguageMenu\n          languages={languages}\n          currentLanguage={currentLanguage}\n          buttonClass={classes.button}\n          capitalize={capitalize}\n          setLanguage={setLanguage}\n          isError={isError}\n        />\n\n        {/* Refresh */}\n        <Button size=\"medium\" onClick={getStock} className={classes.button}>\n          Refresh stock list\n        </Button>\n      </Container>\n\n      {/* Input to create stock item */}\n      {<StockInput getStock={getStock} />}\n    </Box>\n  );\n}\n\nconst useStyles = makeStyles({\n  buttonBar: {\n    paddingBottom: 10,\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  button: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    width: '100%',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n});\n\nexport default StockOptions;\n","const LANGUAGES = ['english', 'spanish', 'french', 'chinese', 'german'];\n\nexport default LANGUAGES;","import React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Paper from '@material-ui/core/Paper';\nimport Search from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\nimport AccordionWrapper from '../components/AccordionWrapper';\nimport ErrorAlert from '../components/ErrorAlert';\nimport Loading from '../components/Loading';\nimport StockCard from '../components/StockCard';\nimport StockOptions from '../components/StockOptions';\nimport LANGUAGES from '../constants/Languages';\nimport { fetchStock } from '../api/Stock';\nimport { auth } from '../firebase';\nimport { useHistory } from 'react-router-dom';\nimport { LANDING } from '../constants/Routes';\n\n/**\n * Page displaying the stock of food pantry with options for language\n */\nfunction Stock() {\n  const [stock, setStock] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [language, setLanguage] = useState(LANGUAGES[0]);\n  const [nameQuery, setNameQuery] = useState('');\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('md'));\n  const history = useHistory();\n\n  /**\n   * Fetches stock from API and stores in state\n   * @param {Number} timeout ms to wait before fetching stock\n   */\n  function getStock(timeout = 0) {\n    // Set stock empty to begin loading spinner\n    setStock([]);\n    setError(null);\n    setLoading(true);\n\n    // Fetch stock after designated time\n    setTimeout(() => {\n      fetchStock(auth.currentUser.uid)\n        .then((res) => {\n          setStock(res.data);\n          setLoading(false);\n        })\n        .catch((e) => {\n          setError(e);\n          setLoading(false);\n        });\n    }, timeout);\n  }\n\n  /**\n   * Fetch stock as soon as page is rendered, if user is signed in\n   */\n  useEffect(() => {\n    if (Boolean(auth.currentUser)) {\n      getStock();\n    } else {\n      // Redirect to home page\n      history.push(LANDING);\n    }\n  }, [history]);\n\n  /**\n   * Capitalizes the first letter of a string\n   * @param {String} s string to capitalize\n   */\n  function capitalize(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * Returns filtered stock array based on search queries\n   * Name query: allows if EITHER English or translated name includes query\n   */\n  function getFilteredStockItems() {\n    return stock.filter((item) => {\n      let inEnglishName = item.name.toLowerCase().includes(nameQuery);\n      let inTranslatedName =\n        item[language] === undefined\n          ? false\n          : item[language].toLowerCase().includes(nameQuery);\n      return inEnglishName || inTranslatedName;\n    });\n  }\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h1\" className={classes.title}>\n        Stock Dashboard\n      </Typography>\n\n      {/* Two column desktop layout, one column mobile layout */}\n      <Grid container spacing={isMobile ? 0 : 2}>\n        {/* Left column */}\n        <Grid item xs={12} md={4}>\n          {/* On mobile: hide options in accordion */}\n          {isMobile && (\n            <AccordionWrapper summary=\"Options\">\n              <StockOptions\n                languages={LANGUAGES}\n                currentLanguage={language}\n                setLanguage={setLanguage}\n                capitalize={capitalize}\n                getStock={getStock}\n                isError={error}\n              />\n            </AccordionWrapper>\n          )}\n\n          {/* On desktop: keep options bar open */}\n          {!isMobile && (\n            <Paper elevation={2} className={classes.column}>\n              <Typography variant=\"h5\" className={classes.subheading}>\n                Options\n              </Typography>\n              <StockOptions\n                languages={LANGUAGES}\n                currentLanguage={language}\n                setLanguage={setLanguage}\n                capitalize={capitalize}\n                getStock={getStock}\n                isError={error}\n              />\n            </Paper>\n          )}\n        </Grid>\n\n        {/* Right column */}\n        <Grid item xs={12} md={8}>\n          {/* Search bar */}\n          <Paper elevation={1} className={classes.searchPaper}>\n            <TextField\n              className={classes.search}\n              id=\"searchbar\"\n              label=\"Search items\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Search />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={(event) =>\n                setNameQuery(event.target.value.toLowerCase())\n              }\n            />\n\n            {/* Basic stock info */}\n            {!loading && !error && (\n              <Typography className={classes.info}>\n                Showing {getFilteredStockItems().length} of {stock.length} total items\n              </Typography>\n            )}\n          </Paper>\n\n          {/* Stock items */}\n          {stock &&\n            getFilteredStockItems().map((item) => (\n              <StockCard\n                stockItem={item}\n                getStock={getStock}\n                // Key of English name is always 'name'\n                lang={language === 'english' ? 'name' : language}\n                key={item.name}\n              />\n            ))}\n\n          {/* Alert when no stock is found */}\n          {!loading && !error && stock.length === 0 && (\n            <ErrorAlert\n              severity=\"info\"\n              body=\"No stock items found. Insert one in the Options menu!\"\n            />\n          )}\n\n          {/* Loading spinner */}\n          {loading && <Loading />}\n\n          {/* Error alert */}\n          {error && (\n            <ErrorAlert\n              heading=\"Error\"\n              body={`An error occurred while trying to get the stock. ${error}`}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: 2,\n      paddingRight: 2,\n    },\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: theme.typography.h3.fontSize,\n    [theme.breakpoints.down('md')]: {\n      fontSize: theme.typography.h4.fontSize,\n    },\n    marginBottom: theme.spacing(2),\n  },\n  subheading: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n  },\n  column: {\n    padding: theme.spacing(2),\n  },\n  searchPaper: {\n    margin: 5,\n    padding: theme.spacing(2),\n  },\n  search: {\n    width: '95%',\n  },\n  details: {\n    display: 'block',\n  },\n  info: {\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '10px',\n    },\n  }\n}));\n\nexport default Stock;\n","import React, { useState } from 'react';\nimport { Modal, Button, ButtonGroup } from 'react-bootstrap';\n\n/**\n * Allows user to select how much of a stock item to request\n */\nfunction OrderModal({\n  show,\n  handleClose,\n  getStock,\n  stockId,\n  stockName,\n  stockCount,\n  onRequest,\n}) {\n  // Currently requested amount\n  const [selectedAmount, setSelectedAmount] = useState(1);\n\n  function handleDecrease() {\n    if (selectedAmount > 1) setSelectedAmount(selectedAmount - 1);\n  }\n\n  function handleIncrease() {\n    if (selectedAmount < stockCount) setSelectedAmount(selectedAmount + 1);\n  }\n\n  function submitRequest() {\n    const requestedItem = {\n      id: stockId,\n      name: stockName,\n      requestedCount: selectedAmount,\n      countAfterRequest: stockCount - selectedAmount,\n    };\n    console.log(\"submitRequest -> stockCount\", stockCount)\n    console.log(\"submitRequest -> selectedAmount\", selectedAmount)\n    \n    console.log(\"countAfterRequest ->\", requestedItem.countAfterRequest);\n\n    onRequest(requestedItem);\n    handleClose();\n  }\n\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Select requested amount for: {stockName}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          Current amount: <b>{stockCount}</b>\n        </p>\n        <p>\n          Amount after order: <b>{stockCount - selectedAmount}</b>\n        </p>\n        <ButtonGroup\n          aria-label=\"Stock item request buttons\"\n          style={{ display: 'flex', alignItems: 'center' }}\n        >\n          <Button size=\"lg\" \n          style={{backgroundColor: '#16AB8D', borderColor: '#FFFFFF', color: '#FFFFFF'}}\n          onClick={handleDecrease}>\n            -\n          </Button>\n          <Button size=\"lg\" variant=\"secondary\" style={{borderColor: '#FFFFFF'}} disabled>\n            {selectedAmount}\n          </Button>\n          <Button size=\"lg\"\n          style={{backgroundColor: '#2EFFD5', borderColor: '#FFFFFF', color: '#FFFFFF'}}\n          onClick={handleIncrease}>\n            +\n          </Button>\n        </ButtonGroup>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" style={{borderRadius: '200px'}} onClick={handleClose}>\n          Close\n        </Button>\n        <Button onClick={submitRequest}\n        style={{backgroundColor: '#35E82A', borderColor: '#35E82A', borderRadius: '200px', color: '#FFFFFF'}}>\n          Request amount\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default OrderModal;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Badge, Container, Card } from 'react-bootstrap';\nimport OrderModal from './OrderModal';\n\n/**\n * Stock item card on order screen\n */\nfunction OrderCard({\n  stockItem,\n  getStock,\n  lang = 'name',\n  onRequest,\n  isRequested = false,\n}) {\n  const [showOrderModal, setShowAmountModal] = useState(false);\n  const [hasLanguage, setHasLanguage] = useState(false);\n\n  // Handlers for showing/closing modal when ordering item\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  // Determine whether this stock item has a name in the specified language\n  useEffect(() => {\n    setHasLanguage(stockItem[lang] !== undefined);\n  }, [lang, stockItem]);\n\n  function getRequestButtonText() {\n    if (stockItem.count <= 0) {\n      return 'Out of stock';\n    } else if (isRequested) {\n      return 'Edit requested amount';\n    } else {\n      return 'Request item';\n    }\n  }\n\n  return (\n    <>\n      <Card style={{ margin: 5 }}>\n        <Card.Body>\n          <Card.Header as=\"h2\">\n            {hasLanguage ? stockItem[lang] : stockItem.name}\n            {lang !== 'name' && hasLanguage\n              ? ' (' + stockItem['name'] + ')'\n              : ''}\n          </Card.Header>\n\n          <Card.Text>\n            Amount:{' '}\n            <font style={{ fontSize: '1.4em', fontWeight: 'bolder' }}>\n              {stockItem.count}\n            </font>\n          </Card.Text>\n          <Container\n            style={{ display: 'flex', alignItems: 'center', padding: 0 }}\n          >\n            {!hasLanguage && (\n              <Badge variant=\"danger\">Language unavailable: {lang}</Badge>\n            )}\n            <div style={{ margin: 'left' }} />\n            <Button\n              size=\"lg\"\n              style={{alignSelf: 'left', backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}\n              onClick={handleShow}\n              disabled={stockItem.count <= 0}\n            >\n              {getRequestButtonText()}\n            </Button>\n          </Container>\n          <Card.Text style={{ textAlign: 'right' }}>\n            Last updated:{' '}\n            {stockItem.timestamp !== undefined\n              ? new Date(stockItem.timestamp).toDateString()\n              : 'Unavailable'}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      <OrderModal\n        show={showOrderModal}\n        handleClose={handleClose}\n        getStock={getStock}\n        stockName={stockItem.name}\n        stockId={stockItem._id}\n        stockCount={stockItem.count}\n        onRequest={onRequest}\n      />\n    </>\n  );\n}\n\nexport default OrderCard;\n","import Client from './Client';\n\nexport const PEOPLE_ENDPOINT = '/people';\n\nexport async function addPersonInfo(item) {\n  Client.post(PEOPLE_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\nexport async function fetchPeople() {\n  const promise = await Client.get(PEOPLE_ENDPOINT);\n  return promise;\n}\n\nexport async function updatePerson(update) {\n  Client.put(PEOPLE_ENDPOINT, update)\n    .then((res) => {\n      console.log(res);\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\n/**\n * Modal to give user confirmation upon completing action\n */\nfunction ConfirmationModal({ title, body, buttonText, show, handleClose }) {  \n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {title}\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        {body}\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button onClick={handleClose}\n        style={{backgroundColor: '#16AB8D', borderColor: '#16AB8D', borderRadius: '200px', color: '#FFFFFF'}}>\n          {buttonText}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default ConfirmationModal;\n","import React, { useState, useEffect } from 'react';\nimport OrderCard from '../components/OrderCard';\nimport Loading from '../components/Loading';\nimport { fetchStock } from '../api/Stock';\nimport LANGUAGES from '../constants/Languages';\nimport { Container, Dropdown, Button } from 'react-bootstrap';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { addPersonInfo } from '../api/People';\nimport { updateStockCount } from '../api/Stock';\nimport ConfirmationModal from '../components/ConfirmationModal';\nimport ErrorAlert from '../components/ErrorAlert';\nimport { auth } from '../firebase';\nimport { LANDING, ORDER_FORM } from '../constants/Routes';\n\n/**\n * Allows user to order stock items only after they've filled out form\n */\nfunction OrderStock() {\n  const history = useHistory();\n  const location = useLocation();\n  const fromForm = location.state !== undefined;\n\n  const [stock, setStock] = useState([]);\n  const [error, setError] = useState(false);\n  const [language, setLanguage] = useState(LANGUAGES[0]);\n  const [personInfo] = useState(\n    fromForm\n      ? location.state.personInfo\n      : retrieveFromStorage('personInfo', undefined)\n  );\n  const [requestedStockItems, setRequestedStockItems] = useState(\n    retrieveFromStorage('requestedStockItems', [])\n  );\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      // Send user back to homepage if not signed in\n      history.push(LANDING)\n    } else if (!personInfo) {\n      // Send user back to form if they didn't fill it out\n      history.push(ORDER_FORM);\n    } else {\n      localStorage.setItem('personInfo', JSON.stringify(personInfo));\n      getStock();\n      console.log(personInfo);\n    }\n  }, [fromForm, history, personInfo]);\n\n  function retrieveFromStorage(key, defaultValue) {\n    const stored = localStorage.getItem(key);\n    if (stored) {\n      return JSON.parse(stored);\n    } else {\n      return defaultValue;\n    }\n  }\n\n  function getStock(timeout = 0) {\n    // Set stock empty to begin loading spinner\n    setStock([]);\n    setError(false);\n\n    // Fetch stock after designated time\n    setTimeout(() => {\n      fetchStock()\n        .then((res) => {\n          setStock(res.data);\n        })\n        .catch((e) => setError(true));\n    }, timeout);\n  }\n\n  function capitalize(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * Callback for OrderModal to add item to items list\n   * @param {Object} requestedItem { id, name, requestedCount, countAfterRequest }\n   */\n  function onRequest(requestedItem) {\n    // Check if item is already in list\n    let alreadyRequested = requestedStockItems.find(\n      (item) => item.id === requestedItem.id\n    );\n\n    let updatedRequestedItems;\n\n    if (alreadyRequested === undefined) {\n      // If item isn't in list, simply add it\n      updatedRequestedItems = requestedStockItems.concat(requestedItem);\n    } else {\n      // If item is already in list, update its values instead of adding\n      let itemIndex = requestedStockItems.indexOf(alreadyRequested);\n\n      updatedRequestedItems = [...requestedStockItems];\n\n      // Replace old values with new values\n      updatedRequestedItems[itemIndex].requestedCount =\n        requestedItem.requestedCount;\n      updatedRequestedItems[itemIndex].countAfterRequest =\n        requestedItem.countAfterRequest;\n    }\n\n    // Update state and local storage\n    setRequestedStockItems(updatedRequestedItems);\n    localStorage.setItem(\n      'requestedStockItems',\n      JSON.stringify(updatedRequestedItems)\n    );\n  }\n\n  function writeRequestToNotes() {\n    let orderNotes = '';\n    requestedStockItems.forEach((item) => {\n      orderNotes += item.name + ': ' + item.requestedCount + ', ';\n    });\n    return orderNotes.slice(0, -2);\n  }\n\n  function submitRequest() {\n    // Send full person info to API\n    const requestBody = {\n      firstname: personInfo.firstName,\n      lastname: personInfo.lastName,\n      adults: personInfo.adults,\n      children: personInfo.adults,\n      zipcode: personInfo.zipcode,\n      'order-notes': writeRequestToNotes(),\n      fulfilled: false,\n    };\n    addPersonInfo(requestBody);\n\n    // Send updates for each requested item to API\n    const stockUpdatePromises = requestedStockItems.map((item) => {\n      console.log('making promise... ', item.countAfterRequest);\n      return updateStockCount(item.id, { newCount: item.countAfterRequest });\n    });\n\n    Promise.all(stockUpdatePromises).then((responses) =>\n      console.log(responses)\n    );\n\n    // Clear local storage\n    localStorage.removeItem('requestedStockItems');\n    localStorage.removeItem('personInfo');\n\n    // Show confirmation popup\n    setShowConfirmation(true);\n  }\n\n  return (\n    <Container>\n      <h1 style={{ textAlign: 'center' }}>Select stock here</h1>\n\n      {requestedStockItems.map((r) => (\n        <p key={r.name}>\n          {r.name}: {r.requestedCount}\n        </p>\n      ))}\n\n      {!error && (\n        <Button\n          variant=\"type\"\n          className=\"mb-3\"\n          onClick={submitRequest}\n          block\n          style={{\n            backgroundColor: '#16AB8D',\n            borderColor: '#FFFFF5',\n            color: '#FFFFFF',\n            borderRadius: '200px',\n          }}\n          disabled={requestedStockItems.length === 0}\n        >\n          {requestedStockItems.length > 0\n            ? 'Submit request'\n            : 'Select items below'}\n        </Button>\n      )}\n\n      <Container style={{ display: 'flex', alignItems: 'center', padding: 0 }}>\n        <Dropdown variant=\"type\" onChange={(e) => console.log(e)}>\n          <Dropdown.Toggle\n            variant=\"type\"\n            id=\"dropdown-basic\"\n            size=\"md\"\n            className=\"mb-3\"\n            style={{\n              backgroundColor: '#16AB8D',\n              borderColor: '#FFFFF5',\n              color: '#FFFFFF',\n              borderRadius: '200px',\n            }}\n          >\n            Language: <b>{capitalize(language)}</b>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {LANGUAGES.map((lang) => (\n              <Dropdown.Item\n                onSelect={(key) => setLanguage(key)}\n                eventKey={lang}\n                key={lang}\n              >\n                {capitalize(lang)}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n        <div style={{ margin: 'auto' }} />\n        <Button\n          variant=\"type\"\n          size=\"md\"\n          onClick={getStock}\n          style={{\n            backgroundColor: '#16AB8D',\n            borderColor: '#FFFFF5',\n            color: '#FFFFFF',\n            borderRadius: '200px',\n          }}\n        >\n          Refresh\n        </Button>\n      </Container>\n\n      {/* List of stock */}\n      {stock.length === 0 && !error && <Loading />}\n      {stock &&\n        personInfo &&\n        stock.map((item) => (\n          <OrderCard\n            stockItem={item}\n            getStock={getStock}\n            lang={language === 'english' ? 'name' : language}\n            key={item._id}\n            onRequest={onRequest}\n            isRequested={requestedStockItems.some(\n              (requested) => item._id === requested.id\n            )}\n          />\n        ))}\n      {error && (\n        <ErrorAlert\n          heading=\"Error\"\n          body=\"An error occurred while trying to get the stock.\"\n          dismissible={false}\n        />\n      )}\n\n      {/* Confirmation popup */}\n      <ConfirmationModal\n        style={{\n          backgroundColor: '#16AB8D',\n          borderColor: '#16AB8D',\n          color: '#FFFFFF',\n        }}\n        title=\"Order successfully placed!\"\n        body=\"Thanks for your patronage! Your order will be fulfilled shortly.\"\n        buttonText=\"Back to Home\"\n        show={showConfirmation}\n        handleClose={() => {\n          setShowConfirmation(false);\n          history.push('/'); // Redirect back home\n        }}\n      />\n    </Container>\n  );\n}\n\nexport default OrderStock;\n","import React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { Button } from 'react-bootstrap';\nimport { updatePerson } from '../api/People';\nimport { useHistory } from 'react-router-dom';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { db, auth } from '../firebase';\nimport { LANDING } from '../constants/Routes';\n\n/**\n * Page with list of people with unfulfilled orders\n */\nfunction OrderTracker() {\n  const history = useHistory();\n  const [user, userLoading, userError] = useAuthState(auth);\n  const [query, setQuery] = useState();\n\n  useEffect(() => {\n    if (!Boolean(user)) {\n      // If user is not logged in, redirect to home screen\n      history.push(LANDING);\n    } else {\n      // If user is logged in, fetch their orders\n      setQuery(\n        db\n          .collection('pantries')\n          .doc(user.uid)\n          .collection('people')\n          .where('fulfilled', '==', false)\n      );\n      console.log(user.uid);\n    }\n  }, [history, user]);\n\n  const [snapshot, snapLoading, snapError] = useCollection(query);\n\n  function fulfillOrder(id) {\n    console.log(snapshot.size);\n    console.log('trying to fulfill', id);\n    const requestBody = {\n      pantry: user.uid,\n      _id: id,\n      fulfilled: true,\n    };\n    updatePerson(requestBody);\n  }\n\n  return (\n    <Container>\n      <p>\n        {userError && <strong>User Error: {JSON.stringify(snapError)}</strong>}\n        {userLoading && <span>User: Loading...</span>}\n        {snapError && <strong>Collection Error: {JSON.stringify(snapError)}</strong>}\n        {snapLoading && <span>Collection: Loading...</span>}\n        {snapshot && (\n          <span>\n            Collection:{' '}\n            {snapshot.docs.map((doc) => (\n              <React.Fragment key={doc.id}>\n                {JSON.stringify(doc.data())},{' '}\n                <Button\n                  onClick={() => {\n                    fulfillOrder(doc.id);\n                  }}\n                >\n                  Fulfill Person\n                </Button>\n              </React.Fragment>\n            ))}\n          </span>\n        )}\n      </p>\n    </Container>\n  );\n}\n\nexport default OrderTracker;\n","import React, { useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Loading from '../components/Loading';\nimport ErrorAlert from '../components/ErrorAlert';\nimport Paper from '@material-ui/core/Paper';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth, signInWithGoogle } from '../firebase';\nimport { makeStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { LANDING } from '../constants/Routes';\n\n/**\n * Sign in page for Pan-Lang\n */\nfunction SignIn() {\n  const history = useHistory();\n  const [user, loading, error] = useAuthState(auth);\n\n  useEffect(() => {\n    // Redirect user to landing page if already signed in\n    if (Boolean(user)) history.push(LANDING);\n  }, [history, user])\n\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"md\" className={classes.page}>\n      <Typography variant=\"h2\" className={classes.title}>\n        Join Pan-Lang today.\n      </Typography>\n      <Paper className={classes.paper}>\n        {/* Sign in button when not signed in */}\n        {!Boolean(user) && (\n          <Button className={classes.button} onClick={signInWithGoogle}>\n            Sign in with Google\n          </Button>\n        )}\n      </Paper>\n\n      {/* Loading */}\n      {loading && <Loading />}\n\n      {/* Error */}\n      {error && <ErrorAlert body=\"An error occurred.\" />}\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '30px',\n    },\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    padding: theme.spacing(5),\n    maxWidth: theme.breakpoints.width('sm'),\n  },\n  button: {\n    alignSelf: 'center',\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    width: '100%',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default SignIn;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar/';\nimport Home from './pages/Home/';\nimport About from './pages/About';\nimport Order from './pages/Order';\nimport Stock from './pages/Stock';\nimport OrderStock from './pages/OrderStock';\nimport OrderTracker from './pages/OrderTracker';\nimport SignIn from './pages/SignIn';\nimport {\n  ABOUT,\n  ORDER_FORM,\n  ORDER_TRACKER,\n  LANDING,\n  SIGN_IN,\n  STOCK,\n  ORDER_STOCK,\n} from './constants/Routes';\n\n/**\n * Highest level App component for routing\n */\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      {/* FIXME: naive fix for keeping a fixed navbar */}\n      <div style={{ padding: 55 }} />\n      <Switch>\n        <Route exact path={LANDING}>\n          <Home />\n        </Route>\n        <Route exact path={ABOUT}>\n          <About />\n        </Route>\n        <Route path={STOCK}>\n          <Stock />\n        </Route>\n        <Route path={ORDER_FORM}>\n          <Order />\n        </Route>\n        <Route path={ORDER_STOCK}>\n          <OrderStock />\n        </Route>\n        <Route path={ORDER_TRACKER}>\n          <OrderTracker />\n        </Route>\n        <Route path={SIGN_IN}>\n          <SignIn />\n        </Route>\n        <Route path=\"*\">\n          <h1>\n            Welcome to <font style={{ color: '#26B020' }}>Pan-Lang</font>!\n          </h1>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <React.Fragment>\n      <CssBaseline />\n      <App />\n    </React.Fragment>\n  </React.StrictMode>,\n\n \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}