{"version":3,"sources":["images/QwertycowMoo.png","images/kgs5.png","images/renzol2.png","images/evanmm3.png","images/empty-cart.svg","images/logo_nobg.png","components/Navbar/CollapsingButton.js","components/Navbar/CollapsingMenu.js","components/Navbar/index.js","api/Client.js","api/People.js","constants/Months.js","constants/Years.js","pages/Home.js","components/AvatarCard.js","pages/About.js","pages/Order.js","components/AccordionWrapper.js","components/ErrorAlert.js","components/Loading.js","api/Stock.js","components/StockModal.js","components/StockCard.js","components/LanguageMenu.js","components/StockInput.js","components/StockOptions.js","constants/Languages.js","pages/Stock.js","components/OrderModal.js","components/OrderCard.js","components/ConfirmationModal.js","pages/OrderStock.js","components/FulfillModal.js","components/UnfulfilledOrderCard.js","components/Dialog.js","pages/OrderTracker.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","buttonCollapse","breakpoints","up","display","CollapsingButton","children","useState","isOpen","setOpen","classes","className","IconButton","onClick","event","Boolean","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","navigation","page","to","root","position","right","buttonBar","down","link","margin","spacing","color","login","CollapsingMenu","map","nav","MenuItem","key","component","Link","Button","variant","flexGrow","grow","menuButton","marginLeft","marginRight","backgroundColor","toggleDrawer","appTitle","Navbar","trigger","useScrollTrigger","Slide","appear","direction","in","AppBar","Toolbar","src","require","alt","style","width","height","BASE_API_URL","axios","create","baseURL","item","a","Client","post","then","res","catch","e","MONTHS","MONTH_NAMES","YEARS","Home","current","Date","month","getMonth","year","getFullYear","date","setDate","Container","textAlign","marginBottom","fontWeight","borderColor","borderRadius","size","block","href","URLSearchParams","Dropdown","onChange","console","log","Toggle","indexOf","Item","onSelect","eventKey","card","paddingTop","paddingBottom","paddingLeft","paddingRight","padding","avatar","AvatarCard","name","role","github","Paper","elevation","Avatar","Typography","target","rel","p","marginTop","team","avatarGroup","flexWrap","alignItems","justifyContent","About","QwertycowMoo","kgs5","renzol2","evanmm3","maxWidth","member","orderSchema","Yup","firstName","required","lastName","adults","moreThan","zipcode","lessThan","integer","orderNotes","OrderForm","history","useHistory","validationSchema","onSubmit","personInfo","push","fromForm","initialValues","handleSubmit","handleChange","touched","handleBlur","values","errors","isValid","Form","noValidate","Group","md","controlId","Label","Control","type","placeholder","isInvalid","Feedback","flexDirection","details","AccordionWrapper","summary","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","ErrorAlert","heading","body","Alert","severity","length","AlertTitle","spinnerDiv","Loading","CircularProgress","fetchStock","get","updated","put","error","amountSchema","newCount","modal","paper","palette","background","boxShadow","shadows","button","closeButton","form","StockModal","show","handleClose","getStock","stockName","stockId","stockCount","loading","setLoading","setError","updatedCount","setTimeout","alert","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","TextField","label","value","onBlur","helperText","fullWidth","actions","cardAction","only","topContent","bottomContent","nameContainer","fontSize","noTranslation","subname","countContainer","countHeader","count","alignSelf","StockCard","stockItem","lang","showAmountModal","setShowAmountModal","hasLanguage","setHasLanguage","useEffect","undefined","Card","CardActionArea","CardContent","Box","Chip","timestamp","seconds","_seconds","toDateString","substr","getItemDateString","_id","menuItem","LanguageMenu","languages","currentLanguage","buttonClass","capitalize","setLanguage","isError","React","setAnchorEl","selectedIndex","setSelectedIndex","keepMounted","getContentAnchorEl","index","selected","textContent","toLowerCase","handleMenuItemClick","StockInput","withFormik","mapPropsToValues","itemName","itemCount","setSubmitting","isSubmitting","handleReset","container","disabled","textTransform","StockOptions","LANGUAGES","title","typography","h3","h4","subheading","column","searchPaper","search","Stock","stock","setStock","language","nameQuery","setNameQuery","isMobile","useMediaQuery","useTheme","data","s","charAt","toUpperCase","slice","Grid","xs","InputProps","startAdornment","InputAdornment","filter","inEnglishName","includes","inTranslatedName","OrderModal","onRequest","selectedAmount","setSelectedAmount","onHide","centered","Header","Title","Body","ButtonGroup","aria-label","Footer","requestedItem","requestedCount","countAfterRequest","OrderCard","isRequested","showOrderModal","as","Text","Badge","ConfirmationModal","buttonText","OrderStock","location","useLocation","state","retrieveFromStorage","requestedStockItems","setRequestedStockItems","showConfirmation","setShowConfirmation","defaultValue","stored","localStorage","getItem","JSON","parse","updatedRequestedItems","alreadyRequested","find","concat","itemIndex","setItem","stringify","writeRequestToNotes","forEach","r","addPersonInfo","firstname","lastname","fulfilled","stockUpdatePromises","updateStockCount","Promise","all","responses","removeItem","some","requested","dismissible","FulfillModal","person","fulfillPerson","UnfulfilledOrderCard","showFulfillModal","setShowFulfillModal","dialog","image","grid","Theme","createMuiTheme","primary","main","secondary","action","AlertDialogSlide","Dialog","DialogTitle","DialogActions","lg","sm","cart","OrderTracker","ordersList","setOrdersList","personFulfilled","socket","socketIOClient","emit","on","confirmation","disconnect","order","eventHandler","personData","currentOrders","Login","pantryName","setPantryName","InputGroup","FormControl","App","basename","process","exact","path","Order","window","hostname","match","ReactDOM","render","StrictMode","Fragment","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6d03592c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/QwertycowMoo.c4707b2e.png\";","module.exports = __webpack_public_path__ + \"static/media/kgs5.ed891ef2.png\";","module.exports = __webpack_public_path__ + \"static/media/renzol2.726b433f.png\";","module.exports = __webpack_public_path__ + \"static/media/evanmm3.c4869c53.png\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.302b7b48.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_nobg.484389dc.png\";","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Menu } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\n/**\r\n * Responsive button for use in navbar\r\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\r\n */\r\nfunction CollapsingButton({ children }) {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.buttonCollapse}>\r\n      <IconButton\r\n        onClick={(event) => setOpen(Boolean(event.currentTarget))}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={isOpen}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        open={isOpen}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        {children}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonCollapse: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n    margin: '10px',\r\n    boxShadow: 'none',\r\n  },\r\n}));\r\n\r\nexport default CollapsingButton;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MenuItem, Button } from '@material-ui/core';\r\nimport CollapsingButton from './CollapsingButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Pages to navigate to\r\nconst navigation = [\r\n  { page: 'About', to: '/about' },\r\n  { page: 'Order Form', to: '/order' },\r\n  { page: 'Order Tracker', to: '/order-tracker' },\r\n  { page: 'Stock', to: '/stock' },\r\n];\r\n\r\n/**\r\n * Responsive navigation menu\r\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\r\n */\r\nfunction CollapsingMenu() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Mobile */}\r\n      <CollapsingButton>\r\n        {navigation.map((nav) => (\r\n          <MenuItem key={nav.to} component={Link} to={nav.to}>\r\n            {nav.page}\r\n          </MenuItem>\r\n        ))}\r\n        <MenuItem component={Link} to=\"/login\">\r\n          Login\r\n        </MenuItem>\r\n      </CollapsingButton>\r\n\r\n      {/* Desktop */}\r\n      <nav className={classes.buttonBar} id=\"appbar-collapse\">\r\n        {navigation.map((nav) => (\r\n          <Button\r\n            component={Link}\r\n            className={classes.link}\r\n            to={nav.to}\r\n            key={nav.to}\r\n          >\r\n            {nav.page}\r\n          </Button>\r\n        ))}\r\n        <Button\r\n          component={Link}\r\n          to=\"/login\"\r\n          variant=\"contained\"\r\n          className={classes.login}\r\n        >\r\n          Login\r\n        </Button>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    right: 0,\r\n  },\r\n  buttonBar: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'none',\r\n    },\r\n    margin: '10px',\r\n    paddingLeft: '16px',\r\n    right: 0,\r\n    position: 'relative',\r\n    width: '100%',\r\n    background: 'transparent',\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1),\r\n    color: 'gray',\r\n  },\r\n  login: {\r\n    margin: '10px',\r\n  },\r\n}));\r\n\r\nexport default CollapsingMenu;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport CollapsingMenu from './CollapsingMenu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n\r\n/**\r\n * Navigation bar at the top of window\r\n */\r\nfunction Navbar() {\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger();\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      <AppBar className={classes.navigation}>\r\n        <Toolbar>\r\n          {/* Logo */}\r\n          <Link to=\"/\">\r\n            <img\r\n              src={require('../../images/logo_nobg.png')}\r\n              alt=\"Pan-Lang\"\r\n              style={{ width: 75, height: 75 }}\r\n            />\r\n          </Link>\r\n\r\n          {/* Navigation menu */}\r\n          <CollapsingMenu />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Slide>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  navigation: {\r\n    backgroundColor: 'white',\r\n  },\r\n  toggleDrawer: {},\r\n  appTitle: {},\r\n}));\r\n\r\nexport default Navbar;\r\n","import axios from 'axios';\r\n\r\nexport const BASE_API_URL = 'https://us-central1-pan-lang.cloudfunctions.net/';\r\n\r\nexport default axios.create({\r\n  baseURL: BASE_API_URL,\r\n});\r\n","import Client from './Client';\r\n\r\nexport const PEOPLE_ENDPOINT = '/people';\r\n\r\nexport async function addPersonInfo(item) {\r\n  Client.post(PEOPLE_ENDPOINT, item)\r\n    .then((res) => {\r\n      return true;\r\n    })\r\n    .catch((e) => {\r\n      return false;\r\n    });\r\n}\r\n\r\nexport async function fetchPeople() {\r\n  const promise = await Client.get(PEOPLE_ENDPOINT);\r\n  return promise;\r\n}\r\n","export const MONTHS = [\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  '10',\r\n  '11',\r\n  '12',\r\n];\r\n\r\nexport const MONTH_NAMES = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n","const YEARS = ['2020', '2021', '2022', '2023', '2024'];\r\n\r\nexport default YEARS;","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Link } from 'react-router-dom';\r\nimport { PEOPLE_ENDPOINT } from '../api/People';\r\nimport { BASE_API_URL } from '../api/Client';\r\nimport { MONTHS, MONTH_NAMES } from '../constants/Months';\r\nimport YEARS from '../constants/Years';\r\n\r\nfunction Home() {\r\n  const current = new Date();\r\n  const [date, setDate] = useState({\r\n    month: MONTHS[current.getMonth()],\r\n    year: current.getFullYear(),\r\n  });\r\n\r\n  return (\r\n    <Container style={{ textAlign: 'center' }}>\r\n      <div style={{ marginBottom: 20 }}>\r\n        <br></br>\r\n        <h1>Welcome to </h1>{' '}\r\n        <h1>\r\n          <font style={{ color: '#35E82A', fontWeight: 'bold' }}>Pan-</font><font style={{ color: '#2EFFD5', fontWeight: 'bold' }}>Lang</font>\r\n        </h1>\r\n      </div>\r\n      <div>\r\n        <Link to=\"/order\" style={{ color: 'white' }}>\r\n          <Button style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}} size=\"lg\" className=\"mb-3\" block>\r\n            Start a new order\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      <Link to=\"/stock\" style={{ color: 'white' }}>\r\n        <Button style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}} size=\"lg\" className=\"mb-3\" block>\r\n          Edit and add stock items\r\n        </Button>{' '}\r\n      </Link>\r\n\r\n      <br></br>\r\n      <br></br>\r\n      {/* I think we want an anchor tag w/ href and target=_blank , \r\n      if we use axios we have to hack around downloading the content for the user*/}\r\n      <a\r\n        href={`${BASE_API_URL}${PEOPLE_ENDPOINT}?${new URLSearchParams(date)}`}\r\n      >\r\n        <Button style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}} size=\"lg\" className=\"mb-3\" block>\r\n          Download order data\r\n        </Button>{' '}\r\n      </a>\r\n\r\n      {/* Month selection dropdown here */}\r\n      <Dropdown onChange={(e) => console.log(e)}>\r\n        <Dropdown.Toggle\r\n          variant=\"type\"\r\n          id=\"dropdown-basic\"\r\n          size=\"md\"\r\n          className=\"mb-3\"\r\n          style={{backgroundColor: '#35E82A', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}\r\n        >\r\n          Month: <b>{MONTH_NAMES[MONTHS.indexOf(date.month)]}</b>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {MONTHS.map((month) => (\r\n            <Dropdown.Item\r\n              onSelect={(key) => setDate({ ...date, month: key })}\r\n              eventKey={month}\r\n              key={month}\r\n            >\r\n              {MONTH_NAMES[MONTHS.indexOf(month)]}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n\r\n      {/* Year selection dropdown here */}\r\n      <Dropdown onChange={(e) => console.log(e)}>\r\n        <Dropdown.Toggle\r\n          variant=\"type\"\r\n          id=\"dropdown-basic\"\r\n          size=\"md\"\r\n          className=\"mb-3\"\r\n          style={{backgroundColor: '#35E82A', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}\r\n        >\r\n          Year: <b>{date.year}</b>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {YEARS.map((year) => (\r\n            <Dropdown.Item\r\n              onSelect={(key) => setDate({ ...date, year: key })}\r\n              eventKey={year}\r\n              key={year}\r\n            >\r\n              {year}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Container,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\n/**\r\n * Card on About page representing each team member\r\n */\r\nfunction AvatarCard({ name, src, alt, role = 'Software Developer', github }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.card}>\r\n      <Container>\r\n        <Avatar src={src} alt={alt} className={classes.avatar} />\r\n        <Typography variant=\"h5\">\r\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {name}\r\n          </a>\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\">{role}</Typography>\r\n      </Container>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 5,\r\n      width: '100%',\r\n    },\r\n  },\r\n  avatar: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25),\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n    },\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\nexport default AvatarCard;\r\n","import React from 'react';\r\nimport { Container, makeStyles, Typography } from '@material-ui/core';\r\nimport AvatarCard from '../components/AvatarCard';\r\nimport QwertycowMoo from '../images/QwertycowMoo.png';\r\nimport kgs5 from '../images/kgs5.png';\r\nimport renzol2 from '../images/renzol2.png';\r\nimport evanmm3 from '../images/evanmm3.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  page: {\r\n    backgroundColor: 'white',\r\n  },\r\n  p: {\r\n    marginTop: 8,\r\n    marginBottom: 8,\r\n  },\r\n  team: {\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    paddingBottom: 50,\r\n  },\r\n  avatarGroup: {\r\n    marginTop: 15,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'space-around',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n/**\r\n * About page for Pan-Lang\r\n * Provides background for our application and service\r\n */\r\nfunction About() {\r\n  const classes = useStyles();\r\n  const team = [\r\n    {\r\n      name: 'Kevin Zhou',\r\n      src: QwertycowMoo,\r\n      github: 'https://github.com/QwertycowMoo',\r\n      role: 'Lead Software Developer',\r\n    },\r\n    { name: 'Katie Sanders', src: kgs5, github: 'https://github.com/kgs5' },\r\n    {\r\n      name: 'Renzo Ledesma',\r\n      src: renzol2,\r\n      github: 'https://github.com/renzol2',\r\n    },\r\n    {\r\n      name: 'Evan Matthews',\r\n      src: evanmm3,\r\n      github: 'https://github.com/evanmm3',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container className={classes.page}>\r\n      <Container\r\n        maxWidth=\"md\"\r\n        style={{\r\n          paddingBottom: 120,\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        {/* Background */}\r\n        <Typography variant=\"h2\">\r\n          {'About '}\r\n          <font style={{ color: '#26B020', fontWeight: 'bold' }}>\r\n            Pan-Lang:\r\n          </font>\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.p}>\r\n          Pan-Lang is an organizational web application designed to help local\r\n          food bank organizers keep track of orders, maintain visitor records,\r\n          and communicate with non-English speaking patrons.\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.p}>\r\n          Food insecurity is an important issue in the Champain County\r\n          community. Nearly 15% of residents must deal with food insecurity.\r\n          Many of these individuals are also ineligible for federal nutrition\r\n          programs and must rely on local food pantries for meals.\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.p}>\r\n          On top of this, many of these individuals speak limited English,\r\n          making it difficult for them to communicate their needs to food pantry\r\n          staff. With Pan-Lang, our mission is to break this language barrier\r\n          and provide a more efficient method of supporting those in need.\r\n        </Typography>\r\n      </Container>\r\n\r\n      {/* Team */}\r\n      <Container className={classes.team}>\r\n        <Typography variant=\"h3\">Our Team</Typography>\r\n        <Container className={classes.avatarGroup}>\r\n          {team.map((member) => (\r\n            <AvatarCard\r\n              key={member.src}\r\n              name={member.name}\r\n              src={member.src}\r\n              alt={member.name}\r\n              role={member.role}\r\n              github={member.github}\r\n            />\r\n          ))}\r\n        </Container>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst orderSchema = Yup.object({\r\n  firstName: Yup.string().required(),\r\n  lastName: Yup.string().required(),\r\n  adults: Yup.number().moreThan(-1).required(),\r\n  children: Yup.number().moreThan(-1).required(),\r\n  zipcode: Yup.number().moreThan(9999).lessThan(100000).integer().required(),\r\n  orderNotes: Yup.string().required(),\r\n});\r\n\r\nfunction OrderForm() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Container style={{ backgroundColor: 'white', paddingBottom: 120 }}>\r\n      <h1 style={{ textAlign: 'center' }}>Order</h1>\r\n      <Formik\r\n        validationSchema={orderSchema}\r\n        onSubmit={(personInfo) => {\r\n          history.push('/order-stock', { fromForm: true, personInfo })\r\n        }}\r\n        initialValues={{\r\n          firstName: '',\r\n          lastName: '',\r\n          adults: -1,\r\n          children: -1,\r\n          zipcode: -1,\r\n          orderNotes: 'test'\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          errors,\r\n        }) => (\r\n          <div>\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Group md=\"4\" controlId=\"orderForm1\">\r\n                <Form.Label>First name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  placeholder={'Enter first name here'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.firstName && !errors.firstName}\r\n                  isInvalid={!!errors.firstName}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm2\">\r\n                <Form.Label>Last name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  placeholder={'Enter last name here'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.lastName && !errors.lastName}\r\n                  isInvalid={!!errors.lastName}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm3\">\r\n                <Form.Label># of Adults</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"adults\"\r\n                  placeholder={'Enter number of adults in household'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.adults && !errors.adults}\r\n                  isInvalid={!!errors.adults}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm4\">\r\n                <Form.Label># of Children</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"children\"\r\n                  placeholder={'Enter number of children in household'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.children && !errors.children}\r\n                  isInvalid={!!errors.children}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm4\">\r\n                <Form.Label>ZIP Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"zipcode\"\r\n                  placeholder={'Enter your ZIP Code'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.zipcode && !errors.zipcode}\r\n                  isInvalid={!!errors.zipcode}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n                <Button type=\"submit\" style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}} block>Select order</Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OrderForm;\r\n","import React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n/**\r\n * Component that wraps children in accordion\r\n */\r\nfunction AccordionWrapper({ summary, children }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"stock-input-content\"\r\n        id=\"stock-input-header\"\r\n      >\r\n        <Typography>{summary}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.details}>\r\n        {children}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  details: {\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nexport default AccordionWrapper;\r\n","import React from 'react';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\n/**\r\n * Component signifying an error has occurred\r\n */\r\nfunction ErrorAlert({ heading = '', body, onClose }) {\r\n  return (\r\n    <Alert severity=\"error\" onClose={onClose}>\r\n      {heading.length > 0 && <AlertTitle>{heading}</AlertTitle>}\r\n      {body}\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default ErrorAlert;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n/**\r\n * Centered spinner to signify loading\r\n */\r\nfunction Loading() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.spinnerDiv}>\r\n      <CircularProgress />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  spinnerDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nexport default Loading;\r\n","import Client from './Client';\r\n\r\nconst STOCK_ENDPOINT = '/stock';\r\n\r\nexport async function fetchStock() {\r\n  return await Client.get(STOCK_ENDPOINT);\r\n}\r\n\r\nexport async function createStockItem(item) {\r\n  Client.post(STOCK_ENDPOINT, item)\r\n    .then((res) => {\r\n      return true;\r\n    })\r\n    .catch((e) => {\r\n      return false;\r\n    });\r\n}\r\n\r\nexport async function updateStockCount(id, updated) {\r\n  return await Client.put(`${STOCK_ENDPOINT}/${id}`, updated)\r\n    .then((res) => {\r\n      console.log(res);\r\n      return true;\r\n    })\r\n    .catch((e) => {\r\n      console.error(e)\r\n      return false;\r\n    })\r\n}\r\n","import React, { useState } from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ErrorAlert from './ErrorAlert';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { updateStockCount } from '../api/Stock';\r\n\r\n/**\r\n * Popup modal for editing the stock count of an item\r\n */\r\nfunction StockModal({\r\n  show,\r\n  handleClose,\r\n  getStock,\r\n  stockId,\r\n  stockName,\r\n  stockCount,\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  /**\r\n   * Sends PUT request with updated stock count from input\r\n   * @param {Number} updatedCount updated count\r\n   */\r\n  async function onSubmit(updatedCount) {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      handleClose();\r\n      getStock(500);\r\n      alert('Not connected to API');\r\n    }, 500);\r\n\r\n    // TODO: send PUT request to API\r\n    // const updateIsSuccessful = await updateStockCount(stockId, updatedCount);\r\n\r\n    // setLoading(false);\r\n\r\n    // if (!updateIsSuccessful) {\r\n    //   setError(true);\r\n    // } else {\r\n    //   handleClose();\r\n    //   getStock(500);\r\n    // }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={show}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={show}>\r\n        <Paper className={classes.paper}>\r\n          <Formik\r\n            validationSchema={amountSchema}\r\n            onSubmit={onSubmit}\r\n            initialValues={{\r\n              newCount: '',\r\n            }}\r\n          >\r\n            {/* Formik component */}\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <>\r\n                <Typography variant=\"h5\">\r\n                  Edit amount for: {stockName}\r\n                </Typography>\r\n\r\n                {/* Text field for entering new amount */}\r\n                {!loading && !error && (\r\n                  <Container className={classes.form}>\r\n                    <Typography>Current amount: {stockCount}</Typography>\r\n                    <form onSubmit={handleSubmit}>\r\n                      <TextField\r\n                        id=\"newCount\"\r\n                        label=\"Enter new item count\"\r\n                        value={values.newCount}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={touched.newCount ? errors.newCount : ''}\r\n                        error={touched.newCount && Boolean(errors.newCount)}\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                      />\r\n                    </form>\r\n                  </Container>\r\n                )}\r\n\r\n                {/* Message when processing request */}\r\n                {loading && (\r\n                  <Typography>\r\n                    Updating stock count for {stockName}...\r\n                  </Typography>\r\n                )}\r\n\r\n                {/* Error message */}\r\n                {error && <ErrorAlert body=\"An error occurred.\" />}\r\n\r\n                {/* Action buttons */}\r\n                {!loading && (\r\n                  <Container className={classes.actions}>\r\n                    {/* Submit button */}\r\n                    {!error && (\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={handleSubmit}\r\n                        className={classes.button}\r\n                      >\r\n                        Save new amount\r\n                      </Button>\r\n                    )}\r\n\r\n                    {/* Close modal button */}\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      className={classes.closeButton}\r\n                      onClick={() => {\r\n                        // Set timer so buttons don't reappear during\r\n                        // fade out animation\r\n                        setTimeout(() => {\r\n                          setError(false);\r\n                          setLoading(false);\r\n                        }, 120);\r\n\r\n                        handleClose();\r\n                      }}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n                  </Container>\r\n                )}\r\n              </>\r\n            )}\r\n          </Formik>\r\n        </Paper>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n}\r\n\r\n// Schema for updating count\r\nconst amountSchema = Yup.object({\r\n  newCount: Yup.number().integer().moreThan(-1).required(),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    borderRadius: '15px',\r\n  },\r\n  button: {\r\n    backgroundColor: '#16AB8D',\r\n    borderColor: '#FFFFF5',\r\n    color: '#FFFFFF',\r\n    '&:hover': {\r\n      backgroundColor: '#119178',\r\n    },\r\n    width: '100%',\r\n    marginBottom: 5,\r\n  },\r\n  closeButton: {\r\n    width: '100%',\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default StockModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport StockModal from './StockModal';\r\n\r\n/**\r\n * Card component that displays a stock item and allows\r\n * for editing its amount through a modal popup\r\n */\r\nfunction StockCard({ stockItem, getStock, lang = 'name' }) {\r\n  const [showAmountModal, setShowAmountModal] = useState(false);\r\n  const [hasLanguage, setHasLanguage] = useState(false);\r\n\r\n  // Handlers for showing/closing modal when editing item amount\r\n  const handleClose = () => setShowAmountModal(false);\r\n  const handleShow = () => setShowAmountModal(true);\r\n\r\n  // Determine whether this stock item has a name in the specified language\r\n  useEffect(() => {\r\n    setHasLanguage(stockItem[lang] !== undefined);\r\n  }, [lang, stockItem]);\r\n\r\n  /**\r\n   * Gets a String representing an item's timestamp\r\n   * @param {Object} stockItem\r\n   */\r\n  function getItemDateString(stockItem) {\r\n    let seconds = stockItem.timestamp._seconds;\r\n    // Date constructor takes in milliseconds\r\n    return new Date(seconds * 1000).toDateString().substr(3);\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Fade in={true}>\r\n        <Card className={classes.card} onClick={handleShow}>\r\n          {/* Action area makes entire component focusable */}\r\n          <CardActionArea className={classes.cardAction}>\r\n            <CardContent>\r\n              {/* Top content of card */}\r\n              <Box className={classes.topContent}>\r\n                {/* Name and translation (left) */}\r\n                <Box className={classes.nameContainer}>\r\n                  {/* Name */}\r\n                  <Typography variant=\"h4\" className={classes.name}>\r\n                    {hasLanguage ? stockItem[lang] : stockItem.name}\r\n                  </Typography>\r\n\r\n                  {/* Translation */}\r\n                  <Typography variant=\"h5\" className={classes.subname}>\r\n                    {hasLanguage && lang !== 'name' ? stockItem.name : ''}\r\n                  </Typography>\r\n\r\n                  {/* No translation alert */}\r\n                  {!hasLanguage && (\r\n                    <Chip\r\n                      className={classes.noTranslation}\r\n                      size=\"small\"\r\n                      color=\"secondary\"\r\n                      label={'Translation unavailable'}\r\n                    />\r\n                  )}\r\n                </Box>\r\n\r\n                {/* Count (right) */}\r\n                <Box className={classes.countContainer}>\r\n                  <Typography className={classes.countHeader}>Count</Typography>\r\n                  <Typography className={classes.count}>\r\n                    {stockItem.count}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Bottom content */}\r\n              <Box className={classes.bottomContent}>\r\n                {/* Date */}\r\n                <Typography className={classes.date}>\r\n                  Updated:{' '}\r\n                  {stockItem.timestamp !== undefined\r\n                    ? getItemDateString(stockItem)\r\n                    : 'Unavailable'}\r\n                </Typography>\r\n\r\n                {/* Out of stock alert */}\r\n                {stockItem.count <= 0 && (\r\n                  <Chip size=\"small\" color=\"secondary\" label={'Out of stock'} />\r\n                )}\r\n              </Box>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Fade>\r\n\r\n      {/* Popup modal for editing stock count */}\r\n      <StockModal\r\n        show={showAmountModal}\r\n        handleClose={handleClose}\r\n        getStock={getStock}\r\n        stockName={hasLanguage ? stockItem[lang] : stockItem.name}\r\n        // FIXME: Figure out what the schema for sending PUT requests is\r\n        stockId={stockItem._id !== undefined ? stockItem._id : 'no id lol'}\r\n        stockCount={stockItem.count}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(1),\r\n    borderRadius: '30px',\r\n    maxWidth: '100vw',\r\n  },\r\n  cardAction: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(0),\r\n    [theme.breakpoints.only('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.only('xs')]: {\r\n      paddingLeft: theme.spacing(0),\r\n      paddingRight: theme.spacing(0),\r\n    },\r\n  },\r\n  topContent: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  bottomContent: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-end',\r\n  },\r\n  nameContainer: {},\r\n  name: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '22px',\r\n    },\r\n  },\r\n  noTranslation: {\r\n    marginTop: 5,\r\n  },\r\n  subname: {\r\n    marginTop: -8,\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '18px',\r\n      marginTop: -4,\r\n    },\r\n  },\r\n  date: {\r\n    color: 'gray',\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '12px',\r\n    },\r\n  },\r\n  countContainer: {},\r\n  countHeader: {\r\n    textAlign: 'right',\r\n  },\r\n  count: {\r\n    marginTop: -10,\r\n    fontWeight: 'bold',\r\n    fontSize: '40px',\r\n    textAlign: 'right',\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '27px',\r\n    },\r\n  },\r\n  button: {\r\n    alignSelf: 'center',\r\n    backgroundColor: '#16AB8D',\r\n    borderColor: '#FFFFF5',\r\n    color: '#FFFFFF',\r\n  },\r\n}));\r\n\r\nexport default StockCard;\r\n","import React from 'react';\r\nimport { MenuItem, Menu, Button, makeStyles } from '@material-ui/core';\r\n\r\n/**\r\n * Menu to select language when viewing Stock\r\n */\r\nfunction LanguageMenu({\r\n  languages = [],\r\n  currentLanguage,\r\n  buttonClass,\r\n  capitalize,\r\n  setLanguage,\r\n  isError = false,\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setLanguage(event.currentTarget.textContent.toLowerCase());\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {/* Button to toggle menu */}\r\n      <Button onClick={handleClickListItem} className={buttonClass}>\r\n        {`Language: ${capitalize(currentLanguage)}`}\r\n      </Button>\r\n\r\n      {/* Language menu */}\r\n      <Menu\r\n        id=\"language-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {languages.map((lang, index) => (\r\n          <MenuItem\r\n            key={lang}\r\n            selected={index === selectedIndex}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n            className={classes.menuItem}\r\n          >\r\n            {capitalize(lang)}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuItem: {\r\n    paddingLeft: '50px',\r\n    paddingRight: '50px',\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nexport default LanguageMenu;\r\n","import React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n/**\r\n * Form component that handles creation of new stock items\r\n */\r\nfunction StockInputForm({\r\n  values,\r\n  touched,\r\n  errors,\r\n  isSubmitting,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  handleReset,\r\n}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Accordion>\r\n        {/* Accordion toggle area */}\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"stock-input-content\"\r\n          id=\"stock-input-header\"\r\n        >\r\n          <Typography>Click here to insert a stock item</Typography>\r\n        </AccordionSummary>\r\n\r\n        {/* Accordion expandable area */}\r\n        <AccordionDetails className={classes.details}>\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Item name text field */}\r\n            <TextField\r\n              id=\"itemName\"\r\n              label=\"Enter new item name\"\r\n              value={values.itemName}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.itemName ? errors.itemName : ''}\r\n              error={touched.itemName && Boolean(errors.itemName)}\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n\r\n            {/* Item count text field */}\r\n            <TextField\r\n              id=\"itemCount\"\r\n              label=\"Enter new item count\"\r\n              value={values.itemCount}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.itemCount ? errors.itemCount : ''}\r\n              error={touched.itemCount && Boolean(errors.itemCount)}\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n\r\n            {/* Form buttons */}\r\n            <Container className={classes.actions}>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={isSubmitting}\r\n                className={classes.button}\r\n              >\r\n                {isSubmitting ? 'Adding...' : 'Add item'}\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={handleReset}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Container>\r\n          </form>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Formik wrapper for component\r\nconst StockInput = withFormik({\r\n  // Assigns default values\r\n  mapPropsToValues: ({ itemName, itemCount }) => {\r\n    return {\r\n      itemName: itemName || '',\r\n      itemCount: itemCount || 1,\r\n    };\r\n  },\r\n\r\n  // Schema for validation\r\n  validationSchema: Yup.object({\r\n    itemName: Yup.string().required(),\r\n    itemCount: Yup.number().integer().moreThan(-1).required(),\r\n  }),\r\n\r\n  // Function upon submitting form\r\n  handleSubmit: (values, { setSubmitting }) => {\r\n    setTimeout(() => {\r\n      // TODO: send information to API\r\n      alert('API not connected');\r\n      setSubmitting(false);\r\n    }, 1000);\r\n  },\r\n})(StockInputForm);\r\n\r\n// Styling\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: '100%',\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    paddingBottom: 0,\r\n  },\r\n  button: {\r\n    backgroundColor: '#16AB8D',\r\n    '&:hover': {\r\n      backgroundColor: '#119178',\r\n    },\r\n    borderColor: '#FFFFF5',\r\n    color: '#FFFFFF',\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default StockInput;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport LanguageMenu from './LanguageMenu';\r\nimport StockInput from './StockInput';\r\n\r\n/**\r\n * Options on stock dashboard\r\n * - Language selection\r\n * - Refresh stock list\r\n * - Form to create new stock items\r\n */\r\nfunction StockOptions({\r\n  languages,\r\n  currentLanguage,\r\n  capitalize,\r\n  setLanguage,\r\n  isError,\r\n  getStock,\r\n}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box>\r\n      {/* Button bar */}\r\n      <Container className={classes.buttonBar}>\r\n        {/* Language selection */}\r\n        <LanguageMenu\r\n          languages={languages}\r\n          currentLanguage={currentLanguage}\r\n          buttonClass={classes.button}\r\n          capitalize={capitalize}\r\n          setLanguage={setLanguage}\r\n          isError={isError}\r\n        />\r\n\r\n        {/* Refresh */}\r\n        <Button size=\"medium\" onClick={getStock} className={classes.button}>\r\n          Refresh stock list\r\n        </Button>\r\n      </Container>\r\n\r\n      {/* Input to create stock item */}\r\n      {<StockInput getStock={getStock} />}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  buttonBar: {\r\n    paddingBottom: 10,\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  button: {\r\n    backgroundColor: '#16AB8D',\r\n    borderColor: '#FFFFF5',\r\n    color: '#FFFFFF',\r\n    textTransform: 'none',\r\n    '&:hover': {\r\n      backgroundColor: '#119178',\r\n    },\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n  },\r\n});\r\n\r\nexport default StockOptions;\r\n","const LANGUAGES = ['english', 'spanish', 'french', 'chinese', 'german'];\r\n\r\nexport default LANGUAGES;","import React, { useEffect, useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Search from '@material-ui/icons/Search';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\r\nimport AccordionWrapper from '../components/AccordionWrapper';\r\nimport ErrorAlert from '../components/ErrorAlert';\r\nimport Loading from '../components/Loading';\r\nimport StockCard from '../components/StockCard';\r\nimport StockOptions from '../components/StockOptions';\r\nimport LANGUAGES from '../constants/Languages';\r\nimport { fetchStock } from '../api/Stock';\r\n\r\n/**\r\n * Page displaying the stock of food pantry with options for language\r\n */\r\nfunction Stock() {\r\n  const [stock, setStock] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [language, setLanguage] = useState(LANGUAGES[0]);\r\n  const [nameQuery, setNameQuery] = useState('');\r\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('md'));\r\n\r\n  /**\r\n   * Fetches stock from API and stores in state\r\n   * @param {Number} timeout ms to wait before fetching stock\r\n   */\r\n  function getStock(timeout = 0) {\r\n    // Set stock empty to begin loading spinner\r\n    setStock([]);\r\n    setError(null);\r\n\r\n    // Fetch stock after designated time\r\n    setTimeout(() => {\r\n      fetchStock()\r\n        .then((res) => {\r\n          setStock(res.data);\r\n        })\r\n        .catch((e) => {\r\n          setError(e);\r\n        });\r\n    }, timeout);\r\n  }\r\n\r\n  /**\r\n   * Fetch stock as soon as page is rendered\r\n   */\r\n  useEffect(() => {\r\n    getStock();\r\n  }, []);\r\n\r\n  /**\r\n   * Capitalizes the first letter of a string\r\n   * @param {String} s string to capitalize\r\n   */\r\n  function capitalize(s) {\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  /**\r\n   * Returns filtered stock array based on search queries\r\n   * Name query: allows if EITHER English or translated name includes query\r\n   */\r\n  function getFilteredStockItems() {\r\n    return stock.filter((item) => {\r\n      let inEnglishName = item.name.toLowerCase().includes(nameQuery);\r\n      let inTranslatedName =\r\n        item[language] === undefined\r\n          ? false\r\n          : item[language].toLowerCase().includes(nameQuery);\r\n      return inEnglishName || inTranslatedName;\r\n    });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Typography variant=\"h1\" className={classes.title}>\r\n        Stock Dashboard\r\n      </Typography>\r\n\r\n      {/* Two column desktop layout, one column mobile layout */}\r\n      <Grid container spacing={isMobile ? 0 : 2}>\r\n        {/* Left column */}\r\n        <Grid item xs={12} md={4}>\r\n          {/* On mobile: hide options in accordion */}\r\n          {isMobile && (\r\n            <AccordionWrapper summary=\"Options\">\r\n              <StockOptions\r\n                languages={LANGUAGES}\r\n                currentLanguage={language}\r\n                setLanguage={setLanguage}\r\n                capitalize={capitalize}\r\n                getStock={getStock}\r\n                isError={error}\r\n              />\r\n            </AccordionWrapper>\r\n          )}\r\n\r\n          {/* On desktop: keep options bar open */}\r\n          {!isMobile && (\r\n            <Paper elevation={2} className={classes.column}>\r\n              <Typography variant=\"h5\" className={classes.subheading}>\r\n                Options\r\n              </Typography>\r\n              <StockOptions\r\n                languages={LANGUAGES}\r\n                currentLanguage={language}\r\n                setLanguage={setLanguage}\r\n                capitalize={capitalize}\r\n                getStock={getStock}\r\n                isError={error}\r\n              />\r\n            </Paper>\r\n          )}\r\n        </Grid>\r\n\r\n        {/* Right column */}\r\n        <Grid item xs={12} md={8}>\r\n          {/* Search bar */}\r\n          <Paper elevation={1} className={classes.searchPaper}>\r\n            <TextField\r\n              className={classes.search}\r\n              id=\"searchbar\"\r\n              label=\"Search items\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Search />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={(event) =>\r\n                setNameQuery(event.target.value.toLowerCase())\r\n              }\r\n            />\r\n          </Paper>\r\n\r\n          {/* Stock items */}\r\n          {stock &&\r\n            getFilteredStockItems().map((item) => (\r\n              <StockCard\r\n                stockItem={item}\r\n                getStock={getStock}\r\n                // Key of English name is always 'name'\r\n                lang={language === 'english' ? 'name' : language}\r\n                key={item.name}\r\n              />\r\n            ))}\r\n\r\n          {/* Loading spinner */}\r\n          {stock.length === 0 && !error && <Loading />}\r\n\r\n          {/* Error alert */}\r\n          {error && (\r\n            <ErrorAlert\r\n              heading=\"Error\"\r\n              body={`An error occurred while trying to get the stock. ${error}`}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.only('xs')]: {\r\n      paddingLeft: 2,\r\n      paddingRight: 2,\r\n    },\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontSize: theme.typography.h3.fontSize,\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: theme.typography.h4.fontSize,\r\n    },\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheading: {\r\n    textAlign: 'center',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  column: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  searchPaper: {\r\n    margin: 5,\r\n    padding: theme.spacing(2),\r\n  },\r\n  search: {\r\n    width: '95%',\r\n  },\r\n  details: {\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nexport default Stock;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, ButtonGroup } from 'react-bootstrap';\r\n\r\n/**\r\n * Allows user to select how much of a stock item to request\r\n */\r\nfunction OrderModal({\r\n  show,\r\n  handleClose,\r\n  getStock,\r\n  stockId,\r\n  stockName,\r\n  stockCount,\r\n  onRequest,\r\n}) {\r\n  // Currently requested amount\r\n  const [selectedAmount, setSelectedAmount] = useState(1);\r\n\r\n  function handleDecrease() {\r\n    if (selectedAmount > 1) setSelectedAmount(selectedAmount - 1);\r\n  }\r\n\r\n  function handleIncrease() {\r\n    if (selectedAmount < stockCount) setSelectedAmount(selectedAmount + 1);\r\n  }\r\n\r\n  function submitRequest() {\r\n    const requestedItem = {\r\n      id: stockId,\r\n      name: stockName,\r\n      requestedCount: selectedAmount,\r\n      countAfterRequest: stockCount - selectedAmount,\r\n    };\r\n    console.log(\"submitRequest -> stockCount\", stockCount)\r\n    console.log(\"submitRequest -> selectedAmount\", selectedAmount)\r\n    \r\n    console.log(\"countAfterRequest ->\", requestedItem.countAfterRequest);\r\n\r\n    onRequest(requestedItem);\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Select requested amount for: {stockName}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>\r\n          Current amount: <b>{stockCount}</b>\r\n        </p>\r\n        <p>\r\n          Amount after order: <b>{stockCount - selectedAmount}</b>\r\n        </p>\r\n        <ButtonGroup\r\n          aria-label=\"Stock item request buttons\"\r\n          style={{ display: 'flex', alignItems: 'center' }}\r\n        >\r\n          <Button size=\"lg\" \r\n          style={{backgroundColor: '#16AB8D', borderColor: '#FFFFFF', color: '#FFFFFF'}}\r\n          onClick={handleDecrease}>\r\n            -\r\n          </Button>\r\n          <Button size=\"lg\" variant=\"secondary\" style={{borderColor: '#FFFFFF'}} disabled>\r\n            {selectedAmount}\r\n          </Button>\r\n          <Button size=\"lg\"\r\n          style={{backgroundColor: '#2EFFD5', borderColor: '#FFFFFF', color: '#FFFFFF'}}\r\n          onClick={handleIncrease}>\r\n            +\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" style={{borderRadius: '200px'}} onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button onClick={submitRequest}\r\n        style={{backgroundColor: '#35E82A', borderColor: '#35E82A', borderRadius: '200px', color: '#FFFFFF'}}>\r\n          Request amount\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default OrderModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Badge, Container, Card } from 'react-bootstrap';\r\nimport OrderModal from './OrderModal';\r\n\r\n/**\r\n * Stock item card on order screen\r\n */\r\nfunction OrderCard({\r\n  stockItem,\r\n  getStock,\r\n  lang = 'name',\r\n  onRequest,\r\n  isRequested = false,\r\n}) {\r\n  const [showOrderModal, setShowAmountModal] = useState(false);\r\n  const [hasLanguage, setHasLanguage] = useState(false);\r\n\r\n  // Handlers for showing/closing modal when ordering item\r\n  const handleClose = () => setShowAmountModal(false);\r\n  const handleShow = () => setShowAmountModal(true);\r\n\r\n  // Determine whether this stock item has a name in the specified language\r\n  useEffect(() => {\r\n    setHasLanguage(stockItem[lang] !== undefined);\r\n  }, [lang, stockItem]);\r\n\r\n  function getRequestButtonText() {\r\n    if (stockItem.count <= 0) {\r\n      return 'Out of stock';\r\n    } else if (isRequested) {\r\n      return 'Edit requested amount';\r\n    } else {\r\n      return 'Request item';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ margin: 5 }}>\r\n        <Card.Body>\r\n          <Card.Header as=\"h2\">\r\n            {hasLanguage ? stockItem[lang] : stockItem.name}\r\n            {lang !== 'name' && hasLanguage\r\n              ? ' (' + stockItem['name'] + ')'\r\n              : ''}\r\n          </Card.Header>\r\n\r\n          <Card.Text>\r\n            Amount:{' '}\r\n            <font style={{ fontSize: '1.4em', fontWeight: 'bolder' }}>\r\n              {stockItem.count}\r\n            </font>\r\n          </Card.Text>\r\n          <Container\r\n            style={{ display: 'flex', alignItems: 'center', padding: 0 }}\r\n          >\r\n            {!hasLanguage && (\r\n              <Badge variant=\"danger\">Language unavailable: {lang}</Badge>\r\n            )}\r\n            <div style={{ margin: 'left' }} />\r\n            <Button\r\n              size=\"lg\"\r\n              style={{alignSelf: 'left', backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}\r\n              onClick={handleShow}\r\n              disabled={stockItem.count <= 0}\r\n            >\r\n              {getRequestButtonText()}\r\n            </Button>\r\n          </Container>\r\n          <Card.Text style={{ textAlign: 'right' }}>\r\n            Last updated:{' '}\r\n            {stockItem.timestamp !== undefined\r\n              ? new Date(stockItem.timestamp).toDateString()\r\n              : 'Unavailable'}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <OrderModal\r\n        show={showOrderModal}\r\n        handleClose={handleClose}\r\n        getStock={getStock}\r\n        stockName={stockItem.name}\r\n        stockId={stockItem._id}\r\n        stockCount={stockItem.count}\r\n        onRequest={onRequest}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderCard;\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n/**\r\n * Modal to give user confirmation upon completing action\r\n */\r\nfunction ConfirmationModal({ title, body, buttonText, show, handleClose }) {  \r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {title}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        {body}\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button onClick={handleClose}\r\n        style={{backgroundColor: '#16AB8D', borderColor: '#16AB8D', borderRadius: '200px', color: '#FFFFFF'}}>\r\n          {buttonText}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport OrderCard from '../components/OrderCard';\r\nimport Loading from '../components/Loading';\r\nimport { fetchStock } from '../api/Stock';\r\nimport LANGUAGES from '../constants/Languages';\r\nimport { Container, Dropdown, Button } from 'react-bootstrap';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addPersonInfo } from '../api/People';\r\nimport { updateStockCount } from '../api/Stock';\r\nimport ConfirmationModal from '../components/ConfirmationModal';\r\nimport ErrorAlert from '../components/ErrorAlert';\r\n\r\n/**\r\n * Allows user to order stock items only after they've filled out form\r\n */\r\nfunction OrderStock() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const fromForm = location.state !== undefined;\r\n\r\n  const [stock, setStock] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [language, setLanguage] = useState(LANGUAGES[0]);\r\n  const [personInfo, setPersonInfo] = useState(\r\n    fromForm\r\n      ? location.state.personInfo\r\n      : retrieveFromStorage('personInfo', undefined)\r\n  );\r\n  const [requestedStockItems, setRequestedStockItems] = useState(\r\n    retrieveFromStorage('requestedStockItems', [])\r\n  );\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Send user back to form if they didn't fill it out\r\n    if (!personInfo) {\r\n      history.push('/order');\r\n    } else {\r\n      localStorage.setItem('personInfo', JSON.stringify(personInfo));\r\n      getStock();\r\n      console.log(personInfo);\r\n    }\r\n  }, [fromForm, history, personInfo]);\r\n\r\n  function retrieveFromStorage(key, defaultValue) {\r\n    const stored = localStorage.getItem(key);\r\n    if (stored) {\r\n      return JSON.parse(stored);\r\n    } else {\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  function getStock(timeout = 0) {\r\n    // Set stock empty to begin loading spinner\r\n    setStock([]);\r\n    setError(false);\r\n\r\n    // Fetch stock after designated time\r\n    setTimeout(() => {\r\n      fetchStock()\r\n        .then((res) => {\r\n          setStock(res.data);\r\n        })\r\n        .catch((e) => setError(true));\r\n    }, timeout);\r\n  }\r\n\r\n  function capitalize(s) {\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  /**\r\n   * Callback for OrderModal to add item to items list\r\n   * @param {Object} requestedItem { id, name, requestedCount, countAfterRequest }\r\n   */\r\n  function onRequest(requestedItem) {\r\n    // Check if item is already in list\r\n    let alreadyRequested = requestedStockItems.find(\r\n      (item) => item.id === requestedItem.id\r\n    );\r\n\r\n    let updatedRequestedItems;\r\n\r\n    if (alreadyRequested === undefined) {\r\n      // If item isn't in list, simply add it\r\n      updatedRequestedItems = requestedStockItems.concat(requestedItem);\r\n    } else {\r\n      // If item is already in list, update its values instead of adding\r\n      let itemIndex = requestedStockItems.indexOf(alreadyRequested);\r\n\r\n      updatedRequestedItems = [...requestedStockItems];\r\n\r\n      // Replace old values with new values\r\n      updatedRequestedItems[itemIndex].requestedCount =\r\n        requestedItem.requestedCount;\r\n      updatedRequestedItems[itemIndex].countAfterRequest =\r\n        requestedItem.countAfterRequest;\r\n    }\r\n\r\n    // Update state and local storage\r\n    setRequestedStockItems(updatedRequestedItems);\r\n    localStorage.setItem(\r\n      'requestedStockItems',\r\n      JSON.stringify(updatedRequestedItems)\r\n    );\r\n  }\r\n\r\n  function writeRequestToNotes() {\r\n    let orderNotes = '';\r\n    requestedStockItems.forEach((item) => {\r\n      orderNotes += item.name + ': ' + item.requestedCount + ', ';\r\n    });\r\n    return orderNotes.slice(0, -2);\r\n  }\r\n\r\n  function submitRequest() {\r\n    // Send full person info to API\r\n    const requestBody = {\r\n      firstname: personInfo.firstName,\r\n      lastname: personInfo.lastName,\r\n      adults: personInfo.adults,\r\n      children: personInfo.adults,\r\n      zipcode: personInfo.zipcode,\r\n      'order-notes': writeRequestToNotes(),\r\n      fulfilled: false,\r\n    };\r\n    addPersonInfo(requestBody);\r\n\r\n    // Send updates for each requested item to API\r\n    const stockUpdatePromises = requestedStockItems.map((item) => {\r\n      console.log('making promise... ', item.countAfterRequest);\r\n      return updateStockCount(item.id, { newCount: item.countAfterRequest });\r\n    });\r\n\r\n    Promise.all(stockUpdatePromises).then((responses) =>\r\n      console.log(responses)\r\n    );\r\n\r\n    // Clear local storage\r\n    localStorage.removeItem('requestedStockItems');\r\n    localStorage.removeItem('personInfo');\r\n\r\n    // Show confirmation popup\r\n    setShowConfirmation(true);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1 style={{ textAlign: 'center' }}>Select stock here</h1>\r\n\r\n      {requestedStockItems.map((r) => (\r\n        <p key={r.name}>\r\n          {r.name}: {r.requestedCount}\r\n        </p>\r\n      ))}\r\n\r\n      {!error && (\r\n        <Button\r\n          variant=\"type\"\r\n          className=\"mb-3\"\r\n          onClick={submitRequest}\r\n          block\r\n          style={{\r\n            backgroundColor: '#16AB8D',\r\n            borderColor: '#FFFFF5',\r\n            color: '#FFFFFF',\r\n            borderRadius: '200px',\r\n          }}\r\n          disabled={requestedStockItems.length === 0}\r\n        >\r\n          {requestedStockItems.length > 0\r\n            ? 'Submit request'\r\n            : 'Select items below'}\r\n        </Button>\r\n      )}\r\n\r\n      <Container style={{ display: 'flex', alignItems: 'center', padding: 0 }}>\r\n        <Dropdown variant=\"type\" onChange={(e) => console.log(e)}>\r\n          <Dropdown.Toggle\r\n            variant=\"type\"\r\n            id=\"dropdown-basic\"\r\n            size=\"md\"\r\n            className=\"mb-3\"\r\n            style={{\r\n              backgroundColor: '#16AB8D',\r\n              borderColor: '#FFFFF5',\r\n              color: '#FFFFFF',\r\n              borderRadius: '200px',\r\n            }}\r\n          >\r\n            Language: <b>{capitalize(language)}</b>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            {LANGUAGES.map((lang) => (\r\n              <Dropdown.Item\r\n                onSelect={(key) => setLanguage(key)}\r\n                eventKey={lang}\r\n                key={lang}\r\n              >\r\n                {capitalize(lang)}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <div style={{ margin: 'auto' }} />\r\n        <Button\r\n          variant=\"type\"\r\n          size=\"md\"\r\n          onClick={getStock}\r\n          style={{\r\n            backgroundColor: '#16AB8D',\r\n            borderColor: '#FFFFF5',\r\n            color: '#FFFFFF',\r\n            borderRadius: '200px',\r\n          }}\r\n        >\r\n          Refresh\r\n        </Button>\r\n      </Container>\r\n\r\n      {/* List of stock */}\r\n      {stock.length === 0 && !error && <Loading />}\r\n      {stock &&\r\n        personInfo &&\r\n        stock.map((item) => (\r\n          <OrderCard\r\n            stockItem={item}\r\n            getStock={getStock}\r\n            lang={language === 'english' ? 'name' : language}\r\n            key={item._id}\r\n            onRequest={onRequest}\r\n            isRequested={requestedStockItems.some(\r\n              (requested) => item._id === requested.id\r\n            )}\r\n          />\r\n        ))}\r\n      {error && (\r\n        <ErrorAlert\r\n          heading=\"Error\"\r\n          body=\"An error occurred while trying to get the stock.\"\r\n          dismissible={false}\r\n        />\r\n      )}\r\n\r\n      {/* Confirmation popup */}\r\n      <ConfirmationModal\r\n        style={{\r\n          backgroundColor: '#16AB8D',\r\n          borderColor: '#16AB8D',\r\n          color: '#FFFFFF',\r\n        }}\r\n        title=\"Order successfully placed!\"\r\n        body=\"Thanks for your patronage! Your order will be fulfilled shortly.\"\r\n        buttonText=\"Back to Home\"\r\n        show={showConfirmation}\r\n        handleClose={() => {\r\n          setShowConfirmation(false);\r\n          history.push('/'); // Redirect back home\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OrderStock;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\n/**\r\n * Confirmation modal when fulfilling a person's order\r\n */\r\nfunction FulfillModal({ person, show, handleClose, fulfillPerson }) {\r\n  /**\r\n   * Handles confirmation of fulfilling a person's order\r\n   */\r\n  function handleConfirm() {\r\n    fulfillPerson(person._id);\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>Confirm fulfillment</Modal.Header>\r\n      <Modal.Body>\r\n        <h5>\r\n          Are you sure that {person.firstname}'s order is correct and has been\r\n          fulfilled?\r\n        </h5>\r\n        <p>{person['order-notes']}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" style={{borderRadius: '200px'}} onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button onClick={handleConfirm}\r\n        style={{backgroundColor: '#35E82A', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}>\r\n          Confirm fulfillment\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default FulfillModal;\r\n","import React, { useState } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport FulfillModal from './FulfillModal';\r\n\r\n/**\r\n * Displays:\r\n * - person's name\r\n * - order notes\r\n * - button that sends a socket emit to backend that\r\n *   sets fulfill to true\r\n */\r\nfunction UnfulfilledOrderCard({ person, fulfillPerson }) {\r\n  const [showFulfillModal, setShowFulfillModal] = useState(false);\r\n\r\n  // Handlers for showing/closing modal when ordering item\r\n  const handleClose = () => setShowFulfillModal(false);\r\n  const handleShow = () => setShowFulfillModal(true);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        key={person._id}\r\n        size=\"lg\"\r\n        style={{ margin: 5 }}\r\n      >\r\n        <Card.Body>\r\n          <Card.Header as=\"h2\">\r\n            {person.firstname} {person.lastname}\r\n          </Card.Header>\r\n          <Card.Text>{person['order-notes']}</Card.Text>\r\n          <Button onClick={handleShow} block\r\n          style={{backgroundColor: '#16AB8D', borderColor: '#16AB8D', borderRadius: '200px', color: '#FFFFFF'}}>\r\n            Fulfill Order\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <FulfillModal\r\n        person={person}\r\n        show={showFulfillModal}\r\n        handleClose={handleClose}\r\n        fulfillPerson={fulfillPerson}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnfulfilledOrderCard;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport cart from '../images/empty-cart.svg';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    justifyContent: 'center',\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  image: {\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25),\r\n    marginTop: theme.spacing(20),\r\n  },\r\n  grid: {\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst Theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#00c853',\r\n    },\r\n    secondary: {\r\n      main: '#00c853',\r\n    },\r\n    action: {\r\n      main: '#00c853',\r\n    },\r\n  },\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MuiThemeProvider theme={Theme}>\r\n        <Dialog\r\n          open={open}\r\n          maxWidth=\"lg\"\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n          className={classes.dialog}\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {'No orders at the moment'}\r\n          </DialogTitle>\r\n          <DialogActions className={classes.button}>\r\n            <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </MuiThemeProvider>\r\n      <Grid container className={classes.grid}>\r\n        <Grid item lg={4} sm={4}></Grid>\r\n        <Grid item xs={12} lg={4} sm={4} className={classes.grid}>\r\n          <img alt=\"Shopping cart\" src={cart} className={classes.image} />\r\n        </Grid>\r\n        <Grid item lg={4} sm={4}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport Container from 'react-bootstrap/Container';\r\nimport UnfulfilledOrderCard from '../components/UnfulfilledOrderCard';\r\nimport { BASE_API_URL } from '../api/Client';\r\nimport Dialog from '../components/Dialog'\r\n\r\n/**\r\n * Page with list of people with unfulfilled orders\r\n */\r\nfunction OrderTracker() {\r\n  const [ordersList, setOrdersList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(BASE_API_URL);\r\n    socket.on('person', (data) => {\r\n      eventHandler(data);\r\n    });\r\n\r\n    const eventHandler = (personData) => {\r\n      setOrdersList((currentOrders) => [...currentOrders, personData]);\r\n    };\r\n\r\n    return () => {\r\n      console.log('effect done');\r\n      socket.disconnect();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function personFulfilled(id) {\r\n    const socket = socketIOClient(BASE_API_URL);\r\n    console.log('printing socket object: ');\r\n    console.log(socket);\r\n\r\n    console.log('emitting personfulfilled');\r\n    socket.emit('personFulfilled', id);\r\n    socket.on('personFulfillSuccess', function (confirmation) {\r\n      console.log('confirmed ' + confirmation);\r\n      socket.disconnect();\r\n    });\r\n    // Remove fulfilled order from list after emitting fulfillment through socket\r\n    setOrdersList(ordersList.filter((order) => order._id !== id));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {ordersList.length === 0 && <Dialog/>}\r\n      {ordersList &&\r\n        ordersList.map((order) => (\r\n          <UnfulfilledOrderCard\r\n            fulfillPerson={personFulfilled}\r\n            person={order}\r\n            key={order._id}\r\n          />\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OrderTracker;\r\n","import React, { useState } from 'react';\r\nimport { Card, FormControl, InputGroup } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Login() {\r\n  const [pantryName, setPantryName] = useState('');\r\n\r\n  function handlePantryNameChange(e) {\r\n    setPantryName(e.target.value);\r\n  }\r\n\r\n  function handleLogin() {\r\n    console.log(`log in to pantry: ${pantryName}`);\r\n  }\r\n\r\n  function handleSignup() {\r\n    console.log('signup');\r\n  }\r\n\r\n  return (\r\n    <Container style={{ textAlign: 'center' }}>\r\n      <h1>Log In</h1>\r\n      <Card className=\"mb-3\">\r\n        <Card.Body>\r\n          <p>Gain full access to your pantry's stock and current orders.</p>\r\n          <InputGroup\r\n            className=\"mb-3\"\r\n            size=\"lg\"\r\n            onChange={handlePantryNameChange}\r\n          >\r\n            <FormControl\r\n              aria-label=\"Default\"\r\n              placeholder=\"Enter your pantry name here\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n          </InputGroup>\r\n          <Button style={{ backgroundColor: 'green' }} onClick={handleLogin}>\r\n            Login to your pantry\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card>\r\n        <Card.Body>\r\n          <p>Don't have a pantry with us yet?</p>\r\n          <Button style={{ backgroundColor: 'green' }} onClick={handleSignup}>\r\n            Sign up to create a pantry\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/Navbar/';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport Order from './pages/Order';\r\nimport Stock from './pages/Stock';\r\nimport OrderStock from './pages/OrderStock';\r\nimport OrderTracker from './pages/OrderTracker';\r\nimport Login from './pages/Login';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Navbar />\r\n      {/* FIXME: naive fix for keeping a fixed navbar */}\r\n      <div style={{ padding: 55 }} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/stock\">\r\n          <Stock />\r\n        </Route>\r\n        <Route path=\"/order\">\r\n          <Order />\r\n        </Route>\r\n        <Route path=\"/order-stock\">\r\n          <OrderStock />\r\n        </Route>\r\n        <Route path=\"/order-tracker\"> \r\n          <OrderTracker />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <h1>\r\n            Welcome to <font style={{ color: '#26B020' }}>Pan-Lang</font>!\r\n          </h1>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <App />\r\n    </React.Fragment>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}