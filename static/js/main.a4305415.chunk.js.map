{"version":3,"sources":["constants/Routes.js","images/logo_nobg.png","api/Pantry.js","firebase.js","images/QwertycowMoo.png","images/kgs5.png","images/renzol2.png","images/evanmm3.png","components/NavDrawer.js","images/empty-cart.svg","components/Navbar/CollapsingMenu.js","components/Navbar/index.js","constants/Landing.js","components/Footer.js","pages/Home/Landing.js","api/People.js","components/CSVModal.js","constants/Theme.js","pages/Home/User.js","pages/Home/index.js","components/AvatarCard.js","pages/About.js","constants/Order.js","pages/Order.js","components/ErrorAlert.js","components/Loading.js","api/Stock.js","components/StockModal.js","components/StockInfo.js","hooks/useLanguage.js","components/StockCard.js","components/LanguageMenu.js","components/SearchBar.js","components/StockInput.js","constants/Languages.js","hooks/useStock.js","hooks/useNameSearch.js","pages/Stock.js","components/AccordionWrapper.js","components/OrderModal.js","components/StockOrderCard.js","components/RequestedItemCard.js","components/ReviewDialog.js","pages/OrderStock.js","components/FulfillModal.js","components/UnfulfilledOrderCard.js","components/EmptyDialog.js","pages/OrderTracker.js","pages/SignIn.js","components/Splash.js","App.js","serviceWorker.js","index.js","api/Client.js","hooks/useMobile.js"],"names":["LANDING","SIGN_IN","ABOUT","ORDER_FORM","ORDER_STOCK","ORDER_TRACKER","STOCK","module","exports","item","a","Client","post","then","res","catch","e","env","process","firebase","initializeApp","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","auth","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","yahooProvider","OAuthProvider","sendPantryCreationRequest","addPantry","uid","currentUser","email","name","displayName","signInWithGoogle","signInWithPopup","signInWithFacebook","signInWithYahoo","result","console","log","db","firestore","useStyles","makeStyles","theme","toolbar","paddingRight","toolbarIcon","display","alignItems","justifyContent","padding","mixins","drawerPaper","position","breakpoints","down","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","transition","leavingScreen","width","spacing","up","drawerPaperCloseMobile","NavDrawer","open","handleOpen","handleClose","history","useHistory","iOS","browser","test","navigator","userAgent","isMobile","useMobile","toggleDrawer","anchor","event","type","key","navigateTo","location","push","signOut","navigationItems","title","destination","icon","userOnly","userItems","onClick","forUsers","classes","variant","paper","clsx","onClose","onOpen","disableBackdropTransition","disableDiscovery","transitionDuration","appear","enter","exit","className","map","Boolean","placement","arrow","enterDelay","disableHoverListener","button","primary","root","right","buttonBar","link","margin","color","palette","dark","login","profileIcon","marginLeft","CollapsingMenu","useAuthState","user","fullNavigation","page","to","navigation","id","nav","Button","component","Link","split","menuButton","marginRight","appBar","backgroundColor","zIndex","drawer","appBarShift","Navbar","drawerOpen","openDrawer","hasUser","trigger","useScrollTrigger","Slide","direction","in","AppBar","Toolbar","IconButton","src","logo","alt","style","height","INFO","fontSize","body","footer","flexDirection","marginTop","paddingTop","paddingBottom","github","copyright","Footer","Typography","align","gutterBottom","href","target","rel","aria-label","Date","getFullYear","minHeight","fontWeight","main","subtitle","actions","marginBottom","containedButton","common","white","heroButton","info","sectionTitle","infoSection","Landing","Container","maxWidth","Grid","container","md","xs","fullWidth","Divider","section","p","paragraph","addPersonInfo","update","put","modal","background","boxShadow","shadows","formControl","minWidth","CSVModal","show","useState","getMonth","month","setMonth","year","setYear","Dialog","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","centered","DialogTitle","Fade","Paper","FormControl","InputLabel","Select","required","labelId","value","onChange","MenuItem","TextField","label","defaultValue","DialogActions","BASE_API_URL","disabled","createMuiTheme","contrastText","borderColor","altText","light","textTransform","borderRadius","User","showCSVModal","setShowCSVModal","size","Home","card","paddingLeft","avatar","AvatarCard","role","elevation","Avatar","flexGrow","team","textAlign","avatarGroup","flexWrap","About","QwertycowMoo","kgs5","renzol2","evanmm3","member","ORDER_STEPS","orderSchema","Yup","firstName","lastName","adults","integer","moreThan","children","zipcode","length","orderNotes","typography","h3","stepper","formPaper","h5","submit","formField","OrderForm","useEffect","Stepper","activeStep","alternativeLabel","step","Step","StepLabel","validationSchema","onSubmit","personInfo","fromForm","initialValues","handleSubmit","handleChange","handleBlur","handleReset","values","touched","errors","isValid","onBlur","helperText","error","ErrorAlert","heading","severity","Alert","AlertTitle","spinnerDiv","Loading","CircularProgress","fetchStock","get","createStockItem","updateStockCount","updatedItem","amountSchema","newCount","closeButton","form","StockModal","getStock","stockId","stockName","stockCount","loading","setLoading","setError","formSubmission","pantry","_id","parseInt","updateIsSuccessful","Modal","aria-labelledby","aria-describedby","setTimeout","cardAction","only","topContent","bottomContent","nameContainer","noTranslation","subname","date","countContainer","countHeader","count","StockInfo","stockItem","languageTag","hasLanguage","handleShow","disableClick","visibleStockCount","showEnglishOnly","Card","CardActionArea","disableRipple","CardContent","Box","translations","Chip","undefined","timestamp","seconds","_seconds","toDateString","substr","getItemDateString","useLanguage","setHasLanguage","translationsLoaded","StockCard","showAmountModal","setShowAmountModal","menuItem","toggle","LanguageMenu","languages","currentLanguage","setLanguage","isError","React","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","currentTarget","locale","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","lang","index","tag","selected","textContent","selectedLanguage","find","handleMenuItemClick","searchPaper","search","SearchBar","stock","getFilteredStockItems","setNameQuery","LANGUAGES","language","InputProps","startAdornment","InputAdornment","toLowerCase","itemSchema","details","StockInput","defaultExpanded","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","isSubmitting","useStock","setStock","data","useNameSearch","nameQuery","filter","inEnglishName","includes","inTranslatedName","h4","subheading","column","Stock","accordion","AccordionWrapper","summary","usePrimary","buttonGroup","incrementor","textField","OrderModal","onRequest","defaultAmount","selectedAmount","setSelectedAmount","Bold","ButtonGroup","placeholder","amount","valueAsNumber","isNaN","Number","requestedCount","countAfterRequest","StockOrderCard","showOrderModal","RequestedItemCard","requestedItem","removeRequestedItem","showActions","raised","CardActions","additionalNotes","divider","ReviewDialog","submitRequest","requestedStockItems","setAdditionalNotes","requestLoading","setRequestLoading","requestSuccess","setRequestSuccess","success","finishOrder","scroll","List","dense","r","ListItem","ListItemText","secondary","multiline","sm","OrderStock","useLocation","state","showReview","setShowReview","retrieveFromStorage","setRequestedStockItems","stored","localStorage","getItem","JSON","parse","updatedRequestedItems","alreadyRequested","concat","itemIndex","indexOf","setItem","stringify","updatedRequest","splice","writeRequestToNotes","forEach","slice","requestBody","fulfilled","stockUpdatePromises","Promise","all","removeItem","getRequestedCount","itemId","orderTitle","buttonText","Badge","badgeContent","confirm","close","FulfillModal","person","personId","fulfillPerson","order","fontsize","additional","UnfulfilledOrderCard","showFulfillModal","setShowFulfillModal","hours","getHours","minutes","getMinutes","ampm","formatDate","toDate","disableElevation","dialog","image","grid","AlertDialogSlide","setOpen","lg","cart","OrderTracker","userLoading","userError","query","setQuery","collection","doc","where","useCollection","snapshot","snapLoading","snapError","fulfillOrder","updatePerson","docs","alignSelf","SignIn","Splash","require","App","setDrawerOpen","handleDrawerOpen","ThemeProvider","basename","exact","path","Order","window","hostname","match","ReactDOM","render","StrictMode","Fragment","CssBaseline","document","getElementById","serviceWorker","ready","registration","unregister","message","axios","baseURL","useMediaQuery","useTheme"],"mappings":"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","file":"static/js/main.a4305415.chunk.js","sourcesContent":["// Endpoints for all pages in app\nexport const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ABOUT = '/about';\nexport const ORDER_FORM = '/order-form';\nexport const ORDER_STOCK = '/order-stock';\nexport const ORDER_TRACKER = '/order-tracker';\nexport const STOCK = '/stock';","module.exports = __webpack_public_path__ + \"static/media/logo_nobg.bc92eabc.png\";","import Client from './Client';\n\nexport const PANTRY_ENDPOINT = '/pantry';\n\nexport async function addPantry(item) {\n  Client.post(PANTRY_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\n//put request not done on the frontend yet, this is only a placeholder\nexport async function updatePantry(update) {\n  Client.put(PANTRY_ENDPOINT, update)\n    .then((res) => {\n      console.log(res);\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    })\n\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { addPantry } from './api/Pantry';\n\n// Initialize Firebase\nconst env = process.env;\nfirebase.initializeApp({\n  apiKey: env.REACT_APP_API_KEY,\n  authDomain: env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: env.REACT_APP_DATABASE_URL,\n  projectId: env.REACT_APP_PROJECT_ID,\n  storageBucket: env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: env.REACT_APP_APP_ID,\n  measurementId: env.REACT_APP_MEASUREMENT_ID,\n});\n\n// Auth providers\nexport const auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst facebookProvider=  new firebase.auth.FacebookAuthProvider();\nconst yahooProvider = new firebase.auth.OAuthProvider('yahoo.com');\n\n// Sends request to create pantry for new users\n// Does nothing if user already exists in database\nexport const sendPantryCreationRequest = () => {\n  let body = {\n    uid: auth.currentUser.uid,\n    email: auth.currentUser.email,\n    name: auth.currentUser.displayName,\n  };\n  addPantry(body);\n}\n\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(googleProvider).then(sendPantryCreationRequest);\n};\n\nexport const signInWithFacebook = () => {\n  auth.signInWithPopup(facebookProvider).then(sendPantryCreationRequest);\n}\n\nexport const signInWithYahoo = () => {\n  auth.signInWithPopup(yahooProvider).then( (result) => {\n    console.log(result);\n    sendPantryCreationRequest();\n  });\n}\n\n// Database\nexport const db = firebase.firestore();\n","module.exports = __webpack_public_path__ + \"static/media/QwertycowMoo.c4707b2e.png\";","module.exports = __webpack_public_path__ + \"static/media/kgs5.ed891ef2.png\";","module.exports = __webpack_public_path__ + \"static/media/renzol2.726b433f.png\";","module.exports = __webpack_public_path__ + \"static/media/evanmm3.c4869c53.png\";","import React from 'react';\nimport clsx from 'clsx';\nimport { useHistory } from 'react-router-dom';\n\n// Material UI\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport KitchenIcon from '@material-ui/icons/Kitchen';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TransitEnterexitIcon from '@material-ui/icons/TransitEnterexit';\nimport { makeStyles } from '@material-ui/core';\n\n// Routes and auth\nimport {\n  ABOUT,\n  LANDING,\n  ORDER_FORM,\n  ORDER_TRACKER,\n  SIGN_IN,\n  STOCK,\n} from '../constants/Routes';\nimport { auth } from '../firebase';\nimport useMobile from '../hooks/useMobile';\n\n/**\n * Left-anchored expandable drawer for navigation\n */\nfunction NavDrawer({ open, handleOpen, handleClose }) {\n  const history = useHistory();\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const isMobile = useMobile();\n\n  /**\n   * Callback that toggles drawer on mobile\n   */\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    if (open) {\n      handleOpen();\n    } else {\n      handleClose();\n    }\n  };\n\n  /**\n   * Navigates user to specified page upon clicking drawer\n   */\n  function navigateTo(location) {\n    history.push(location);\n    // Close the drawer on mobile\n    if (isMobile) {\n      handleClose();\n    }\n  }\n\n  /**\n   * Function to sign out from nav drawer\n   */\n  async function signOut() {\n    await auth.signOut();\n    handleClose();\n    navigateTo(LANDING);\n  }\n\n  // List of pages displayed in drawer for navigation\n  const navigationItems = [\n    {\n      title: 'Home',\n      destination: LANDING,\n      icon: <HomeIcon />,\n      userOnly: false,\n    },\n    {\n      title: 'Stock',\n      destination: STOCK,\n      icon: <KitchenIcon />,\n      userOnly: true,\n    },\n    {\n      title: 'Order Form',\n      destination: ORDER_FORM,\n      icon: <ShoppingCartIcon />,\n      userOnly: true,\n    },\n    {\n      title: 'Order Tracker',\n      destination: ORDER_TRACKER,\n      icon: <AssignmentTurnedInIcon />,\n      userOnly: true,\n    },\n    {\n      title: 'About Pan-Lang',\n      destination: ABOUT,\n      icon: <InfoIcon />,\n      userOnly: false,\n    },\n  ];\n\n  // List of items in drawer related to users & auth\n  const userItems = [\n    {\n      title: 'Sign in',\n      onClick: () => navigateTo(SIGN_IN),\n      icon: <ExitToAppIcon />,\n      forUsers: false,\n    },\n    {\n      title: 'Sign Out',\n      onClick: signOut,\n      icon: <TransitEnterexitIcon />,\n      forUsers: true,\n    },\n  ];\n\n  const classes = useStyles();\n  return (\n    <SwipeableDrawer\n      anchor=\"left\"\n      variant={isMobile ? 'temporary' : 'permanent'}\n      classes={{\n        paper: clsx(\n          classes.drawerPaper,\n          !open && classes.drawerPaperClose,\n          !open && isMobile && classes.drawerPaperCloseMobile\n        ),\n      }}\n      open={open}\n      onClose={toggleDrawer('left', false)}\n      onOpen={toggleDrawer('left', true)}\n      disableBackdropTransition={true}\n      disableDiscovery={iOS}\n      transitionDuration={{ appear: 100, enter: 100, exit: 400 }}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n\n      {/* Navigation */}\n      <nav>\n        <List>\n          {navigationItems.map(\n            (item) =>\n              (Boolean(auth.currentUser) || !item.userOnly) && (\n                <Tooltip\n                  title={item.title}\n                  placement=\"right\"\n                  arrow\n                  enterDelay={0}\n                  disableHoverListener={open}\n                  key={item.destination}\n                >\n                  <ListItem button onClick={() => navigateTo(item.destination)}>\n                    <ListItemIcon>{item.icon}</ListItemIcon>\n                    <ListItemText primary={item.title} />\n                  </ListItem>\n                </Tooltip>\n              )\n          )}\n        </List>\n\n        <Divider />\n\n        {/* User specific routes */}\n        <List>\n          {userItems.map(\n            (item) =>\n              ((item.forUsers && Boolean(auth.currentUser)) ||\n                !(item.forUsers || Boolean(auth.currentUser))) && (\n                <Tooltip\n                  title={item.title}\n                  placement=\"right\"\n                  arrow\n                  enterDelay={0}\n                  disableHoverListener={open}\n                  key={item.title}\n                >\n                  <ListItem button onClick={item.onClick}>\n                    <ListItemIcon>{item.icon}</ListItemIcon>\n                    <ListItemText primary={item.title} />\n                  </ListItem>\n                </Tooltip>\n              )\n          )}\n        </List>\n        <Divider />\n      </nav>\n\n      {/* Expand/hide dashboard */}\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={open ? handleClose : handleOpen}>\n          {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n        </IconButton>\n      </div>\n    </SwipeableDrawer>\n  );\n}\n\nconst drawerWidth = 250;\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '8px 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    [theme.breakpoints.down('md')]: {\n      position: 'absolute',\n    },\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    minHeight: '100vh',\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  drawerPaperCloseMobile: {\n    width: 0,\n  },\n}));\n\nexport default NavDrawer;\n","module.exports = __webpack_public_path__ + \"static/media/empty-cart.302b7b48.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {  Button } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  ABOUT,\n  LANDING,\n  ORDER_FORM,\n  ORDER_TRACKER,\n  SIGN_IN,\n  STOCK,\n} from '../../constants/Routes';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../../firebase';\n\n/**\n * Responsive navigation menu\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\n */\nfunction CollapsingMenu() {\n  const [user] = useAuthState(auth);\n\n  // Pages to navigate to\n  const fullNavigation = [\n    { page: 'About', to: ABOUT },\n    { page: 'Order Form', to: ORDER_FORM },\n    { page: 'Order Tracker', to: ORDER_TRACKER },\n    { page: 'Stock', to: STOCK },\n  ];\n\n  // Only show About page when user is not logged in\n  const navigation = Boolean(user) ? fullNavigation : [fullNavigation[0]];\n\n  // Auth button text depends on whether user is logged in\n  function getAuthButtonText() {\n    // If the user is signed in\n    if (Boolean(user)) {\n      // In case the user doesn't have a display name\n      if (user.displayName === null) {\n        return user.email;\n      } else {\n        return user.displayName.split(' ')[0];\n      }\n    }\n\n    // If the user is not signed in\n    return 'Sign In';\n  }\n\n  // Profile button redirects to landing page\n  function getAuthButtonLink() {\n    return Boolean(user) ? LANDING : SIGN_IN;\n  }\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {/* Desktop */}\n      <nav className={classes.buttonBar} id=\"appbar-collapse\">\n        {navigation.map((nav) => (\n          <Button\n            component={Link}\n            className={classes.link}\n            to={nav.to}\n            key={nav.to}\n          >\n            {nav.page}\n          </Button>\n        ))}\n        <Button\n          component={Link}\n          to={getAuthButtonLink()}\n          variant=\"contained\"\n          className={classes.login}\n        >\n          {getAuthButtonText()}\n          {Boolean(user) && (\n            <AccountCircleIcon className={classes.profileIcon} />\n          )}\n        </Button>\n      </nav>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    right: 0,\n  },\n  buttonBar: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n    margin: '10px',\n    paddingLeft: '16px',\n    right: 0,\n    position: 'relative',\n    width: '100%',\n    background: 'transparent',\n  },\n  link: {\n    margin: theme.spacing(1, 1),\n    color: 'gray',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n    },\n  },\n  login: {\n    margin: '10px',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n    },\n  },\n  profileIcon: {\n    marginLeft: '4px',\n  },\n}));\n\nexport default CollapsingMenu;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport CollapsingMenu from './CollapsingMenu';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Slide from '@material-ui/core/Slide';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles } from '@material-ui/core';\nimport logo from '../../images/logo_nobg.png';\nimport useMobile from '../../hooks/useMobile';\n\n/**\n * Navigation bar at the top of window\n */\nfunction Navbar({ drawerOpen, toggleDrawer, openDrawer, hasUser = false }) {\n  const isMobile = useMobile();\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!isMobile || !trigger}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(\n          classes.appBar,\n          drawerOpen && !isMobile && classes.appBarShift\n        )}\n      >\n        <Toolbar>\n          {isMobile && (\n            <IconButton onClick={openDrawer}>\n              <MenuIcon />\n            </IconButton>\n          )}\n\n          {/* Logo */}\n          <Link to=\"/\">\n            <img\n              src={logo}\n              alt=\"Pan-Lang logo\"\n              style={{ width: 60, height: 60 }}\n            />\n          </Link>\n\n          {!hasUser && <CollapsingMenu />}\n        </Toolbar>\n      </AppBar>\n    </Slide>\n  );\n}\n\nconst drawerWidth = 250;\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  appBar: {\n    backgroundColor: 'white',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n}));\n\nexport default Navbar;\n","import React from 'react';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\n\nexport const INFO = [\n  {\n    icon: <FlagIcon fontSize=\"large\" color=\"primary\" />,\n    title: 'Automatic Translations',\n    body: [\n      'Pan-Lang automatically translates stock items to multiple languages, ensuring that all members of your community can understand your available stock. ',\n      \"Through Pan-Lang's Stock Dashboard, you can view, create, and edit your available stock so it's synced across all devices.\",\n    ],\n  },\n  {\n    icon: <ListAltIcon fontSize=\"large\" color=\"primary\" />,\n    title: 'Seamless, Accessible Forms',\n    body: [\n      'Info, Order, Review. With a simple 3-step process, your patrons can order necessary items in their preferred language.',\n      \"Stock counts are automatically calculated upon every order, automating your pantry's workflow.\",\n    ],\n  },\n  {\n    icon: <SyncAltIcon fontSize=\"large\" color=\"primary\" />,\n    title: 'Track Orders in Real-Time',\n    body: [\n      'With the Order Tracker, multiple pantry workers and volunteers can track unfulfilled orders in real time, complete with necessary items, basic patron info, and additional notes if necessary.',\n      'Pan-Lang automatically records all orders, allowing you to download, view, and send order data to show the progress of your pantry over time.',\n    ],\n  },\n];\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Global footer for Pan-Lang\n */\nfunction Footer() {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        {'Pan-Lang'}\n      </Typography>\n      <Typography\n        variant=\"subtitle1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n      >\n        {\n          'Helping the language barrier between food pantry coordinators and non-English speakers.'\n        }\n      </Typography>\n\n      {/* GitHub link */}\n      <a\n        href=\"https://github.com/Pan-Lang\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={classes.github}\n      >\n        <IconButton aria-label=\"github\">\n          <GitHubIcon />\n        </IconButton>\n      </a>\n\n      {/* Copyright */}\n      <Typography\n        variant=\"body2\"\n        color=\"textSecondary\"\n        align=\"center\"\n        className={classes.copyright}\n      >\n        {'Copyright © '}\n        Pan-Lang {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    </footer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    marginTop: theme.spacing(5),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  github: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  copyright: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default Footer;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { ABOUT, SIGN_IN } from '../../constants/Routes';\nimport { makeStyles } from '@material-ui/core';\nimport useMobile from '../../hooks/useMobile';\nimport { INFO } from '../../constants/Landing';\nimport Footer from '../../components/Footer';\n\n/**\n * Landing page for Pan-Lang.\n * The first thing people will see when visiting our web app.\n */\nfunction Landing() {\n  const isMobile = useMobile();\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      {/* Title */}\n      <Typography\n        variant={isMobile ? 'h3' : 'h1'}\n        component=\"h1\"\n        align=\"center\"\n        className={classes.title}\n      >\n        Pan-Lang\n      </Typography>\n\n      {/* Subtitle */}\n      <Typography\n        variant={isMobile ? 'body1' : 'h4'}\n        component=\"h2\"\n        align=\"center\"\n        className={classes.subtitle}\n      >\n        Helping food pantry coordinators and patrons communicate\n      </Typography>\n\n      {/* Actions */}\n      <Container maxWidth=\"sm\" className={classes.actions}>\n        <Grid container spacing={2}>\n          {/* Link to sign in */}\n          <Grid item md={6} xs={12}>\n            <Button\n              component={Link}\n              variant=\"contained\"\n              color=\"primary\"\n              to={SIGN_IN}\n              className={classes.containedButton}\n              fullWidth\n            >\n              Get Started\n              <ChevronRightIcon />\n            </Button>\n          </Grid>\n\n          {/* Link to About */}\n          <Grid item md={6} xs={12}>\n            <Button\n              component={Link}\n              variant=\"outlined\"\n              color=\"primary\"\n              to={ABOUT}\n              className={classes.heroButton}\n              fullWidth\n            >\n              About Pan-Lang\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Divider />\n\n      {/* Info */}\n      <Grid container className={classes.info}>\n        {INFO.map((section) => (\n          <Grid item md={4} xs={12} className={classes.infoSection}>\n            {section.icon}\n            <Typography\n              variant=\"h5\"\n              component=\"h3\"\n              className={classes.sectionTitle}\n            >\n              <b>{section.title}</b>\n            </Typography>\n            {section.body.map((p) => (\n              <Typography paragraph>{p}</Typography>\n            ))}\n          </Grid>\n        ))}\n      </Grid>\n\n      <Typography variant={isMobile ? 'h4' : 'h3'} align=\"center\">\n        Join <b>Pan-Lang</b> today.\n      </Typography>\n\n      {/* Actions */}\n      <Container maxWidth=\"sm\" className={classes.actions}>\n        <Grid container spacing={2}>\n          {/* Link to sign in */}\n          <Grid item md={6} xs={12}>\n            <Button\n              component={Link}\n              variant=\"contained\"\n              color=\"primary\"\n              to={SIGN_IN}\n              className={classes.containedButton}\n              fullWidth\n            >\n              Get Started\n              <ChevronRightIcon />\n            </Button>\n          </Grid>\n\n          {/* Link to About */}\n          <Grid item md={6} xs={12}>\n            <Button\n              component={Link}\n              variant=\"outlined\"\n              color=\"primary\"\n              to={ABOUT}\n              className={classes.heroButton}\n              fullWidth\n            >\n              About Pan-Lang\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Footer />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n    minHeight: '100vh',\n  },\n  title: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.main,\n  },\n  subtitle: {\n    fontWeight: 'lighter',\n  },\n  actions: {\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(6),\n  },\n  containedButton: {\n    '&:hover': {\n      color: theme.palette.common.white,\n    },\n    padding: theme.spacing(2),\n  },\n  heroButton: {\n    padding: theme.spacing(2),\n    '&:hover': {\n      color: theme.palette.primary.dark,\n    },\n  },\n  info: {\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(8),\n  },\n  sectionTitle: {\n    marginTop: theme.spacing(1),\n  },\n  infoSection: {\n    [theme.breakpoints.down('md')]: {\n      margin: theme.spacing(2),\n    },\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nexport default Landing;\n","\nimport Client from './Client';\n\nexport const PEOPLE_ENDPOINT = '/people';\n\nexport async function addPersonInfo(item) {\n  Client.post(PEOPLE_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\nexport async function fetchPeople(pantry, month, year) {\n  let query = \"?pantry=\" + pantry + \"&month=\" + month + \"&year=\" + year;\n  console.log(PEOPLE_ENDPOINT + query)\n  const promise = await Client.get(PEOPLE_ENDPOINT + query);\n  return promise;\n}\n\nexport async function updatePerson(update) {\n  Client.put(PEOPLE_ENDPOINT, update)\n    .then((res) => {\n      console.log(res);\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  InputLabel,\n  MenuItem,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { PEOPLE_ENDPOINT } from '../api/People';\nimport { auth } from '../firebase';\nimport { BASE_API_URL } from '../api/Client';\n\n/**\n * Popup modal for downloading a csv file\n */\n\nfunction CSVModal({ show, handleClose }) {\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n\n  const handleMonthChange = (event) => {\n    setMonth(event.target.value);\n  };\n\n  const handleYearChange = (event) => {\n    setYear(event.target.value);\n  };\n\n  function getDownloadUrl() {\n    if (Boolean(auth.currentUser)) {\n      return `${BASE_API_URL}${PEOPLE_ENDPOINT}?pantry=${auth.currentUser.uid}&month=${month}&year=${year}`;\n    } else {\n      return '';\n    }\n  }\n\n  //Current working on: getting both the forms to do things and send the API request, maybe need to reform the People.js in API too\n  const classes = useStyles();\n  return (\n    <Dialog\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      centered\n      className={classes.modal}\n    >\n      <DialogTitle>Enter month and year</DialogTitle>\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"month-select-label\">Month</InputLabel>\n            <Select\n              required\n              labelId=\"month-select-label\"\n              id=\"month-select\"\n              value={month}\n              onChange={handleMonthChange}\n            >\n              <MenuItem value={1}>January</MenuItem>\n              <MenuItem value={2}>February</MenuItem>\n              <MenuItem value={3}>March</MenuItem>\n              <MenuItem value={4}>April</MenuItem>\n              <MenuItem value={5}>May</MenuItem>\n              <MenuItem value={6}>June</MenuItem>\n              <MenuItem value={7}>July</MenuItem>\n              <MenuItem value={8}>August</MenuItem>\n              <MenuItem value={9}>September</MenuItem>\n              <MenuItem value={10}>October</MenuItem>\n              <MenuItem value={11}>November</MenuItem>\n              <MenuItem value={12}>December</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextField\n              required\n              id=\"year-textfield\"\n              label=\"year\"\n              defaultValue={new Date().getFullYear()}\n              onChange={handleYearChange}\n            ></TextField>\n          </FormControl>\n          <DialogActions>\n            {/* Check user is signed in before accessing user's UID in download URL */}\n            {Boolean(auth.currentUser) && (\n              <a href={getDownloadUrl()}>\n                <Button disabled={!Boolean(auth.currentUser)} id=\"get-people\">Download Order Data</Button>\n              </a>\n            )}\n          </DialogActions>\n        </Paper>\n      </Fade>\n    </Dialog>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    alignItems: 'center',\n  },\n  formControl: {\n    minWidth: '120px',\n    maxWidth: '200px',\n    margin: '5px',\n  },\n}));\nexport default CSVModal;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#16AB8D',\n      dark: '#119178',\n      contrastText: '#FFFFFF',\n      borderColor: '#FFFFF5',\n      altText: '#26B020',\n      light: '#26B020'\n    },\n  },\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core';\nimport CsvModal from '../../components/CSVModal';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { ORDER_FORM, STOCK } from '../../constants/Routes';\nimport theme from '../../constants/Theme';\n\n/**\n * User's home page for Pan-Lang.\n * The default screen for users logged in to Pan-Lang.\n */\nfunction User() {\n  const [showCSVModal, setShowCSVModal] = useState(false);\n\n  // Handlers for showing/closing modal when downloading csv\n  const handleClose = () => setShowCSVModal(false);\n  const handleShow = () => setShowCSVModal(true);\n\n  const classes = useStyles();\n  return (\n    <Container align=\"center\" className={classes.root}>\n      <div style={{ marginBottom: 20 }}>\n        <Typography variant=\"h3\" component=\"h1\">\n          Welcome to{' '}\n          <font style={{ color: theme.palette.primary.altText, fontWeight: 'bold' }}>Pan-Lang</font>\n        </Typography>\n      </div>\n      <div>\n        <Link to={ORDER_FORM} style={{ color: 'white' }}>\n          <Button className={classes.button} size=\"large\">\n            Start a new order\n          </Button>\n        </Link>\n      </div>\n      <div>\n        <Link to={STOCK} style={{ color: 'white' }}>\n          <Button className={classes.button} size=\"large\">\n            Edit and add stock items\n          </Button>{' '}\n        </Link>\n      </div>\n      <div>\n        <Button className={classes.button} onClick={handleShow} size=\"large\">\n          {' '}\n          Download Data\n        </Button>\n      </div>\n\n      <br></br>\n      <br></br>\n      <Button\n        className={classes.button}\n        onClick={() => auth.signOut()}\n        size=\"large\"\n      >\n        Sign out\n      </Button>\n\n      {/* Download data modal */}\n      <CsvModal show={showCSVModal} handleClose={handleClose} />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n  },\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    borderColor: theme.palette.primary.borderColor,\n    color:  theme.palette.primary.contrastText,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor:  theme.palette.primary.dark,\n    },\n    borderRadius: '200px',\n    margin: '5px',\n    width: '100%',\n    maxWidth: 500,\n  },\n}));\nexport default User;","import React from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../../firebase';\nimport Landing from './Landing';\nimport User from './User';\n\n/**\n * Landing page\n */\nfunction Home() {\n  const [user] = useAuthState(auth);\n\n  if (!Boolean(user)) {\n    // If the user is not logged in, return landing page\n    return <Landing />;\n  } else {\n    // If user is logged in, return user's home page\n    return <User />;\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport {\n  Avatar,\n  Container,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\n\n/**\n * Card on About page representing each team member\n */\nfunction AvatarCard({ name, src, alt, role = 'Software Developer', github }) {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={3} className={classes.card}>\n      <Container>\n        <Avatar src={src} alt={alt} className={classes.avatar} />\n        <Typography variant=\"h5\">\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </Typography>\n        <Typography variant=\"subtitle1\">{role}</Typography>\n      </Container>\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingLeft: 10,\n    paddingRight: 10,\n    [theme.breakpoints.down('sm')]: {\n      padding: 5,\n      width: '100%',\n    },\n  },\n  avatar: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    [theme.breakpoints.down('sm')]: {\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n    },\n    marginBottom: 10,\n  },\n}));\n\nexport default AvatarCard;\n","import React from 'react';\nimport { Container, makeStyles, Typography } from '@material-ui/core';\nimport AvatarCard from '../components/AvatarCard';\nimport QwertycowMoo from '../images/QwertycowMoo.png';\nimport kgs5 from '../images/kgs5.png';\nimport renzol2 from '../images/renzol2.png';\nimport evanmm3 from '../images/evanmm3.png';\nimport Footer from '../components/Footer';\n\n/**\n * About page for Pan-Lang\n * Provides background for our application and service\n */\nfunction About() {\n  const team = [\n    {\n      name: 'Kevin Zhou',\n      src: QwertycowMoo,\n      github: 'https://github.com/QwertycowMoo',\n      role: 'Lead Software Developer',\n    },\n    { name: 'Katie Sanders', src: kgs5, github: 'https://github.com/kgs5' },\n    {\n      name: 'Renzo Ledesma',\n      src: renzol2,\n      github: 'https://github.com/renzol2',\n    },\n    {\n      name: 'Evan Matthews',\n      src: evanmm3,\n      github: 'https://github.com/evanmm3',\n    },\n  ];\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Container\n        maxWidth=\"md\"\n        style={{\n          paddingBottom: 120,\n          marginBottom: 20,\n        }}\n      >\n        {/* Background */}\n        <Typography variant=\"h2\">\n          {'About '}\n          <font style={{ color: '#26B020', fontWeight: 'bold' }}>\n            Pan-Lang\n          </font>\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          Pan-Lang is an organizational web application designed to help local\n          food bank organizers keep track of orders, maintain visitor records,\n          and communicate with non-English speaking patrons.\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          Food insecurity is an important issue in the Champain County\n          community. Nearly 15% of residents must deal with food insecurity.\n          Many of these individuals are also ineligible for federal nutrition\n          programs and must rely on local food pantries for meals.\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          On top of this, many of these individuals speak limited English,\n          making it difficult for them to communicate their needs to food pantry\n          staff. With Pan-Lang, our mission is to break this language barrier\n          and provide a more efficient method of supporting those in need.\n        </Typography>\n      </Container>\n\n      {/* Team */}\n      <Container className={classes.team}>\n        <Typography variant=\"h3\">Our Team</Typography>\n        <Container className={classes.avatarGroup}>\n          {team.map((member) => (\n            <AvatarCard\n              key={member.src}\n              name={member.name}\n              src={member.src}\n              alt={member.name}\n              role={member.role}\n              github={member.github}\n            />\n          ))}\n        </Container>\n      </Container>\n\n      <Footer />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n    flexGrow: 1,\n  },\n  p: {\n    marginTop: 8,\n    marginBottom: 8,\n  },\n  team: {\n    textAlign: 'center',\n    width: '100%',\n    paddingBottom: 50,\n  },\n  avatarGroup: {\n    marginTop: 15,\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'stretch',\n    justifyContent: 'space-around',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default About;\n","export const ORDER_STEPS = [\n  'Enter patron info',\n  'Select order items',\n  'Review order'\n];","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { makeStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { ORDER_STOCK, LANDING } from '../constants/Routes';\nimport { ORDER_STEPS } from '../constants/Order';\nimport { auth } from '../firebase';\n\n// Validation schema for order form\nconst orderSchema = Yup.object({\n  firstName: Yup.string().required('First name is required'),\n  lastName: Yup.string().required('Last name is required'),\n  adults: Yup.number()\n    .integer()\n    .moreThan(-1)\n    .required('# of adults is required'),\n  children: Yup.number()\n    .integer()\n    .moreThan(-1)\n    .required('# of children is required'),\n  zipcode: Yup.string()\n    .length(5)\n    .test(\n      'Valid ZIP code',\n      'Must be a valid US ZIP code',\n      (value) => /^\\d+$/.test(value) // test for digits only\n    )\n    .required('ZIP code is required'),\n  orderNotes: Yup.string().required(),\n});\n\n/**\n * Page to fill out form for patron's order\n */\nfunction OrderForm() {\n  const history = useHistory();\n\n  // Immediately send user back to homepage if not signed in\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      history.push(LANDING);\n    }\n  }, [history]);\n\n  /**\n   * Called upon form submission\n   * @param {Object} personInfo info from submitted form\n   */\n  function onSubmit(personInfo) {\n    // Redirects user to order stock page with the form data\n    history.push(ORDER_STOCK, { fromForm: true, personInfo });\n  }\n\n  const classes = useStyles();\n  const requiredText = '*Required';\n  return (\n    <Container maxWidth=\"sm\" className={classes.page}>\n      <Typography variant=\"h1\" className={classes.title}>\n        Order Form\n      </Typography>\n\n      <Stepper activeStep={0} className={classes.stepper} alternativeLabel>\n        {ORDER_STEPS.map((step) => (\n          <Step key={step}>\n            <StepLabel>{step}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {/* Form */}\n      <Formik\n        validationSchema={orderSchema}\n        onSubmit={onSubmit}\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          adults: '',\n          children: '',\n          zipcode: '',\n          orderNotes: 'order notes',\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          handleReset,\n          values,\n          touched,\n          isValid,\n          errors,\n        }) => (\n          <Paper className={classes.formPaper}>\n            <Typography variant=\"h3\" className={classes.subtitle}>\n              Enter patron information\n            </Typography>\n\n            {/* First name, last name */}\n            <Grid container spacing={1}>\n              {/* First name */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"firstName\"\n                  label=\"First name\"\n                  required\n                  value={values.firstName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={\n                    touched.firstName ? errors.firstName : requiredText\n                  }\n                  error={touched.firstName && Boolean(errors.firstName)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n\n              {/* Last name */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"lastName\"\n                  label=\"Last name\"\n                  required\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.lastName ? errors.lastName : requiredText}\n                  error={touched.lastName && Boolean(errors.lastName)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n            </Grid>\n\n            {/* # of adults, # of children */}\n            <Grid container spacing={1}>\n              {/* # of adults */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"adults\"\n                  type=\"number\"\n                  required\n                  label=\"# of Adults in Household\"\n                  value={values.adults}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.adults ? errors.adults : requiredText}\n                  error={touched.adults && Boolean(errors.adults)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n\n              {/* # of children */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"children\"\n                  type=\"number\"\n                  required\n                  label=\"# of Children in Household\"\n                  value={values.children}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.children ? errors.children : requiredText}\n                  error={touched.children && Boolean(errors.children)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n            </Grid>\n\n            {/* Zip code */}\n            <TextField\n              id=\"zipcode\"\n              type=\"number\"\n              required\n              label=\"Zip/Postal code\"\n              value={values.zipcode}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.zipcode ? errors.zipcode : requiredText}\n              error={touched.zipcode && Boolean(errors.zipcode)}\n              variant=\"outlined\"\n              fullWidth\n              className={classes.formField}\n            />\n\n            {/* Submit and clear buttons */}\n            <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n              <Button onClick={handleSubmit} className={classes.submit}>\n                Select order\n              </Button>\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={handleReset}\n              >\n                Clear\n              </Button>\n            </div>\n          </Paper>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    marginTop: 110,\n    paddingBottom: '120px',\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: theme.typography.h3.fontSize,\n  },\n  stepper: {\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n  },\n  formPaper: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(3),\n    [theme.breakpoints.down('md')]: {\n      padding: theme.spacing(2),\n    },\n  },\n  subtitle: {\n    fontSize: theme.typography.h5.fontSize,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  submit: {\n    backgroundColor: theme.palette.primary.main,\n    borderColor: theme.palette.primary.borderColor,\n    color: theme.palette.primary.contrastText,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n    },\n    marginLeft: theme.spacing(2),\n  },\n  formField: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default OrderForm;\n","import React from 'react';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n/**\n * Component signifying an error has occurred, or\n * a different specified severity\n * See: https://material-ui.com/components/alert/#alert\n */\nfunction ErrorAlert({ heading = '', body, severity = 'error', onClose }) {\n  return (\n    <Alert severity={severity} onClose={onClose}>\n      {heading.length > 0 && <AlertTitle>{heading}</AlertTitle>}\n      {body}\n    </Alert>\n  );\n}\n\nexport default ErrorAlert;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Centered spinner to signify loading\n */\nfunction Loading() {\n  const classes = useStyles();\n  return (\n    <Container className={classes.spinnerDiv}>\n      <CircularProgress />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  spinnerDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default Loading;\n","import Client from './Client';\n\nconst STOCK_ENDPOINT = '/stock';\n\nexport async function fetchStock(uid) {\n  return await Client.get(`${STOCK_ENDPOINT}?pantry=${uid}`);\n}\n\nexport async function createStockItem(item) {\n  return await Client.post(STOCK_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\nexport async function updateStockCount(updatedItem) {\n\n  return await Client.put(STOCK_ENDPOINT, updatedItem)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      console.error(e)\n      return false;\n    })\n}\n","import React, { useState } from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Fade from '@material-ui/core/Fade';\nimport Modal from '@material-ui/core/Modal';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorAlert from './ErrorAlert';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { updateStockCount } from '../api/Stock';\nimport { auth } from '../firebase';\n\n/**\n * Popup modal for editing the stock count of an item\n */\nfunction StockModal({\n  show,\n  handleClose,\n  getStock,\n  stockId,\n  stockName,\n  stockCount,\n}) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  /**\n   * Sends PUT request with updated stock count from input\n   * @param {Object} formSubmission { newCount } containing updated count\n   */\n  async function onSubmit(formSubmission) {\n    setLoading(true);\n\n    const updatedItem = {\n      pantry: auth.currentUser.uid,\n      _id: stockId,\n      newCount: parseInt(formSubmission.newCount)\n    };\n\n    const updateIsSuccessful = await updateStockCount(updatedItem);\n\n    setLoading(false);\n\n    if (!updateIsSuccessful) {\n      setError(true);\n    } else {\n      handleClose();\n      getStock(500);\n    }\n  }\n\n  const classes = useStyles();\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <Formik\n            validationSchema={amountSchema}\n            onSubmit={onSubmit}\n            initialValues={{\n              newCount: '',\n            }}\n          >\n            {/* Formik component */}\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              isValid,\n              errors,\n            }) => (\n              <>\n                <Typography variant=\"h5\">\n                  Edit amount for: {stockName}\n                </Typography>\n\n                {/* Text field for entering new amount */}\n                {!loading && !error && (\n                  <Container className={classes.form}>\n                    <Typography>Current amount: {stockCount}</Typography>\n                    <form onSubmit={handleSubmit}>\n                      <TextField\n                        id=\"newCount\"\n                        type=\"number\"\n                        label=\"Enter new item count\"\n                        value={values.newCount}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={touched.newCount ? errors.newCount : ''}\n                        error={touched.newCount && Boolean(errors.newCount)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </form>\n                  </Container>\n                )}\n\n                {/* Message when processing request */}\n                {loading && (\n                  <Typography>\n                    Updating stock count for {stockName}...\n                  </Typography>\n                )}\n\n                {/* Error message */}\n                {error && <ErrorAlert body=\"An error occurred.\" />}\n\n                {/* Action buttons */}\n                {!loading && (\n                  <Container className={classes.actions}>\n                    {/* Submit button */}\n                    {!error && (\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        className={classes.button}\n                      >\n                        Save new amount\n                      </Button>\n                    )}\n\n                    {/* Close modal button */}\n                    <Button\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      className={classes.closeButton}\n                      onClick={() => {\n                        // Set timer so buttons don't reappear during\n                        // fade out animation\n                        setTimeout(() => {\n                          setError(false);\n                          setLoading(false);\n                        }, 120);\n\n                        handleClose();\n                      }}\n                    >\n                      Close\n                    </Button>\n                  </Container>\n                )}\n              </>\n            )}\n          </Formik>\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n}\n\n// Schema for updating count\nconst amountSchema = Yup.object({\n  newCount: Yup.number().integer().moreThan(-1).required(),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n  },\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    borderColor: theme.palette.primary.borderColor,\n    color:  theme.palette.primary.contrastText,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor:  theme.palette.primary.dark,\n    },\n    width: '100%',\n    marginBottom: 5,\n  },\n  closeButton: {\n    width: '100%',\n  },\n  form: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default StockModal;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Card component for displaying basic stock information\n * @param {{ \n *   stockItem: Object, \n *   languageTag: String, \n *   hasLanguage: Boolean, \n *   handleShow: Function, \n *   disableClick: Boolean, \n *   visibleStockCount: Number, \n *   showEnglishOnly: Boolean \n * }}\n */\nfunction StockInfo({\n  stockItem,\n  languageTag,\n  hasLanguage,\n  handleShow,\n  disableClick = false,\n  visibleStockCount = stockItem.count,\n  showEnglishOnly,\n  style,\n}) {\n  /**\n   * Gets a String representing an item's timestamp\n   * @param {Object} stockItem\n   */\n  function getItemDateString(stockItem) {\n    let seconds = stockItem.timestamp._seconds;\n    // Date constructor takes in milliseconds\n    return new Date(seconds * 1000).toDateString().substr(3);\n  }\n\n  const classes = useStyles();\n  return (\n    <Card\n      className={classes.card}\n      onClick={disableClick ? null : handleShow}\n      style={style}\n    >\n      {/* Action area makes entire component focusable */}\n      <CardActionArea\n        className={classes.cardAction}\n        disabled={disableClick}\n        disableRipple\n      >\n        <CardContent>\n          {/* Top content of card */}\n          <Box className={classes.topContent}>\n            {/* Name and translation (left) */}\n            <Box className={classes.nameContainer}>\n              {/* Translated name */}\n              <Typography variant=\"h4\" className={classes.name}>\n                {showEnglishOnly || !hasLanguage\n                  ? stockItem.name\n                  : stockItem.translations[languageTag]}\n              </Typography>\n\n              {/* English translation, if necessary */}\n              <Typography variant=\"h5\" className={classes.subname}>\n                {showEnglishOnly || !hasLanguage ? '' : stockItem.name}\n              </Typography>\n\n              {/* No translation alert */}\n              {/* If translated name is required but not present */}\n              {!showEnglishOnly && !hasLanguage && (\n                <Chip\n                  className={classes.noTranslation}\n                  size=\"small\"\n                  color=\"secondary\"\n                  label={'Translation unavailable'}\n                />\n              )}\n            </Box>\n\n            {/* Count (right) */}\n            <Box className={classes.countContainer}>\n              <Typography className={classes.countHeader}>Count</Typography>\n              <Typography className={classes.count}>\n                {visibleStockCount}\n              </Typography>\n            </Box>\n          </Box>\n\n          {/* Bottom content */}\n          <Box className={classes.bottomContent}>\n            {/* Date */}\n            <Typography className={classes.date}>\n              Updated:{' '}\n              {stockItem.timestamp !== undefined\n                ? getItemDateString(stockItem)\n                : 'Unavailable'}\n            </Typography>\n\n            {/* Out of stock alert */}\n            {stockItem.count <= 0 && (\n              <Chip size=\"small\" color=\"secondary\" label={'Out of stock'} />\n            )}\n          </Box>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(1),\n    borderRadius: '30px',\n    maxWidth: '100vw',\n  },\n  cardAction: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    [theme.breakpoints.only('sm')]: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(0),\n    },\n  },\n  topContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  bottomContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  },\n  nameContainer: {},\n  name: {\n    fontWeight: 'bold',\n    fontSize: '25px',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '19px',\n    },\n  },\n  noTranslation: {\n    marginTop: 5,\n  },\n  subname: {\n    marginTop: -8,\n    [theme.breakpoints.down('md')]: {\n      fontSize: '18px',\n      marginTop: -4,\n    },\n  },\n  date: {\n    color: 'gray',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '12px',\n    },\n  },\n  countContainer: {},\n  countHeader: {\n    textAlign: 'right',\n  },\n  count: {\n    marginTop: -10,\n    fontWeight: 'bold',\n    fontSize: '40px',\n    textAlign: 'right',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '27px',\n    },\n  },\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    borderColor: theme.palette.primary.borderColor,\n    color:  theme.palette.primary.contrastText,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor:  theme.palette.primary.dark,\n    },\n  },\n}));\n\nexport default StockInfo;\n","import { useState, useEffect } from 'react';\n\n/**\n * Checks whether given stock item contains a translation\n * @param {String} languageTag Tag (`en`, `es`, etc.) specifying language of translation\n * @param {Object} stockItem single stock item from API\n */\nfunction useLanguage(languageTag, stockItem) {\n  const [hasLanguage, setHasLanguage] = useState(false);\n\n  // Determine whether stock item has translation in specified language\n  useEffect(() => {\n    // Check that translations are present\n    const translationsLoaded = Boolean(stockItem.translations);\n\n    // Check if translation in specified language is present\n    setHasLanguage(\n      translationsLoaded && stockItem.translations[languageTag] !== undefined\n    );\n  }, [languageTag, stockItem]);\n\n  return hasLanguage;\n}\n\nexport default useLanguage;\n","import React, { useState } from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport StockModal from './StockModal';\nimport StockInfo from './StockInfo';\nimport useLanguage from '../hooks/useLanguage';\n\n/**\n * Card component that displays a stock item and allows\n * for editing its amount through a modal popup\n */\nfunction StockCard({ stockItem, getStock, languageTag = 'en' }) {\n  const [showAmountModal, setShowAmountModal] = useState(false);\n  const hasLanguage = useLanguage(languageTag, stockItem);\n\n  // Handlers for showing/closing modal when editing item amount\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  return (\n    <>\n      <Fade in={true} exit={true} enter={true}>\n        <StockInfo\n          stockItem={stockItem}\n          languageTag={languageTag}\n          hasLanguage={hasLanguage}\n          handleShow={handleShow}\n          showEnglishOnly={languageTag === 'en'}\n        />\n      </Fade>\n\n      {/* Popup modal for editing stock count */}\n      <StockModal\n        show={showAmountModal}\n        handleClose={handleClose}\n        getStock={getStock}\n        stockName={\n          hasLanguage ? stockItem.translations[languageTag] : stockItem.name\n        }\n        stockId={stockItem._id}\n        stockCount={stockItem.count}\n      />\n    </>\n  );\n}\n\nexport default StockCard;\n","import React from 'react';\nimport { MenuItem, Menu, Button, makeStyles } from '@material-ui/core';\n\n/**\n * Menu to select language when viewing Stock\n * @param {{\n *   languages: Array<{ tag: String, locale: String }>,\n *   currentLanguage: { tag: String, locale: String },\n *   setLanguage: Function,\n *   isError: Error | Boolean\n * }}\n */\nfunction LanguageMenu({\n  languages = [],\n  currentLanguage,\n  setLanguage,\n  isError = false,\n}) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  /** Toggler for opening/closing menu */\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  /** Handler for selecting a new language */\n  const handleMenuItemClick = (event, index) => {\n    const locale = event.currentTarget.textContent;\n    const selectedLanguage = languages.find((lang) => lang.locale === locale);\n    setLanguage(selectedLanguage);\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  };\n\n  /** Closes menu */\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      {/* Button to toggle menu */}\n      <Button\n        variant=\"contained\"\n        onClick={handleClickListItem}\n        className={classes.toggle}\n        size=\"small\"\n      >\n        {currentLanguage.locale}\n      </Button>\n\n      {/* Language menu */}\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {languages.map((lang, index) => (\n          <MenuItem\n            key={lang.tag}\n            selected={index === selectedIndex}\n            onClick={(event) => handleMenuItemClick(event, index)}\n            className={classes.menuItem}\n          >\n            {lang.locale}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  menuItem: {\n    textAlign: 'center',\n  },\n  toggle: {\n    backgroundColor: theme.palette.primary.main,\n    borderColor: theme.palette.primary.borderColor,\n    color:  theme.palette.primary.contrastText,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor:  theme.palette.primary.dark,\n    },\n    width: '100%',\n    marginTop: 5,\n    marginBottom: 5,\n  }\n}));\n\nexport default LanguageMenu;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Search from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core';\nimport LanguageMenu from '../components/LanguageMenu';\n\n/**\n * Search bar when displaying stock items\n * - Filters stock by name\n * - Changes language through dropdown\n * - Refreshes stock\n */\nfunction SearchBar({\n  stock,\n  getFilteredStockItems,\n  setNameQuery,\n  getStock,\n  LANGUAGES,\n  language,\n  setLanguage,\n  error,\n}) {\n  const classes = useStyles();\n  return (\n    <Paper elevation={1} className={classes.searchPaper}>\n      <Box display=\"flex\" alignItems=\"center\">\n        {/* Search bar */}\n        <TextField\n          className={classes.search}\n          type=\"search\"\n          id=\"searchbar\"\n          label={`Showing ${getFilteredStockItems().length} of ${\n            stock.length\n          } items`}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            ),\n          }}\n          onChange={(event) => setNameQuery(event.target.value.toLowerCase())}\n        />\n\n        {/* Refresh stock button */}\n        <IconButton size=\"medium\" color=\"primary\" onClick={getStock}>\n          <RefreshIcon />\n        </IconButton>\n\n        {/* Language menu */}\n        <LanguageMenu\n          languages={LANGUAGES}\n          currentLanguage={language}\n          setLanguage={setLanguage}\n          isError={error}\n        />\n      </Box>\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  searchPaper: {\n    margin: 5,\n    padding: theme.spacing(2),\n  },\n  search: {\n    width: '95%',\n  },\n}));\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { createStockItem } from '../api/Stock';\nimport { auth } from '../firebase';\nimport { makeStyles } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n/**\n * Form component that handles creation of new stock items\n */\nfunction StockInput({ getStock, defaultExpanded = false }) {\n  const [loading, setLoading] = useState(false);\n  /**\n   * Handles sending new stock item requests to API\n   * @param {Object} values { name, count } from form\n   */\n  async function onSubmit(values) {\n    setLoading(true);\n\n    // Create item with user's id\n    const item = {\n      name: values.name,\n      count: parseInt(values.count),\n      pantry: auth.currentUser.uid,\n    };\n\n    // Send request to API and stop loading once promise is resolved\n    await createStockItem(item);\n\n    setLoading(false);\n    getStock(500);\n  }\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.container}>\n      <Accordion defaultExpanded={defaultExpanded}>\n        {/* Accordion toggle area */}\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"stock-input-content\"\n          id=\"stock-input-header\"\n        >\n          <Typography>Insert a stock item</Typography>\n        </AccordionSummary>\n\n        {/* Accordion expandable area */}\n        <AccordionDetails className={classes.details}>\n          <Formik\n            validationSchema={itemSchema}\n            onSubmit={onSubmit}\n            initialValues={{\n              name: '',\n              count: 1,\n            }}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              handleReset,\n              isSubmitting,\n              values,\n              touched,\n              isValid,\n              errors,\n            }) => (\n              <>\n                {/* Item name text field */}\n                <TextField\n                  id=\"name\"\n                  label=\"Enter new item name\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.name ? errors.name : ''}\n                  error={touched.name && Boolean(errors.name)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n\n                {/* Item count text field */}\n                <TextField\n                  id=\"count\"\n                  label=\"Enter new item count\"\n                  value={values.count}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.count ? errors.count : ''}\n                  error={touched.count && Boolean(errors.count)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n\n                {/* Form buttons */}\n                <Container className={classes.actions}>\n                  {/* Submit button */}\n                  <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    disabled={loading || isSubmitting}\n                    className={classes.button}\n                    onClick={handleSubmit}\n                  >\n                    {isSubmitting ? 'Adding...' : 'Add item'}\n                  </Button>\n\n                  {/* Clear button */}\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    onClick={handleReset}\n                  >\n                    Clear\n                  </Button>\n                </Container>\n              </>\n            )}\n          </Formik>\n        </AccordionDetails>\n      </Accordion>\n    </Container>\n  );\n}\n\n// Schema for new stock item\nconst itemSchema = Yup.object({\n  name: Yup.string().required(),\n  count: Yup.number().integer().moreThan(-1).required(),\n});\n\n// Styling\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  card: {\n    width: '100%',\n    marginTop: 5,\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  actions: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingBottom: 0,\n  },\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    borderColor: theme.palette.primary.borderColor,\n    color:  theme.palette.primary.contrastText,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor:  theme.palette.primary.dark,\n    },\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default StockInput;\n","const LANGUAGES = [\n  { tag: 'en', locale: 'English' },\n  { tag: 'zh-CN', locale: 'Chinese (Simplified)' },\n  { tag: 'es', locale: 'Spanish' },\n  { tag: 'fr', locale: 'French' },\n  { tag: 'de', locale: 'German' },\n];\n\nexport default LANGUAGES;\n","import { useEffect, useState } from 'react';\nimport { fetchStock } from '../api/Stock';\nimport { auth } from '../firebase';\n\n/**\n * Handles state of fetching stock items from API\n * @return {[Array, Boolean, Error, Function]}\n */\nfunction useStock() {\n  const [stock, setStock] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  /**\n   * Fetches stock from API and stores in state\n   * @param {Number} timeout ms to wait before fetching stock\n   */\n  function getStock(timeout = 0) {\n    // Set stock empty to begin loading spinner\n    setStock([]);\n    setError(null);\n    setLoading(true);\n\n    // Fetch stock after designated time\n    setTimeout(() => {\n      fetchStock(auth.currentUser.uid)\n        .then((res) => {\n          setStock(res.data);\n          setLoading(false);\n        })\n        .catch((e) => {\n          setError(e);\n          setLoading(false);\n        });\n    }, timeout);\n  }\n\n  /**\n   * Fetch stock as soon as page is rendered, if user is signed in\n   */\n  useEffect(() => {\n    if (Boolean(auth.currentUser)) {\n      getStock();\n    }\n  }, []);\n\n  // Return state of stock\n  return [stock, loading, error, getStock];\n}\n\nexport default useStock;","import { useState } from 'react';\n\n/**\n * Contains logic for searching stock items by English and translated names\n * @param {Array<{ name: String, translations: Object }>} stock list of stock items\n * @param {String} languageTag language tag, e.g. `en`, `es`, `zh-CN`, etc.\n */\nfunction useNameSearch(stock, languageTag) {\n  const [nameQuery, setNameQuery] = useState('');\n\n  /**\n   * Returns filtered stock array based on search queries\n   * Name query: allows if EITHER English or translated name includes query\n   * @return {Array<{ name: String, translations: Object }>} stock list of stock items\n   * \n   */\n  function getFilteredStockItems() {\n    return stock.filter((item) => {\n      // Check if query is included in English name\n      const inEnglishName = item.name.toLowerCase().includes(nameQuery);\n\n      let inTranslatedName = false;\n\n      // Check first if translations have loaded\n      let translations = item.translations;\n      if (Boolean(translations) && translations[languageTag] !== undefined) {\n        // Check if query is included in translated name\n        inTranslatedName = item.translations[languageTag]\n          .toLowerCase()\n          .includes(nameQuery);\n      }\n      return inEnglishName || inTranslatedName;\n    });\n  }\n\n  return [setNameQuery, getFilteredStockItems];\n}\n\nexport default useNameSearch;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n/** Material UI imports */\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\n/** Component imports */\nimport ErrorAlert from '../components/ErrorAlert';\nimport Loading from '../components/Loading';\nimport StockCard from '../components/StockCard';\nimport SearchBar from '../components/SearchBar';\nimport StockInput from '../components/StockInput';\n\n/** Constants, Firebase, API */\nimport LANGUAGES from '../constants/Languages';\nimport { LANDING } from '../constants/Routes';\nimport { auth } from '../firebase';\n\n/** Custom hooks */\nimport useStock from '../hooks/useStock';\nimport useNameSearch from '../hooks/useNameSearch';\nimport useMobile from '../hooks/useMobile';\n\n/**\n * Page displaying the stock of food pantry with options for language\n */\nfunction Stock() {\n  const [stock, loading, error, getStock] = useStock();\n  const [language, setLanguage] = useState(LANGUAGES[0]);\n  const [setNameQuery, getFilteredStockItems] = useNameSearch(\n    stock,\n    language.tag\n  );\n  const isMobile = useMobile();\n  const history = useHistory();\n\n  /**\n   * Fetch stock as soon as page is rendered, if user is signed in\n   */\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      history.push(LANDING);\n    }\n  }, [history]);\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h1\" className={classes.title}>\n        Stock Dashboard\n      </Typography>\n\n      {/* Two column desktop layout, one column mobile layout */}\n      <Grid container spacing={isMobile ? 0 : 2}>\n        {/* Left column */}\n        <Grid item xs={12} md={4}>\n          {/* On mobile: hide options in accordion */}\n          {isMobile && <StockInput getStock={getStock} />}\n\n          {/* On desktop: keep options bar open */}\n          {!isMobile && (\n            <Paper elevation={2} className={classes.column}>\n              <Typography variant=\"h5\" className={classes.subheading}>\n                Options\n              </Typography>\n              <StockInput getStock={getStock} defaultExpanded={true} />\n            </Paper>\n          )}\n        </Grid>\n\n        {/* Right column */}\n        <Grid item xs={12} md={8}>\n          {/* Search bar */}\n          <SearchBar\n            LANGUAGES={LANGUAGES}\n            stock={stock}\n            getFilteredStockItems={getFilteredStockItems}\n            error={error}\n            getStock={getStock}\n            language={language}\n            setLanguage={setLanguage}\n            setNameQuery={setNameQuery}\n          />\n\n          {/* Stock items */}\n          {stock &&\n            getFilteredStockItems().map((item) => (\n              <StockCard\n                stockItem={item}\n                getStock={getStock}\n                // Key of English name is always 'name'\n                languageTag={language.tag}\n                key={item.name}\n              />\n            ))}\n\n          {/* Alert when no stock is found */}\n          {!loading && !error && stock.length === 0 && (\n            <ErrorAlert\n              severity=\"info\"\n              body=\"No stock items found. Insert one in the Options menu!\"\n            />\n          )}\n\n          {/* Loading spinner */}\n          {loading && <Loading />}\n\n          {/* Error alert */}\n          {error && (\n            <ErrorAlert\n              heading=\"Error\"\n              body={`An error occurred while trying to get the stock. ${error}`}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n    flexGrow: 1,\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: 2,\n      paddingRight: 2,\n    },\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: theme.typography.h3.fontSize,\n    [theme.breakpoints.down('md')]: {\n      fontSize: theme.typography.h4.fontSize,\n    },\n    marginBottom: theme.spacing(2),\n  },\n  subheading: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n  },\n  column: {\n    padding: theme.spacing(2),\n  },\n  searchPaper: {\n    margin: 5,\n    padding: theme.spacing(2),\n  },\n  search: {\n    width: '95%',\n  },\n  details: {\n    display: 'block',\n  },\n  info: {\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '10px',\n    },\n  },\n}));\n\nexport default Stock;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Component that wraps children in accordion\n */\nfunction AccordionWrapper({ summary, children, usePrimary = false }) {\n  const classes = useStyles();\n  return (\n    <Accordion\n      className={clsx(classes.accordion, usePrimary && classes.primary)}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"stock-input-content\"\n        id=\"stock-input-header\"\n      >\n        <Typography>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.details}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  accordion: {\n    width: '100%',\n  },\n  primary: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n  },\n  details: {\n    display: 'block',\n  },\n}));\n\nexport default AccordionWrapper;\n","import React, { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport Modal from '@material-ui/core/Modal';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n/**\n * Allows user to select how much of a stock item to request\n */\nfunction OrderModal({\n  show,\n  handleClose,\n  stockId,\n  stockName,\n  stockCount,\n  onRequest,\n  defaultAmount = 1,\n}) {\n  const [selectedAmount, setSelectedAmount] = useState(defaultAmount);\n\n  /** Decreases selected amount by 1 */\n  function handleDecrease() {\n    if (selectedAmount > 1) setSelectedAmount(selectedAmount - 1);\n  }\n\n  /** Increases selected amount by 1 */\n  function handleIncrease() {\n    if (selectedAmount < stockCount) setSelectedAmount(selectedAmount + 1);\n  }\n\n  /**\n   * Assigns new selected amount based on text field input from `onChange`\n   */\n  function changeSelectedAmount(event) {\n    const amount = event.currentTarget.valueAsNumber;\n    if (isNaN(Number(amount)) || amount < 1) {\n      setSelectedAmount(1);\n    } else if (amount > stockCount) {\n      setSelectedAmount(stockCount);\n    } else {\n      setSelectedAmount(amount);\n    }\n  }\n\n  /**\n   * Adds requested item to order list\n   */\n  function submitRequest() {\n    const requestedItem = {\n      id: stockId,\n      name: stockName,\n      requestedCount: selectedAmount,\n      countAfterRequest: stockCount - selectedAmount,\n    };\n\n    onRequest(requestedItem);\n    handleClose();\n  }\n\n  // Wrapper for bolding text within a component\n  const Bold = ({ children }) => (\n    <font style={{ fontWeight: 'bold' }}>{children}</font>\n  );\n\n  const classes = useStyles();\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          {/* Heading */}\n          <Typography variant=\"h5\">\n            Select requested amount for: <Bold>{stockName}</Bold>\n          </Typography>\n          <Divider />\n\n          {/* Counts */}\n          <Grid container spacing={0}>\n            <Grid item xs={12} md={6}>\n              <Typography>\n                Current amount: <Bold>{stockCount}</Bold>\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Typography>\n                Amount after request: <Bold>{stockCount - selectedAmount}</Bold>\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {/* Stock count selection */}\n          <ButtonGroup fullWidth className={classes.buttonGroup}>\n            {/* Decrease */}\n            <IconButton\n              onClick={handleDecrease}\n              className={classes.incrementor}\n            >\n              <RemoveIcon />\n            </IconButton>\n\n            {/* Enter requested amount */}\n            <TextField\n              type=\"number\"\n              placeholder={selectedAmount}\n              value={selectedAmount}\n              onChange={changeSelectedAmount}\n              className={classes.textField}\n            />\n\n            {/* Increase */}\n            <IconButton\n              onClick={handleIncrease}\n              className={classes.incrementor}\n            >\n              <AddIcon />\n            </IconButton>\n          </ButtonGroup>\n\n          {/* Request button */}\n          <Button className={classes.button} onClick={submitRequest}>\n            Request amount\n          </Button>\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n    minWidth: '20vw',\n  },\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    borderColor: theme.palette.primary.borderColor,\n    color:  theme.palette.primary.contrastText,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor:  theme.palette.primary.dark,\n    },\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  buttonGroup: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  closeButton: {\n    width: '100%',\n  },\n  form: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  incrementor: {\n    width: '25%',\n  },\n  textField: {\n    maxWidth: '50%',\n  },\n}));\n\nexport default OrderModal;\n","import React, { useState } from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport OrderModal from './OrderModal';\nimport StockInfo from './StockInfo';\nimport useLanguage from '../hooks/useLanguage';\n\n/**\n * Stock item card on order screen\n */\nfunction StockOrderCard({\n  stockItem,\n  getStock,\n  languageTag = 'en',\n  onRequest,\n  requestedCount = 0,\n}) {\n  const [showOrderModal, setShowAmountModal] = useState(false);\n  const hasLanguage = useLanguage(languageTag, stockItem);\n\n  // Handlers for showing/closing modal when ordering item\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  /**\n   * If requested, shows stock count before and after order request\n   */\n  function getVisibleStockCount() {\n    return requestedCount\n      ? `${stockItem.count} → ${stockItem.count - requestedCount}`\n      : stockItem.count;\n  }\n\n  return (\n    <>\n      <Fade in exit>\n        <StockInfo\n          stockItem={stockItem}\n          languageTag={languageTag}\n          hasLanguage={hasLanguage}\n          handleShow={handleShow}\n          showEnglishOnly={languageTag === 'en'}\n          visibleStockCount={getVisibleStockCount()}\n          disableClick={stockItem.count <= 0}\n        />\n      </Fade>\n\n      <OrderModal\n        show={showOrderModal}\n        handleClose={handleClose}\n        stockName={stockItem.name}\n        stockId={stockItem._id}\n        stockCount={stockItem.count}\n        onRequest={onRequest}\n      />\n    </>\n  );\n}\n\nexport default StockOrderCard;\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Fade from '@material-ui/core/Fade';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\nimport OrderModal from './OrderModal';\n\n/**\n * Card displaying a requested stock item on Order Stock page\n */\nfunction RequestedItemCard({\n  requestedItem,\n  onRequest,\n  removeRequestedItem,\n  showActions = true,\n}) {\n  const { id, name, requestedCount, countAfterRequest } = requestedItem;\n  const [showOrderModal, setShowAmountModal] = useState(false);\n\n  // Handlers for showing/closing modal when ordering item\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  // Removes requested item from list using callback\n  function removeItem() {\n    removeRequestedItem(requestedItem);\n  }\n\n  const classes = useStyles();\n  return (\n    <>\n      <Fade in>\n        <Card className={classes.card} variant=\"outlined\" raised>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            {/* Item name and count */}\n            <CardContent display=\"flex\">\n              <Typography>\n                {name}:{' '}\n                <font style={{ fontWeight: 'bold' }}>{requestedCount}</font>\n              </Typography>\n            </CardContent>\n\n            {/* Edit count and remove item */}\n            {showActions && (\n              <CardActions>\n                <IconButton color=\"primary\" onClick={handleShow}>\n                  <EditIcon />\n                </IconButton>\n                <IconButton color=\"secondary\" onClick={removeItem}>\n                  <CancelIcon />\n                </IconButton>\n              </CardActions>\n            )}\n          </Box>\n        </Card>\n      </Fade>\n\n      <OrderModal\n        show={showOrderModal}\n        handleClose={handleClose}\n        stockName={name}\n        stockId={id}\n        stockCount={countAfterRequest + requestedCount}\n        onRequest={onRequest}\n        defaultAmount={requestedCount}\n      />\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default RequestedItemCard;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LANDING } from '../constants/Routes';\n\n/**\n * Dialog to let volunteer and patron review order before submitting\n */\nfunction ReviewDialog({\n  show,\n  handleClose,\n  submitRequest,\n  requestedStockItems,\n  personInfo,\n}) {\n  const [additionalNotes, setAdditionalNotes] = useState('');\n  const [requestLoading, setRequestLoading] = useState(false);\n  const [requestSuccess, setRequestSuccess] = useState(null);\n  const history = useHistory();\n  const { firstName, lastName, adults, children, zipcode } = personInfo;\n\n  async function submitOrder() {\n    setRequestLoading(true);\n    const success = await submitRequest(additionalNotes);\n\n    setRequestLoading(false);\n    setRequestSuccess(success);\n  }\n\n  function finishOrder() {\n    history.push(LANDING);\n  }\n\n  function getSubmitButtonText() {\n    if (requestLoading) {\n      return 'Submitting...';\n    } else if (requestSuccess) {\n      return 'Go to home page';\n    } else {\n      return 'Submit request';\n    }\n  }\n\n  const title = requestSuccess ? 'Order requested!' : 'Review Order';\n  const classes = useStyles();\n  return (\n    <Dialog\n      open={show}\n      onClose={requestSuccess ? finishOrder : handleClose}\n      scroll=\"paper\"\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\"\n      className={classes.modal}\n      fullWidth\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h3\" className={classes.title}>\n            {title}\n          </Typography>\n          <Divider className={classes.divider} />\n\n          {/* Hide items after request is received */}\n          {!requestSuccess && (\n            <Box>\n              {/* Requested items */}\n              <Typography variant=\"h4\" className={classes.subtitle}>\n                Requested items:\n              </Typography>\n              <List dense>\n                {requestedStockItems.map((r) => (\n                  <ListItem key={r.name}>\n                    <ListItemText primary={`${r.name}: ${r.requestedCount}`} />\n                  </ListItem>\n                ))}\n              </List>\n\n              {/* Patron info */}\n              <Typography variant=\"h4\" className={classes.subtitle}>\n                Patron info:\n              </Typography>\n              <List dense>\n                <ListItem>\n                  <ListItemText primary={firstName} secondary=\"First name\" />\n                </ListItem>\n                <ListItem>\n                  <ListItemText primary={lastName} secondary=\"Last name\" />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary={adults}\n                    secondary=\"# of adults in household\"\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary={children}\n                    secondary=\"# of children in household\"\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemText primary={zipcode} secondary=\"Zipcode\" />\n                </ListItem>\n              </List>\n\n              {/* Space for additional notes */}\n              <TextField\n                variant=\"filled\"\n                label=\"Additional notes\"\n                className={classes.additionalNotes}\n                onChange={(e) => setAdditionalNotes(e.currentTarget.value)}\n                multiline\n              />\n            </Box>\n          )}\n\n          {/* Submit button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={requestSuccess ? finishOrder : submitOrder}\n            disabled={requestLoading}\n            fullWidth\n          >\n            {getSubmitButtonText()}\n          </Button>\n        </Paper>\n      </Fade>\n    </Dialog>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  additionalNotes: {\n    marginBottom: theme.spacing(3),\n    width: '100%',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n    minWidth: '30vw',\n  },\n  title: {\n    fontSize: theme.typography.h4.fontSize,\n    textAlign: 'center',\n  },\n  divider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  subtitle: {\n    fontSize: 20,\n  },\n}));\n\nexport default ReviewDialog;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n/** Material UI Imports */\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport { makeStyles } from '@material-ui/core';\n\n/** Component imports */\nimport AccordionWrapper from '../components/AccordionWrapper';\nimport ErrorAlert from '../components/ErrorAlert';\nimport Loading from '../components/Loading';\nimport StockOrderCard from '../components/StockOrderCard';\nimport SearchBar from '../components/SearchBar';\nimport RequestedItemCard from '../components/RequestedItemCard';\nimport ReviewDialog from '../components/ReviewDialog';\n\n/** Constants, API, Firebase */\nimport LANGUAGES from '../constants/Languages';\nimport { LANDING, ORDER_FORM } from '../constants/Routes';\nimport { ORDER_STEPS } from '../constants/Order';\nimport { addPersonInfo } from '../api/People';\nimport { updateStockCount } from '../api/Stock';\nimport { auth } from '../firebase';\n\n/** Custom hooks */\nimport useStock from '../hooks/useStock';\nimport useNameSearch from '../hooks/useNameSearch';\nimport useMobile from '../hooks/useMobile';\n\n/**\n * Allows user to order stock items only after they've filled out form\n */\nfunction OrderStock() {\n  const history = useHistory();\n  const isMobile = useMobile();\n  const location = useLocation();\n  const fromForm = location.state !== undefined;\n\n  const [stock, loading, error, getStock] = useStock();\n  const [language, setLanguage] = useState(LANGUAGES[0]);\n  const [setNameQuery, getFilteredStockItems] = useNameSearch(\n    stock,\n    language.tag\n  );\n  const [showReview, setShowReview] = useState(false);\n\n  // Patron info from order form page, kept in local storage if necessary\n  const [personInfo] = useState(\n    fromForm\n      ? location.state.personInfo\n      : retrieveFromStorage('personInfo', undefined)\n  );\n\n  // List of requested items, kept in lcoal storage if necessary\n  const [requestedStockItems, setRequestedStockItems] = useState(\n    retrieveFromStorage('requestedStockItems', [])\n  );\n\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      // Send user back to homepage if not signed in\n      history.push(LANDING);\n    } else if (!personInfo) {\n      // Send user back to form if they didn't fill it out\n      history.push(ORDER_FORM);\n    } else {\n      localStorage.setItem('personInfo', JSON.stringify(personInfo));\n    }\n  }, [fromForm, history, personInfo]);\n\n  function retrieveFromStorage(key, defaultValue) {\n    const stored = localStorage.getItem(key);\n    if (stored) {\n      return JSON.parse(stored);\n    } else {\n      return defaultValue;\n    }\n  }\n\n  /**\n   * Callback for OrderModal to add item to items list\n   * @param {{\n   *  id: String,\n   *  name: String,\n   *  requestedCount: Number,\n   *  countAfterRequest: Number }} requestedItem\n   */\n  function onRequest(requestedItem) {\n    // Check if item is already in list\n    let alreadyRequested = requestedStockItems.find(\n      (item) => item.id === requestedItem.id\n    );\n\n    let updatedRequestedItems;\n\n    if (alreadyRequested === undefined) {\n      // If item isn't in list, simply add it\n      updatedRequestedItems = requestedStockItems.concat(requestedItem);\n    } else {\n      // If item is already in list, update its values instead of adding\n      let itemIndex = requestedStockItems.indexOf(alreadyRequested);\n\n      updatedRequestedItems = [...requestedStockItems];\n\n      // Replace old values with new values\n      updatedRequestedItems[itemIndex].requestedCount =\n        requestedItem.requestedCount;\n      updatedRequestedItems[itemIndex].countAfterRequest =\n        requestedItem.countAfterRequest;\n    }\n\n    // Update state and local storage\n    setRequestedStockItems(updatedRequestedItems);\n    localStorage.setItem(\n      'requestedStockItems',\n      JSON.stringify(updatedRequestedItems)\n    );\n  }\n\n  /**\n   * Removes a requested item from list, if present\n   * @param requestedItem item in order to remove\n   */\n  function removeRequestedItem(requestedItem) {\n    const index = requestedStockItems.indexOf(requestedItem);\n    if (index > -1) {\n      const updatedRequest = [...requestedStockItems];\n      updatedRequest.splice(index, 1);\n      setRequestedStockItems(updatedRequest);\n      // TODO: update local storage\n    }\n  }\n\n  function writeRequestToNotes() {\n    let orderNotes = '';\n    requestedStockItems.forEach((item) => {\n      orderNotes += item.name + ': ' + item.requestedCount + ', ';\n    });\n    return orderNotes.slice(0, -2);\n  }\n\n  async function submitRequest(additionalNotes) {\n    // Send full person info to API\n    const requestBody = {\n      pantry: auth.currentUser.uid,\n      firstName: personInfo.firstName,\n      lastName: personInfo.lastName,\n      adults: parseInt(personInfo.adults),\n      children: parseInt(personInfo.children),\n      zipcode: personInfo.zipcode,\n      'order-notes': writeRequestToNotes(),\n      additionalNotes: additionalNotes,\n      fulfilled: false,\n    };\n\n    await addPersonInfo(requestBody);\n\n    // Send updates for each requested item to API\n    const stockUpdatePromises = requestedStockItems.map((item) => {\n      let body = {\n        pantry: auth.currentUser.uid,\n        _id: item.id,\n        newCount: item.countAfterRequest,\n      };\n\n      return updateStockCount(body);\n    });\n\n    // TODO: handle case where some update doesn't go through\n    // Make sure all updates are good\n    await Promise.all(stockUpdatePromises);\n\n    // Clear local storage\n    localStorage.removeItem('requestedStockItems');\n    localStorage.removeItem('personInfo');\n\n    return true;\n  }\n\n  /**\n   * Gets the requested count of a stock item, or 0 if not requested\n   * @param {String} itemId id of requested stock item\n   */\n  function getRequestedCount(itemId) {\n    let requestedItem = requestedStockItems.find((item) => item.id === itemId);\n    if (Boolean(requestedItem)) {\n      return requestedItem.requestedCount;\n    } else {\n      return 0;\n    }\n  }\n\n  const classes = useStyles();\n  const orderTitle = `Review order (${requestedStockItems.length})`;\n  const buttonText =\n    requestedStockItems.length > 0 ? 'Review order' : 'Select items';\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h1\" className={classes.title}>\n        Select order for {personInfo.firstName} {personInfo.lastName}\n      </Typography>\n\n      <Stepper\n        activeStep={showReview ? 2 : 1}\n        className={classes.stepper}\n        alternativeLabel\n      >\n        {ORDER_STEPS.map((step) => (\n          <Step key={step}>\n            <StepLabel>{step}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {/* Two column desktop layout, one column mobile layout */}\n      <Grid container spacing={isMobile ? 1 : 2}>\n        {/* Left column */}\n        <Grid item xs={12} md={5}>\n          {/* On mobile: hide order in accordion */}\n          {isMobile && (\n            <AccordionWrapper\n              summary={\n                <Badge\n                  badgeContent={requestedStockItems.length}\n                  color=\"secondary\"\n                >\n                  {'Review Order Here'}\n                </Badge>\n              }\n              usePrimary={requestedStockItems.length > 0}\n            >\n              {/* Requested items */}\n              {requestedStockItems.map((r) => (\n                <RequestedItemCard\n                  requestedItem={r}\n                  onRequest={onRequest}\n                  removeRequestedItem={removeRequestedItem}\n                  key={r.id}\n                />\n              ))}\n\n              {/* Submit button */}\n              <Button\n                fullWidth\n                onClick={() => setShowReview(true)}\n                disabled={requestedStockItems.length === 0}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                {buttonText}\n              </Button>\n            </AccordionWrapper>\n          )}\n\n          {/* On desktop: keep order open */}\n          {!isMobile && (\n            <Paper elevation={2} className={classes.column}>\n              {/* Title */}\n              <Typography variant=\"h5\" className={classes.subheading}>\n                {orderTitle}\n              </Typography>\n\n              {/* Requested items */}\n              {requestedStockItems.map((r) => (\n                <RequestedItemCard\n                  requestedItem={r}\n                  onRequest={onRequest}\n                  removeRequestedItem={removeRequestedItem}\n                  key={r.id}\n                />\n              ))}\n\n              {/* Submit button */}\n              <Button\n                fullWidth\n                onClick={() => setShowReview(true)}\n                disabled={requestedStockItems.length === 0}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                {buttonText}\n              </Button>\n            </Paper>\n          )}\n        </Grid>\n\n        {/* Right column */}\n        <Grid item xs={12} md={7}>\n          {/* Search bar */}\n          <SearchBar\n            LANGUAGES={LANGUAGES}\n            stock={stock}\n            getFilteredStockItems={getFilteredStockItems}\n            error={error}\n            getStock={getStock}\n            language={language}\n            setLanguage={setLanguage}\n            setNameQuery={setNameQuery}\n          />\n\n          {/* Stock items */}\n          {stock &&\n            personInfo &&\n            getFilteredStockItems().map((item) => (\n              <StockOrderCard\n                stockItem={item}\n                getStock={getStock}\n                languageTag={language.tag}\n                key={item._id}\n                onRequest={onRequest}\n                requestedCount={getRequestedCount(item._id)}\n              />\n            ))}\n\n          {/* Alert when no stock is found */}\n          {!loading && !error && stock.length === 0 && (\n            <ErrorAlert\n              severity=\"info\"\n              body=\"No stock items found. Insert one in the Options menu!\"\n            />\n          )}\n\n          {/* Loading spinner */}\n          {loading && <Loading />}\n\n          {/* Error alert */}\n          {error && (\n            <ErrorAlert\n              heading=\"Error\"\n              body={`An error occurred while trying to get the stock. ${error}`}\n            />\n          )}\n        </Grid>\n      </Grid>\n\n      {/* Review popup */}\n      <ReviewDialog\n        show={showReview}\n        handleClose={() => {\n          setShowReview(false);\n        }}\n        requestedStockItems={requestedStockItems}\n        personInfo={personInfo}\n        submitRequest={submitRequest}\n      />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: 2,\n      paddingRight: 2,\n    },\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: theme.typography.h3.fontSize,\n    [theme.breakpoints.down('md')]: {\n      fontSize: theme.typography.h4.fontSize,\n    },\n    marginBottom: theme.spacing(2),\n  },\n  subheading: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n  },\n  column: {\n    padding: theme.spacing(2),\n  },\n  searchPaper: {\n    margin: 5,\n    padding: theme.spacing(2),\n  },\n  search: {\n    width: '95%',\n  },\n  details: {\n    display: 'block',\n  },\n  info: {\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '10px',\n    },\n  },\n  stepper: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: theme.breakpoints.values.sm,\n    [theme.breakpoints.down('md')]: {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n  },\n}));\n\nexport default OrderStock;\n","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport { Fade, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Confirmation modal when fulfilling a person's order\n */\nfunction FulfillModal({ person, personId, show, handleClose, fulfillPerson }) {\n  /**\n   * Handles confirmation of fulfilling a person's order\n   */\n  function handleConfirm() {\n    handleClose(); //closes first so that repeat requests are not sent\n    fulfillPerson(personId);\n  }\n\n  const classes = useStyles();\n  return (\n    <Modal\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      aria-describedby={\"modal-to-fulfill \" + person.firstName}\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      centered\n      className={classes.modal}\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <h3>Confirm fulfillment</h3>\n          <h5>\n            Are you sure that {person.firstName}'s order is correct and has been\n            fulfilled?\n          </h5>\n          <p>{person['order-notes']}</p>\n          <p>{person['additionalNotes']}</p>\n\n          <Button \n            color=\"secondary\" \n            variant=\"contained\"\n            className={classes.close} \n            onClick={handleClose}>\n            Close\n          </Button>\n          <Button \n            onClick={handleConfirm}\n            className={classes.confirm}>\n            Confirm fulfillment\n          </Button>\n        </Paper> \n      </Fade>\n    </Modal>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  confirm: {\n    backgroundColor: theme.palette.primary.main,\n    borderColor: theme.palette.primary.borderColor,\n    color:  theme.palette.primary.contrastText,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor:  theme.palette.primary.dark,\n    },\n    borderRadius: '200px'\n  },\n  close:{\n    borderRadius: '200px',\n    margin: '5px'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n  },\n\n}));\n\n\nexport default FulfillModal;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { CardActions } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport FulfillModal from './FulfillModal';\n\n/**\n * Displays:\n * - person's name\n * - order notes\n * - button that sends a socket emit to backend that\n *   sets fulfill to true\n */\nfunction UnfulfilledOrderCard({ person, id, fulfillPerson }) {\n  const [showFulfillModal, setShowFulfillModal] = useState(false);\n\n  // Handlers for showing/closing modal when ordering item\n  const handleClose = () => setShowFulfillModal(false);\n  const handleShow = () => setShowFulfillModal(true);\n\n  const classes = useStyles();\n\n  function formatDate(date) {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    let strTime = date.toDateString() + \" \" + hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n  return (\n    <>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"h5\">\n            \n            {person['firstName']} {person['lastName']}\n          </Typography>\n          <Typography>\n            <Box textAlign=\"right\">\n              {formatDate(person['timestamp'].toDate())} \n            </Box>    \n          </Typography>\n          <Typography variant=\"body1\">\n            {person['order-notes']}\n          </Typography>\n          <Typography variant=\"body2\">\n            {person['additionalNotes']}\n          </Typography>\n          \n        </CardContent>\n        <CardActions>\n          <Button\n            onClick={handleShow}\n            className={classes.button}\n            variant=\"contained\"\n            disableElevation\n          >\n            Fulfill Order\n          </Button>\n        </CardActions>\n      </Card>\n\n      <FulfillModal\n        person={person}\n        personId={id}\n        show={showFulfillModal}\n        handleClose={handleClose}\n        fulfillPerson={fulfillPerson}\n      />\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) =>({\n  root: {\n    minWidth: 275,\n  },\n  order: {\n    fontsize: 12,\n  },\n  additional: {\n    fontsize: 10,\n  },\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    borderColor: theme.palette.primary.borderColor,\n    color:  theme.palette.primary.contrastText,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor:  theme.palette.primary.dark,\n    },\n    marginBottom: 5,\n  },\n}));\n\nexport default UnfulfilledOrderCard;\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport cart from '../images/empty-cart.svg';\nimport Grid from '@material-ui/core/Grid';\nimport theme from '../constants/Theme';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    justifyContent: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  dialog: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  image: {\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    marginTop: theme.spacing(20),\n  },\n  grid: {\n    textAlign: 'center',\n  },\n}));\n\n\nexport default function AlertDialogSlide() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <MuiThemeProvider theme={theme}>\n        <Dialog\n          open={open}\n          maxWidth=\"lg\"\n          keepMounted\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n          className={classes.dialog}\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">\n            {'No orders at the moment'}\n          </DialogTitle>\n          <DialogActions className={classes.button}>\n            <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </MuiThemeProvider>\n      <Grid container className={classes.grid}>\n        <Grid item lg={4} sm={4}></Grid>\n        <Grid item xs={12} lg={4} sm={4} className={classes.grid}>\n          <img alt=\"Shopping cart\" src={cart} className={classes.image} />\n        </Grid>\n        <Grid item lg={4} sm={4}></Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { updatePerson } from '../api/People';\nimport { useHistory } from 'react-router-dom';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { db, auth } from '../firebase';\nimport { LANDING } from '../constants/Routes';\nimport UnfulfilledOrderCard from '../components/UnfulfilledOrderCard';\nimport Loading from '../components/Loading';\nimport Dialog from '../components/EmptyDialog';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Page with list of people with unfulfilled orders\n */\nfunction OrderTracker() {\n  const history = useHistory();\n  const [user, userLoading, userError] = useAuthState(auth);\n  const [query, setQuery] = useState();\n\n  useEffect(() => {\n    if (!Boolean(user)) {\n      // If user is not logged in, redirect to home screen\n      history.push(LANDING);\n    } else {\n      // If user is logged in, fetch their orders\n      setQuery(\n        db\n          .collection('pantries')\n          .doc(user.uid)\n          .collection('people')\n          .where('fulfilled', '==', false)\n      );\n    }\n  }, [history, user]);\n\n  const [snapshot, snapLoading, snapError] = useCollection(query);\n\n  function fulfillOrder(id) {\n    const requestBody = {\n      pantry: user.uid,\n      _id: id,\n      fulfilled: true,\n    };\n    updatePerson(requestBody);\n  }\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      {userError && <strong>User Error: {JSON.stringify(snapError)}</strong>}\n      {userLoading && <span>User: Loading...</span>}\n      {snapError && (\n        <strong>Collection Error: {JSON.stringify(snapError)}</strong>\n      )}\n      {snapLoading && <Loading />}\n      {snapshot && snapshot.docs.length === 0 && <Dialog />}\n      {snapshot &&\n        snapshot.docs.map((doc) => (\n          <UnfulfilledOrderCard\n            person={doc.data()}\n            id={doc.id}\n            fulfillPerson={fulfillOrder}\n            key={doc._id}\n          />\n        ))}\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n  },\n}));\n\nexport default OrderTracker;\n","import React, { useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Loading from '../components/Loading';\nimport ErrorAlert from '../components/ErrorAlert';\nimport Paper from '@material-ui/core/Paper';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport {\n  auth,\n  signInWithFacebook,\n  signInWithGoogle,\n  signInWithYahoo,\n} from '../firebase';\nimport { makeStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { LANDING } from '../constants/Routes';\nimport logo from '../images/logo_nobg.png';\nimport Footer from '../components/Footer';\n\n/**\n * Sign in page for Pan-Lang\n */\nfunction SignIn() {\n  const history = useHistory();\n  const [user, loading, error] = useAuthState(auth);\n\n  useEffect(() => {\n    // Redirect user to landing page if already signed in\n    if (Boolean(user)) history.push(LANDING);\n  }, [history, user]);\n\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"md\" className={classes.page}>\n      {/* Logo */}\n      <img src={logo} alt=\"Pan-Lang logo\" style={{ width: 120, height: 120 }} />\n\n      <Typography variant=\"h2\" className={classes.title}>\n        Join Pan-Lang today.\n      </Typography>\n\n      <Paper className={classes.paper}>\n        {/* Sign in buttons */}\n        <Button className={classes.button} onClick={signInWithGoogle}>\n          Sign in with Google\n        </Button>\n        <Button className={classes.button} onClick={signInWithFacebook}>\n          Sign in with Facebook\n        </Button>\n        <Button className={classes.button} onClick={signInWithYahoo}>\n          Sign in with Yahoo\n        </Button>\n      </Paper>\n\n      {/* Loading */}\n      {loading && <Loading />}\n\n      {/* Error */}\n      {error && <ErrorAlert body=\"An error occurred.\" />}\n\n      <Footer />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    marginTop: 110,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '30px',\n    },\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    padding: theme.spacing(5),\n    maxWidth: theme.breakpoints.width('sm'),\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n    backgroundColor: theme.palette.primary.main,\n    borderColor: theme.palette.primary.borderColor,\n    color:  theme.palette.primary.contrastText,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor:  theme.palette.primary.dark,\n    },\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default SignIn;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Full screen component shown when loading authentication\n */\nfunction Splash({ loading = true }) {\n  const classes = useStyles();\n  return (\n    <Container className={classes.container}>\n      <img\n        src={require('../images/logo_nobg.png')}\n        alt=\"Pan-Lang logo\"\n        className={classes.logo}\n      />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: '100vh',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  logo: {\n    maxWidth: '90vw',\n  },\n}));\n\nexport default Splash;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar/';\nimport Home from './pages/Home/';\nimport About from './pages/About';\nimport Order from './pages/Order';\nimport Stock from './pages/Stock';\nimport NavDrawer from './components/NavDrawer';\nimport OrderStock from './pages/OrderStock';\nimport OrderTracker from './pages/OrderTracker';\nimport SignIn from './pages/SignIn';\nimport Splash from './components/Splash';\nimport {\n  ABOUT,\n  ORDER_FORM,\n  ORDER_TRACKER,\n  LANDING,\n  SIGN_IN,\n  STOCK,\n  ORDER_STOCK,\n} from './constants/Routes';\nimport { auth } from './firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport theme from './constants/Theme';\nimport { ThemeProvider } from '@material-ui/core';\nimport useMobile from './hooks/useMobile';\n\n/**\n * Highest level App component for routing\n */\nfunction App() {\n  const [user, loading] = useAuthState(auth);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const isMobile = useMobile();\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  const toggleDrawer = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  if (loading) {\n    return <Splash loading={loading} />;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div style={{ display: 'flex' }}>\n          {/* Navigation bar on top of screen */}\n          <Navbar\n            drawerOpen={drawerOpen}\n            toggleDrawer={toggleDrawer}\n            openDrawer={handleDrawerOpen}\n            hasUser={Boolean(user)}\n          />\n\n        {/* Navigation drawer */}\n        {(Boolean(user) || isMobile) && <NavDrawer\n          open={drawerOpen}\n          handleOpen={handleDrawerOpen}\n          handleClose={handleDrawerClose}\n        />}\n\n          {/* Routes */}\n          <Switch>\n            <Route exact path={LANDING}>\n              <Home />\n            </Route>\n            <Route exact path={ABOUT}>\n              <About />\n            </Route>\n            <Route path={STOCK}>\n              <Stock />\n            </Route>\n            <Route path={ORDER_FORM}>\n              <Order />\n            </Route>\n            <Route path={ORDER_STOCK}>\n              <OrderStock />\n            </Route>\n            <Route path={ORDER_TRACKER}>\n              <OrderTracker />\n            </Route>\n            <Route path={SIGN_IN}>\n              <SignIn />\n            </Route>\n            <Route path=\"*\">\n              <h1>\n                Welcome to <font style={{ color: '#26B020' }}>Pan-Lang</font>!\n              </h1>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <React.Fragment>\n      <CssBaseline />\n      <App />\n    </React.Fragment>\n  </React.StrictMode>,\n\n \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios';\n\nexport const BASE_API_URL = 'https://us-central1-pan-lang.cloudfunctions.net/';\n\nexport default axios.create({\n  baseURL: BASE_API_URL,\n});\n","import { useTheme, useMediaQuery } from '@material-ui/core';\n\n/**\n * Returns whether current screen width is below \"md\" breakpoint\n */\nfunction useMobile() {\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('md'));\n  return isMobile;\n}\n\nexport default useMobile;\n"],"sourceRoot":""}