{"version":3,"sources":["images/QwertycowMoo.png","images/kgs5.png","images/renzol2.png","images/evanmm3.png","images/empty-cart.svg","images/logo_nobg.png","components/Navbar/CollapsingButton.js","firebase.js","components/Navbar/CollapsingMenu.js","constants/Routes.js","components/Navbar/index.js","pages/Home.js","components/AvatarCard.js","pages/About.js","pages/Order.js","components/AccordionWrapper.js","components/ErrorAlert.js","components/Loading.js","api/Client.js","api/Stock.js","components/StockModal.js","components/StockCard.js","components/LanguageMenu.js","components/StockInput.js","components/StockOptions.js","constants/Languages.js","pages/Stock.js","components/OrderModal.js","components/OrderCard.js","api/People.js","components/ConfirmationModal.js","pages/OrderStock.js","components/FulfillModal.js","components/UnfulfilledOrderCard.js","components/Dialog.js","pages/OrderTracker.js","pages/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","buttonCollapse","breakpoints","up","display","CollapsingButton","children","isOpen","setOpen","classes","className","IconButton","onClick","event","Boolean","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","env","process","firebase","initializeApp","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","auth","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","root","position","right","buttonBar","down","link","margin","spacing","color","login","profileIcon","marginLeft","CollapsingMenu","useState","useAuthState","user","fullNavigation","page","to","navigation","getAuthButtonText","displayName","split","getAuthButtonLink","map","nav","MenuItem","key","component","Link","Button","variant","menuButton","marginRight","backgroundColor","Navbar","trigger","useScrollTrigger","Slide","appear","direction","in","AppBar","Toolbar","src","require","alt","style","width","height","Home","Container","textAlign","marginBottom","fontWeight","borderColor","borderRadius","size","block","signOut","card","paddingTop","paddingBottom","paddingLeft","paddingRight","padding","avatar","AvatarCard","name","role","github","Paper","elevation","Avatar","Typography","href","target","rel","p","marginTop","team","avatarGroup","flexWrap","alignItems","justifyContent","About","QwertycowMoo","kgs5","renzol2","evanmm3","maxWidth","member","orderSchema","Yup","firstName","required","lastName","adults","moreThan","zipcode","lessThan","integer","orderNotes","OrderForm","history","useHistory","useEffect","currentUser","push","validationSchema","onSubmit","personInfo","fromForm","initialValues","handleSubmit","handleChange","touched","handleBlur","values","errors","isValid","Form","noValidate","Group","md","controlId","Label","Control","type","placeholder","onChange","isInvalid","Feedback","flexDirection","details","AccordionWrapper","summary","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","ErrorAlert","heading","body","Alert","severity","length","AlertTitle","spinnerDiv","Loading","CircularProgress","BASE_API_URL","axios","create","baseURL","fetchStock","a","Client","get","updated","put","then","res","console","log","catch","e","error","amountSchema","newCount","modal","paper","palette","background","boxShadow","shadows","button","closeButton","form","StockModal","show","handleClose","getStock","stockName","stockId","stockCount","loading","setLoading","setError","updatedCount","setTimeout","alert","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","TextField","label","value","onBlur","helperText","fullWidth","actions","cardAction","only","topContent","bottomContent","nameContainer","fontSize","noTranslation","subname","date","countContainer","countHeader","count","alignSelf","StockCard","stockItem","lang","showAmountModal","setShowAmountModal","hasLanguage","setHasLanguage","undefined","Card","CardActionArea","CardContent","Box","Chip","timestamp","seconds","_seconds","Date","toDateString","substr","getItemDateString","_id","menuItem","LanguageMenu","languages","currentLanguage","buttonClass","capitalize","setLanguage","isError","React","setAnchorEl","selectedIndex","setSelectedIndex","keepMounted","getContentAnchorEl","index","selected","textContent","toLowerCase","handleMenuItemClick","StockInput","withFormik","mapPropsToValues","itemName","itemCount","setSubmitting","isSubmitting","handleReset","container","disabled","textTransform","StockOptions","LANGUAGES","title","typography","h3","h4","subheading","column","searchPaper","search","Stock","stock","setStock","language","nameQuery","setNameQuery","isMobile","useMediaQuery","useTheme","data","s","charAt","toUpperCase","slice","Grid","item","xs","InputProps","startAdornment","InputAdornment","filter","inEnglishName","includes","inTranslatedName","OrderModal","onRequest","selectedAmount","setSelectedAmount","onHide","centered","Header","Title","Body","ButtonGroup","aria-label","Footer","requestedItem","requestedCount","countAfterRequest","OrderCard","isRequested","showOrderModal","as","Text","Badge","post","ConfirmationModal","buttonText","OrderStock","location","useLocation","state","retrieveFromStorage","requestedStockItems","setRequestedStockItems","showConfirmation","setShowConfirmation","defaultValue","stored","localStorage","getItem","JSON","parse","updatedRequestedItems","alreadyRequested","find","concat","itemIndex","indexOf","setItem","stringify","writeRequestToNotes","forEach","r","addPersonInfo","firstname","lastname","fulfilled","stockUpdatePromises","updateStockCount","Promise","all","responses","removeItem","Dropdown","Toggle","Item","onSelect","eventKey","some","requested","dismissible","FulfillModal","person","fulfillPerson","UnfulfilledOrderCard","showFulfillModal","setShowFulfillModal","dialog","image","grid","Theme","createMuiTheme","primary","main","secondary","action","AlertDialogSlide","Dialog","DialogTitle","DialogActions","lg","sm","cart","OrderTracker","ordersList","setOrdersList","personFulfilled","socket","socketIOClient","emit","on","confirmation","disconnect","order","SignIn","App","basename","exact","path","Order","window","hostname","match","ReactDOM","render","StrictMode","Fragment","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d9ff0c5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/QwertycowMoo.c4707b2e.png\";","module.exports = __webpack_public_path__ + \"static/media/kgs5.ed891ef2.png\";","module.exports = __webpack_public_path__ + \"static/media/renzol2.726b433f.png\";","module.exports = __webpack_public_path__ + \"static/media/evanmm3.c4869c53.png\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.302b7b48.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_nobg.484389dc.png\";","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Menu } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\n/**\r\n * Responsive button for use in navbar\r\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\r\n */\r\nfunction CollapsingButton({ children, isOpen, setOpen }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.buttonCollapse}>\r\n      <IconButton\r\n        onClick={(event) => setOpen(Boolean(event.currentTarget))}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={isOpen}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        open={isOpen}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        {children}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonCollapse: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n    margin: '10px',\r\n    boxShadow: 'none',\r\n  },\r\n}));\r\n\r\nexport default CollapsingButton;\r\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\n\n// Initialize Firebase\nconst env = process.env;\nfirebase.initializeApp({\n  apiKey: env.REACT_APP_API_KEY,\n  authDomain: env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: env.REACT_APP_DATABASE_URL,\n  projectId: env.REACT_APP_PROJECT_ID,\n  storageBucket: env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: env.REACT_APP_APP_ID,\n  measurementId: env.REACT_APP_MEASUREMENT_ID,\n});\n\nexport const auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MenuItem, Button } from '@material-ui/core';\r\nimport CollapsingButton from './CollapsingButton';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  ABOUT,\r\n  LANDING,\r\n  ORDER_FORM,\r\n  ORDER_TRACKER,\r\n  SIGN_IN,\r\n  STOCK,\r\n} from '../../constants/Routes';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../../firebase';\r\n\r\n/**\r\n * Responsive navigation menu\r\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\r\n */\r\nfunction CollapsingMenu() {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const [user] = useAuthState(auth);\r\n\r\n  // Pages to navigate to\r\n  const fullNavigation = [\r\n    { page: 'About', to: ABOUT },\r\n    { page: 'Order Form', to: ORDER_FORM },\r\n    { page: 'Order Tracker', to: ORDER_TRACKER },\r\n    { page: 'Stock', to: STOCK },\r\n  ];\r\n\r\n  // Only show About page when user is not logged in\r\n  const navigation = Boolean(user) ? fullNavigation : [fullNavigation[0]];\r\n\r\n  // Auth button text depends on whether user is logged in\r\n  function getAuthButtonText() {\r\n    return Boolean(user) ? user.displayName.split(' ')[0] : 'Sign In';\r\n  }\r\n\r\n  // Profile button redirects to landing page\r\n  function getAuthButtonLink() {\r\n    return Boolean(user) ? LANDING : SIGN_IN;\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Mobile */}\r\n      <CollapsingButton isOpen={isOpen} setOpen={setOpen}>\r\n        {navigation.map((nav) => (\r\n          <MenuItem\r\n            key={nav.to}\r\n            component={Link}\r\n            to={nav.to}\r\n            // FIXME: sometimes causes menu to pop up in weird places\r\n            // try: open menu -> About -> open menu again\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            {nav.page}\r\n          </MenuItem>\r\n        ))}\r\n        <MenuItem\r\n          component={Link}\r\n          to={getAuthButtonLink()}\r\n          onClick={() => setOpen(false)}\r\n        >\r\n          {getAuthButtonText()}\r\n          {Boolean(user) && (\r\n            <AccountCircleIcon className={classes.profileIcon} />\r\n          )}\r\n        </MenuItem>\r\n      </CollapsingButton>\r\n\r\n      {/* Desktop */}\r\n      <nav className={classes.buttonBar} id=\"appbar-collapse\">\r\n        {navigation.map((nav) => (\r\n          <Button\r\n            component={Link}\r\n            className={classes.link}\r\n            to={nav.to}\r\n            key={nav.to}\r\n          >\r\n            {nav.page}\r\n          </Button>\r\n        ))}\r\n        <Button\r\n          component={Link}\r\n          to={getAuthButtonLink()}\r\n          variant=\"contained\"\r\n          className={classes.login}\r\n        >\r\n          {getAuthButtonText()}\r\n          {Boolean(user) && (\r\n            <AccountCircleIcon className={classes.profileIcon} />\r\n          )}\r\n        </Button>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    right: 0,\r\n  },\r\n  buttonBar: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'none',\r\n    },\r\n    margin: '10px',\r\n    paddingLeft: '16px',\r\n    right: 0,\r\n    position: 'relative',\r\n    width: '100%',\r\n    background: 'transparent',\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1),\r\n    color: 'gray',\r\n  },\r\n  login: {\r\n    margin: '10px',\r\n  },\r\n  profileIcon: {\r\n    marginLeft: '4px',\r\n  },\r\n}));\r\n\r\nexport default CollapsingMenu;\r\n","// Endpoints for all pages in app\nexport const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ABOUT = '/about';\nexport const ORDER_FORM = '/order-form';\nexport const ORDER_STOCK = '/order-stock';\nexport const ORDER_TRACKER = '/order-tracker';\nexport const STOCK = '/stock';","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport CollapsingMenu from './CollapsingMenu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n\r\n/**\r\n * Navigation bar at the top of window\r\n */\r\nfunction Navbar() {\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger();\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      <AppBar className={classes.navigation}>\r\n        <Toolbar>\r\n          {/* Logo */}\r\n          <Link to=\"/\">\r\n            <img\r\n              src={require('../../images/logo_nobg.png')}\r\n              alt=\"Pan-Lang logo\"\r\n              style={{ width: 75, height: 75 }}\r\n            />\r\n          </Link>\r\n\r\n          {/* Navigation menu */}\r\n          <CollapsingMenu />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Slide>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  navigation: {\r\n    backgroundColor: 'white',\r\n  },\r\n}));\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../firebase';\r\nimport { ORDER_FORM, STOCK } from '../constants/Routes';\r\n\r\n/**\r\n * Landing page\r\n */\r\nfunction Home() {\r\n  const [user] = useAuthState(auth);\r\n\r\n  if (!Boolean(user)) {\r\n    return (\r\n      <Container>\r\n        <p>We'll make this pretty later, just sign in.</p>\r\n      </Container>\r\n    );\r\n  } else\r\n    return (\r\n      <Container style={{ textAlign: 'center' }}>\r\n        <div style={{ marginBottom: 20 }}>\r\n          <br></br>\r\n          <h1>Welcome to </h1>{' '}\r\n          <h1>\r\n            <font style={{ color: '#35E82A', fontWeight: 'bold' }}>Pan-</font>\r\n            <font style={{ color: '#2EFFD5', fontWeight: 'bold' }}>Lang</font>\r\n          </h1>\r\n        </div>\r\n        <div>\r\n          <Link to={ORDER_FORM} style={{ color: 'white' }}>\r\n            <Button\r\n              style={{\r\n                backgroundColor: '#16AB8D',\r\n                borderColor: '#FFFFF5',\r\n                color: '#FFFFFF',\r\n                borderRadius: '200px',\r\n              }}\r\n              size=\"lg\"\r\n              className=\"mb-3\"\r\n              block\r\n            >\r\n              Start a new order\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n        <Link to={STOCK} style={{ color: 'white' }}>\r\n          <Button\r\n            style={{\r\n              backgroundColor: '#16AB8D',\r\n              borderColor: '#FFFFF5',\r\n              color: '#FFFFFF',\r\n              borderRadius: '200px',\r\n            }}\r\n            size=\"lg\"\r\n            className=\"mb-3\"\r\n            block\r\n          >\r\n            Edit and add stock items\r\n          </Button>{' '}\r\n        </Link>\r\n\r\n        <br></br>\r\n        <br></br>\r\n        <Button\r\n          style={{\r\n            backgroundColor: '#16AB8D',\r\n            borderColor: '#FFFFF5',\r\n            color: '#FFFFFF',\r\n            borderRadius: '200px',\r\n          }}\r\n          size=\"lg\"\r\n          className=\"mb-3\"\r\n          block\r\n          onClick={() => auth.signOut()}\r\n        >\r\n          Sign out\r\n        </Button>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Container,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\n/**\r\n * Card on About page representing each team member\r\n */\r\nfunction AvatarCard({ name, src, alt, role = 'Software Developer', github }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.card}>\r\n      <Container>\r\n        <Avatar src={src} alt={alt} className={classes.avatar} />\r\n        <Typography variant=\"h5\">\r\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {name}\r\n          </a>\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\">{role}</Typography>\r\n      </Container>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 5,\r\n      width: '100%',\r\n    },\r\n  },\r\n  avatar: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25),\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n    },\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\nexport default AvatarCard;\r\n","import React from 'react';\r\nimport { Container, makeStyles, Typography } from '@material-ui/core';\r\nimport AvatarCard from '../components/AvatarCard';\r\nimport QwertycowMoo from '../images/QwertycowMoo.png';\r\nimport kgs5 from '../images/kgs5.png';\r\nimport renzol2 from '../images/renzol2.png';\r\nimport evanmm3 from '../images/evanmm3.png';\r\n\r\n/**\r\n * About page for Pan-Lang\r\n * Provides background for our application and service\r\n */\r\nfunction About() {\r\n  const team = [\r\n    {\r\n      name: 'Kevin Zhou',\r\n      src: QwertycowMoo,\r\n      github: 'https://github.com/QwertycowMoo',\r\n      role: 'Lead Software Developer',\r\n    },\r\n    { name: 'Katie Sanders', src: kgs5, github: 'https://github.com/kgs5' },\r\n    {\r\n      name: 'Renzo Ledesma',\r\n      src: renzol2,\r\n      github: 'https://github.com/renzol2',\r\n    },\r\n    {\r\n      name: 'Evan Matthews',\r\n      src: evanmm3,\r\n      github: 'https://github.com/evanmm3',\r\n    },\r\n  ];\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Container>\r\n      <Container\r\n        maxWidth=\"md\"\r\n        style={{\r\n          paddingBottom: 120,\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        {/* Background */}\r\n        <Typography variant=\"h2\">\r\n          {'About '}\r\n          <font style={{ color: '#26B020', fontWeight: 'bold' }}>\r\n            Pan-Lang\r\n          </font>\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.p}>\r\n          Pan-Lang is an organizational web application designed to help local\r\n          food bank organizers keep track of orders, maintain visitor records,\r\n          and communicate with non-English speaking patrons.\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.p}>\r\n          Food insecurity is an important issue in the Champain County\r\n          community. Nearly 15% of residents must deal with food insecurity.\r\n          Many of these individuals are also ineligible for federal nutrition\r\n          programs and must rely on local food pantries for meals.\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.p}>\r\n          On top of this, many of these individuals speak limited English,\r\n          making it difficult for them to communicate their needs to food pantry\r\n          staff. With Pan-Lang, our mission is to break this language barrier\r\n          and provide a more efficient method of supporting those in need.\r\n        </Typography>\r\n      </Container>\r\n\r\n      {/* Team */}\r\n      <Container className={classes.team}>\r\n        <Typography variant=\"h3\">Our Team</Typography>\r\n        <Container className={classes.avatarGroup}>\r\n          {team.map((member) => (\r\n            <AvatarCard\r\n              key={member.src}\r\n              name={member.name}\r\n              src={member.src}\r\n              alt={member.name}\r\n              role={member.role}\r\n              github={member.github}\r\n            />\r\n          ))}\r\n        </Container>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  p: {\r\n    marginTop: 8,\r\n    marginBottom: 8,\r\n  },\r\n  team: {\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    paddingBottom: 50,\r\n  },\r\n  avatarGroup: {\r\n    marginTop: 15,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'space-around',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default About;\r\n","import React, { useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ORDER_STOCK, LANDING } from '../constants/Routes';\r\nimport { auth } from '../firebase';\r\n\r\nconst orderSchema = Yup.object({\r\n  firstName: Yup.string().required(),\r\n  lastName: Yup.string().required(),\r\n  adults: Yup.number().moreThan(-1).required(),\r\n  children: Yup.number().moreThan(-1).required(),\r\n  zipcode: Yup.number().moreThan(9999).lessThan(100000).integer().required(),\r\n  orderNotes: Yup.string().required(),\r\n});\r\n\r\n/**\r\n * Page to fill out form for patron's order\r\n */\r\nfunction OrderForm() {\r\n  const history = useHistory();\r\n\r\n  // Immediately send user back to homepage if not signed in\r\n  useEffect(() => {\r\n    if (!Boolean(auth.currentUser)) {\r\n      history.push(LANDING);\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container style={{ paddingBottom: 120 }}>\r\n      <h1 style={{ textAlign: 'center' }}>Order</h1>\r\n      <Formik\r\n        validationSchema={orderSchema}\r\n        onSubmit={(personInfo) => {\r\n          history.push(ORDER_STOCK, { fromForm: true, personInfo });\r\n        }}\r\n        initialValues={{\r\n          firstName: '',\r\n          lastName: '',\r\n          adults: -1,\r\n          children: -1,\r\n          zipcode: -1,\r\n          orderNotes: 'test',\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          errors,\r\n        }) => (\r\n          <div>\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Group md=\"4\" controlId=\"orderForm1\">\r\n                <Form.Label>First name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  placeholder={'Enter first name here'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.firstName && !errors.firstName}\r\n                  isInvalid={!!errors.firstName}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm2\">\r\n                <Form.Label>Last name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  placeholder={'Enter last name here'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.lastName && !errors.lastName}\r\n                  isInvalid={!!errors.lastName}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm3\">\r\n                <Form.Label># of Adults</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"adults\"\r\n                  placeholder={'Enter number of adults in household'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.adults && !errors.adults}\r\n                  isInvalid={!!errors.adults}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm4\">\r\n                <Form.Label># of Children</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"children\"\r\n                  placeholder={'Enter number of children in household'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.children && !errors.children}\r\n                  isInvalid={!!errors.children}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm4\">\r\n                <Form.Label>ZIP Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"zipcode\"\r\n                  placeholder={'Enter your ZIP Code'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.zipcode && !errors.zipcode}\r\n                  isInvalid={!!errors.zipcode}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  style={{\r\n                    backgroundColor: '#16AB8D',\r\n                    borderColor: '#FFFFF5',\r\n                    color: '#FFFFFF',\r\n                    borderRadius: '200px',\r\n                  }}\r\n                  block\r\n                >\r\n                  Select order\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OrderForm;\r\n","import React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n/**\r\n * Component that wraps children in accordion\r\n */\r\nfunction AccordionWrapper({ summary, children }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"stock-input-content\"\r\n        id=\"stock-input-header\"\r\n      >\r\n        <Typography>{summary}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.details}>\r\n        {children}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  details: {\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nexport default AccordionWrapper;\r\n","import React from 'react';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\n/**\r\n * Component signifying an error has occurred\r\n */\r\nfunction ErrorAlert({ heading = '', body, onClose }) {\r\n  return (\r\n    <Alert severity=\"error\" onClose={onClose}>\r\n      {heading.length > 0 && <AlertTitle>{heading}</AlertTitle>}\r\n      {body}\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default ErrorAlert;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n/**\r\n * Centered spinner to signify loading\r\n */\r\nfunction Loading() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.spinnerDiv}>\r\n      <CircularProgress />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  spinnerDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nexport default Loading;\r\n","import axios from 'axios';\r\n\r\nexport const BASE_API_URL = 'https://us-central1-pan-lang.cloudfunctions.net/';\r\n\r\nexport default axios.create({\r\n  baseURL: BASE_API_URL,\r\n});\r\n","import Client from './Client';\r\n\r\nconst STOCK_ENDPOINT = '/stock';\r\n\r\nexport async function fetchStock() {\r\n  return await Client.get(STOCK_ENDPOINT);\r\n}\r\n\r\nexport async function createStockItem(item) {\r\n  Client.post(STOCK_ENDPOINT, item)\r\n    .then((res) => {\r\n      return true;\r\n    })\r\n    .catch((e) => {\r\n      return false;\r\n    });\r\n}\r\n\r\nexport async function updateStockCount(id, updated) {\r\n  return await Client.put(`${STOCK_ENDPOINT}/${id}`, updated)\r\n    .then((res) => {\r\n      console.log(res);\r\n      return true;\r\n    })\r\n    .catch((e) => {\r\n      console.error(e)\r\n      return false;\r\n    })\r\n}\r\n","import React, { useState } from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ErrorAlert from './ErrorAlert';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { updateStockCount } from '../api/Stock';\r\n\r\n/**\r\n * Popup modal for editing the stock count of an item\r\n */\r\nfunction StockModal({\r\n  show,\r\n  handleClose,\r\n  getStock,\r\n  stockId,\r\n  stockName,\r\n  stockCount,\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  /**\r\n   * Sends PUT request with updated stock count from input\r\n   * @param {Number} updatedCount updated count\r\n   */\r\n  async function onSubmit(updatedCount) {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      handleClose();\r\n      getStock(500);\r\n      alert('Not connected to API');\r\n    }, 500);\r\n\r\n    // TODO: send PUT request to API\r\n    // const updateIsSuccessful = await updateStockCount(stockId, updatedCount);\r\n\r\n    // setLoading(false);\r\n\r\n    // if (!updateIsSuccessful) {\r\n    //   setError(true);\r\n    // } else {\r\n    //   handleClose();\r\n    //   getStock(500);\r\n    // }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={show}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={show}>\r\n        <Paper className={classes.paper}>\r\n          <Formik\r\n            validationSchema={amountSchema}\r\n            onSubmit={onSubmit}\r\n            initialValues={{\r\n              newCount: '',\r\n            }}\r\n          >\r\n            {/* Formik component */}\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <>\r\n                <Typography variant=\"h5\">\r\n                  Edit amount for: {stockName}\r\n                </Typography>\r\n\r\n                {/* Text field for entering new amount */}\r\n                {!loading && !error && (\r\n                  <Container className={classes.form}>\r\n                    <Typography>Current amount: {stockCount}</Typography>\r\n                    <form onSubmit={handleSubmit}>\r\n                      <TextField\r\n                        id=\"newCount\"\r\n                        label=\"Enter new item count\"\r\n                        value={values.newCount}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={touched.newCount ? errors.newCount : ''}\r\n                        error={touched.newCount && Boolean(errors.newCount)}\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                      />\r\n                    </form>\r\n                  </Container>\r\n                )}\r\n\r\n                {/* Message when processing request */}\r\n                {loading && (\r\n                  <Typography>\r\n                    Updating stock count for {stockName}...\r\n                  </Typography>\r\n                )}\r\n\r\n                {/* Error message */}\r\n                {error && <ErrorAlert body=\"An error occurred.\" />}\r\n\r\n                {/* Action buttons */}\r\n                {!loading && (\r\n                  <Container className={classes.actions}>\r\n                    {/* Submit button */}\r\n                    {!error && (\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={handleSubmit}\r\n                        className={classes.button}\r\n                      >\r\n                        Save new amount\r\n                      </Button>\r\n                    )}\r\n\r\n                    {/* Close modal button */}\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      className={classes.closeButton}\r\n                      onClick={() => {\r\n                        // Set timer so buttons don't reappear during\r\n                        // fade out animation\r\n                        setTimeout(() => {\r\n                          setError(false);\r\n                          setLoading(false);\r\n                        }, 120);\r\n\r\n                        handleClose();\r\n                      }}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n                  </Container>\r\n                )}\r\n              </>\r\n            )}\r\n          </Formik>\r\n        </Paper>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n}\r\n\r\n// Schema for updating count\r\nconst amountSchema = Yup.object({\r\n  newCount: Yup.number().integer().moreThan(-1).required(),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    borderRadius: '15px',\r\n  },\r\n  button: {\r\n    backgroundColor: '#16AB8D',\r\n    borderColor: '#FFFFF5',\r\n    color: '#FFFFFF',\r\n    '&:hover': {\r\n      backgroundColor: '#119178',\r\n    },\r\n    width: '100%',\r\n    marginBottom: 5,\r\n  },\r\n  closeButton: {\r\n    width: '100%',\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default StockModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport StockModal from './StockModal';\r\n\r\n/**\r\n * Card component that displays a stock item and allows\r\n * for editing its amount through a modal popup\r\n */\r\nfunction StockCard({ stockItem, getStock, lang = 'name' }) {\r\n  const [showAmountModal, setShowAmountModal] = useState(false);\r\n  const [hasLanguage, setHasLanguage] = useState(false);\r\n\r\n  // Handlers for showing/closing modal when editing item amount\r\n  const handleClose = () => setShowAmountModal(false);\r\n  const handleShow = () => setShowAmountModal(true);\r\n\r\n  // Determine whether this stock item has a name in the specified language\r\n  useEffect(() => {\r\n    setHasLanguage(stockItem[lang] !== undefined);\r\n  }, [lang, stockItem]);\r\n\r\n  /**\r\n   * Gets a String representing an item's timestamp\r\n   * @param {Object} stockItem\r\n   */\r\n  function getItemDateString(stockItem) {\r\n    let seconds = stockItem.timestamp._seconds;\r\n    // Date constructor takes in milliseconds\r\n    return new Date(seconds * 1000).toDateString().substr(3);\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Fade in={true}>\r\n        <Card className={classes.card} onClick={handleShow}>\r\n          {/* Action area makes entire component focusable */}\r\n          <CardActionArea className={classes.cardAction}>\r\n            <CardContent>\r\n              {/* Top content of card */}\r\n              <Box className={classes.topContent}>\r\n                {/* Name and translation (left) */}\r\n                <Box className={classes.nameContainer}>\r\n                  {/* Name */}\r\n                  <Typography variant=\"h4\" className={classes.name}>\r\n                    {hasLanguage ? stockItem[lang] : stockItem.name}\r\n                  </Typography>\r\n\r\n                  {/* Translation */}\r\n                  <Typography variant=\"h5\" className={classes.subname}>\r\n                    {hasLanguage && lang !== 'name' ? stockItem.name : ''}\r\n                  </Typography>\r\n\r\n                  {/* No translation alert */}\r\n                  {!hasLanguage && (\r\n                    <Chip\r\n                      className={classes.noTranslation}\r\n                      size=\"small\"\r\n                      color=\"secondary\"\r\n                      label={'Translation unavailable'}\r\n                    />\r\n                  )}\r\n                </Box>\r\n\r\n                {/* Count (right) */}\r\n                <Box className={classes.countContainer}>\r\n                  <Typography className={classes.countHeader}>Count</Typography>\r\n                  <Typography className={classes.count}>\r\n                    {stockItem.count}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Bottom content */}\r\n              <Box className={classes.bottomContent}>\r\n                {/* Date */}\r\n                <Typography className={classes.date}>\r\n                  Updated:{' '}\r\n                  {stockItem.timestamp !== undefined\r\n                    ? getItemDateString(stockItem)\r\n                    : 'Unavailable'}\r\n                </Typography>\r\n\r\n                {/* Out of stock alert */}\r\n                {stockItem.count <= 0 && (\r\n                  <Chip size=\"small\" color=\"secondary\" label={'Out of stock'} />\r\n                )}\r\n              </Box>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Fade>\r\n\r\n      {/* Popup modal for editing stock count */}\r\n      <StockModal\r\n        show={showAmountModal}\r\n        handleClose={handleClose}\r\n        getStock={getStock}\r\n        stockName={hasLanguage ? stockItem[lang] : stockItem.name}\r\n        // FIXME: Figure out what the schema for sending PUT requests is\r\n        stockId={stockItem._id !== undefined ? stockItem._id : 'no id lol'}\r\n        stockCount={stockItem.count}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(1),\r\n    borderRadius: '30px',\r\n    maxWidth: '100vw',\r\n  },\r\n  cardAction: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(0),\r\n    [theme.breakpoints.only('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.only('xs')]: {\r\n      paddingLeft: theme.spacing(0),\r\n      paddingRight: theme.spacing(0),\r\n    },\r\n  },\r\n  topContent: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  bottomContent: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-end',\r\n  },\r\n  nameContainer: {},\r\n  name: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '22px',\r\n    },\r\n  },\r\n  noTranslation: {\r\n    marginTop: 5,\r\n  },\r\n  subname: {\r\n    marginTop: -8,\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '18px',\r\n      marginTop: -4,\r\n    },\r\n  },\r\n  date: {\r\n    color: 'gray',\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '12px',\r\n    },\r\n  },\r\n  countContainer: {},\r\n  countHeader: {\r\n    textAlign: 'right',\r\n  },\r\n  count: {\r\n    marginTop: -10,\r\n    fontWeight: 'bold',\r\n    fontSize: '40px',\r\n    textAlign: 'right',\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '27px',\r\n    },\r\n  },\r\n  button: {\r\n    alignSelf: 'center',\r\n    backgroundColor: '#16AB8D',\r\n    borderColor: '#FFFFF5',\r\n    color: '#FFFFFF',\r\n  },\r\n}));\r\n\r\nexport default StockCard;\r\n","import React from 'react';\r\nimport { MenuItem, Menu, Button, makeStyles } from '@material-ui/core';\r\n\r\n/**\r\n * Menu to select language when viewing Stock\r\n */\r\nfunction LanguageMenu({\r\n  languages = [],\r\n  currentLanguage,\r\n  buttonClass,\r\n  capitalize,\r\n  setLanguage,\r\n  isError = false,\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setLanguage(event.currentTarget.textContent.toLowerCase());\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {/* Button to toggle menu */}\r\n      <Button onClick={handleClickListItem} className={buttonClass}>\r\n        {`Language: ${capitalize(currentLanguage)}`}\r\n      </Button>\r\n\r\n      {/* Language menu */}\r\n      <Menu\r\n        id=\"language-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {languages.map((lang, index) => (\r\n          <MenuItem\r\n            key={lang}\r\n            selected={index === selectedIndex}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n            className={classes.menuItem}\r\n          >\r\n            {capitalize(lang)}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuItem: {\r\n    paddingLeft: '50px',\r\n    paddingRight: '50px',\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nexport default LanguageMenu;\r\n","import React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n/**\r\n * Form component that handles creation of new stock items\r\n */\r\nfunction StockInputForm({\r\n  values,\r\n  touched,\r\n  errors,\r\n  isSubmitting,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  handleReset,\r\n}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Accordion>\r\n        {/* Accordion toggle area */}\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"stock-input-content\"\r\n          id=\"stock-input-header\"\r\n        >\r\n          <Typography>Click here to insert a stock item</Typography>\r\n        </AccordionSummary>\r\n\r\n        {/* Accordion expandable area */}\r\n        <AccordionDetails className={classes.details}>\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Item name text field */}\r\n            <TextField\r\n              id=\"itemName\"\r\n              label=\"Enter new item name\"\r\n              value={values.itemName}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.itemName ? errors.itemName : ''}\r\n              error={touched.itemName && Boolean(errors.itemName)}\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n\r\n            {/* Item count text field */}\r\n            <TextField\r\n              id=\"itemCount\"\r\n              label=\"Enter new item count\"\r\n              value={values.itemCount}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.itemCount ? errors.itemCount : ''}\r\n              error={touched.itemCount && Boolean(errors.itemCount)}\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n\r\n            {/* Form buttons */}\r\n            <Container className={classes.actions}>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={isSubmitting}\r\n                className={classes.button}\r\n              >\r\n                {isSubmitting ? 'Adding...' : 'Add item'}\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={handleReset}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Container>\r\n          </form>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Formik wrapper for component\r\nconst StockInput = withFormik({\r\n  // Assigns default values\r\n  mapPropsToValues: ({ itemName, itemCount }) => {\r\n    return {\r\n      itemName: itemName || '',\r\n      itemCount: itemCount || 1,\r\n    };\r\n  },\r\n\r\n  // Schema for validation\r\n  validationSchema: Yup.object({\r\n    itemName: Yup.string().required(),\r\n    itemCount: Yup.number().integer().moreThan(-1).required(),\r\n  }),\r\n\r\n  // Function upon submitting form\r\n  handleSubmit: (values, { setSubmitting }) => {\r\n    setTimeout(() => {\r\n      // TODO: send information to API\r\n      alert('API not connected');\r\n      setSubmitting(false);\r\n    }, 1000);\r\n  },\r\n})(StockInputForm);\r\n\r\n// Styling\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: '100%',\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    paddingBottom: 0,\r\n  },\r\n  button: {\r\n    backgroundColor: '#16AB8D',\r\n    '&:hover': {\r\n      backgroundColor: '#119178',\r\n    },\r\n    borderColor: '#FFFFF5',\r\n    color: '#FFFFFF',\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default StockInput;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport LanguageMenu from './LanguageMenu';\r\nimport StockInput from './StockInput';\r\n\r\n/**\r\n * Options on stock dashboard\r\n * - Language selection\r\n * - Refresh stock list\r\n * - Form to create new stock items\r\n */\r\nfunction StockOptions({\r\n  languages,\r\n  currentLanguage,\r\n  capitalize,\r\n  setLanguage,\r\n  isError,\r\n  getStock,\r\n}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box>\r\n      {/* Button bar */}\r\n      <Container className={classes.buttonBar}>\r\n        {/* Language selection */}\r\n        <LanguageMenu\r\n          languages={languages}\r\n          currentLanguage={currentLanguage}\r\n          buttonClass={classes.button}\r\n          capitalize={capitalize}\r\n          setLanguage={setLanguage}\r\n          isError={isError}\r\n        />\r\n\r\n        {/* Refresh */}\r\n        <Button size=\"medium\" onClick={getStock} className={classes.button}>\r\n          Refresh stock list\r\n        </Button>\r\n      </Container>\r\n\r\n      {/* Input to create stock item */}\r\n      {<StockInput getStock={getStock} />}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  buttonBar: {\r\n    paddingBottom: 10,\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  button: {\r\n    backgroundColor: '#16AB8D',\r\n    borderColor: '#FFFFF5',\r\n    color: '#FFFFFF',\r\n    textTransform: 'none',\r\n    '&:hover': {\r\n      backgroundColor: '#119178',\r\n    },\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n  },\r\n});\r\n\r\nexport default StockOptions;\r\n","const LANGUAGES = ['english', 'spanish', 'french', 'chinese', 'german'];\r\n\r\nexport default LANGUAGES;","import React, { useEffect, useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Search from '@material-ui/icons/Search';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\r\nimport AccordionWrapper from '../components/AccordionWrapper';\r\nimport ErrorAlert from '../components/ErrorAlert';\r\nimport Loading from '../components/Loading';\r\nimport StockCard from '../components/StockCard';\r\nimport StockOptions from '../components/StockOptions';\r\nimport LANGUAGES from '../constants/Languages';\r\nimport { fetchStock } from '../api/Stock';\r\nimport { auth } from '../firebase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LANDING } from '../constants/Routes';\r\n\r\n/**\r\n * Page displaying the stock of food pantry with options for language\r\n */\r\nfunction Stock() {\r\n  const [stock, setStock] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [language, setLanguage] = useState(LANGUAGES[0]);\r\n  const [nameQuery, setNameQuery] = useState('');\r\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('md'));\r\n  const history = useHistory();\r\n\r\n  /**\r\n   * Fetches stock from API and stores in state\r\n   * @param {Number} timeout ms to wait before fetching stock\r\n   */\r\n  function getStock(timeout = 0) {\r\n    // Set stock empty to begin loading spinner\r\n    setStock([]);\r\n    setError(null);\r\n\r\n    // Fetch stock after designated time\r\n    setTimeout(() => {\r\n      fetchStock()\r\n        .then((res) => {\r\n          setStock(res.data);\r\n        })\r\n        .catch((e) => {\r\n          setError(e);\r\n        });\r\n    }, timeout);\r\n  }\r\n\r\n  /**\r\n   * Fetch stock as soon as page is rendered, if user is signed in\r\n   */\r\n  useEffect(() => {\r\n    if (Boolean(auth.currentUser)) {\r\n      getStock();\r\n    } else {\r\n      // Redirect to home page\r\n      history.push(LANDING);\r\n    }\r\n  }, [history]);\r\n\r\n  /**\r\n   * Capitalizes the first letter of a string\r\n   * @param {String} s string to capitalize\r\n   */\r\n  function capitalize(s) {\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  /**\r\n   * Returns filtered stock array based on search queries\r\n   * Name query: allows if EITHER English or translated name includes query\r\n   */\r\n  function getFilteredStockItems() {\r\n    return stock.filter((item) => {\r\n      let inEnglishName = item.name.toLowerCase().includes(nameQuery);\r\n      let inTranslatedName =\r\n        item[language] === undefined\r\n          ? false\r\n          : item[language].toLowerCase().includes(nameQuery);\r\n      return inEnglishName || inTranslatedName;\r\n    });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Typography variant=\"h1\" className={classes.title}>\r\n        Stock Dashboard\r\n      </Typography>\r\n\r\n      {/* Two column desktop layout, one column mobile layout */}\r\n      <Grid container spacing={isMobile ? 0 : 2}>\r\n        {/* Left column */}\r\n        <Grid item xs={12} md={4}>\r\n          {/* On mobile: hide options in accordion */}\r\n          {isMobile && (\r\n            <AccordionWrapper summary=\"Options\">\r\n              <StockOptions\r\n                languages={LANGUAGES}\r\n                currentLanguage={language}\r\n                setLanguage={setLanguage}\r\n                capitalize={capitalize}\r\n                getStock={getStock}\r\n                isError={error}\r\n              />\r\n            </AccordionWrapper>\r\n          )}\r\n\r\n          {/* On desktop: keep options bar open */}\r\n          {!isMobile && (\r\n            <Paper elevation={2} className={classes.column}>\r\n              <Typography variant=\"h5\" className={classes.subheading}>\r\n                Options\r\n              </Typography>\r\n              <StockOptions\r\n                languages={LANGUAGES}\r\n                currentLanguage={language}\r\n                setLanguage={setLanguage}\r\n                capitalize={capitalize}\r\n                getStock={getStock}\r\n                isError={error}\r\n              />\r\n            </Paper>\r\n          )}\r\n        </Grid>\r\n\r\n        {/* Right column */}\r\n        <Grid item xs={12} md={8}>\r\n          {/* Search bar */}\r\n          <Paper elevation={1} className={classes.searchPaper}>\r\n            <TextField\r\n              className={classes.search}\r\n              id=\"searchbar\"\r\n              label=\"Search items\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Search />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={(event) =>\r\n                setNameQuery(event.target.value.toLowerCase())\r\n              }\r\n            />\r\n          </Paper>\r\n\r\n          {/* Stock items */}\r\n          {stock &&\r\n            getFilteredStockItems().map((item) => (\r\n              <StockCard\r\n                stockItem={item}\r\n                getStock={getStock}\r\n                // Key of English name is always 'name'\r\n                lang={language === 'english' ? 'name' : language}\r\n                key={item.name}\r\n              />\r\n            ))}\r\n\r\n          {/* Loading spinner */}\r\n          {stock.length === 0 && !error && <Loading />}\r\n\r\n          {/* Error alert */}\r\n          {error && (\r\n            <ErrorAlert\r\n              heading=\"Error\"\r\n              body={`An error occurred while trying to get the stock. ${error}`}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.only('xs')]: {\r\n      paddingLeft: 2,\r\n      paddingRight: 2,\r\n    },\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontSize: theme.typography.h3.fontSize,\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: theme.typography.h4.fontSize,\r\n    },\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheading: {\r\n    textAlign: 'center',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  column: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  searchPaper: {\r\n    margin: 5,\r\n    padding: theme.spacing(2),\r\n  },\r\n  search: {\r\n    width: '95%',\r\n  },\r\n  details: {\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nexport default Stock;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, ButtonGroup } from 'react-bootstrap';\r\n\r\n/**\r\n * Allows user to select how much of a stock item to request\r\n */\r\nfunction OrderModal({\r\n  show,\r\n  handleClose,\r\n  getStock,\r\n  stockId,\r\n  stockName,\r\n  stockCount,\r\n  onRequest,\r\n}) {\r\n  // Currently requested amount\r\n  const [selectedAmount, setSelectedAmount] = useState(1);\r\n\r\n  function handleDecrease() {\r\n    if (selectedAmount > 1) setSelectedAmount(selectedAmount - 1);\r\n  }\r\n\r\n  function handleIncrease() {\r\n    if (selectedAmount < stockCount) setSelectedAmount(selectedAmount + 1);\r\n  }\r\n\r\n  function submitRequest() {\r\n    const requestedItem = {\r\n      id: stockId,\r\n      name: stockName,\r\n      requestedCount: selectedAmount,\r\n      countAfterRequest: stockCount - selectedAmount,\r\n    };\r\n    console.log(\"submitRequest -> stockCount\", stockCount)\r\n    console.log(\"submitRequest -> selectedAmount\", selectedAmount)\r\n    \r\n    console.log(\"countAfterRequest ->\", requestedItem.countAfterRequest);\r\n\r\n    onRequest(requestedItem);\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Select requested amount for: {stockName}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>\r\n          Current amount: <b>{stockCount}</b>\r\n        </p>\r\n        <p>\r\n          Amount after order: <b>{stockCount - selectedAmount}</b>\r\n        </p>\r\n        <ButtonGroup\r\n          aria-label=\"Stock item request buttons\"\r\n          style={{ display: 'flex', alignItems: 'center' }}\r\n        >\r\n          <Button size=\"lg\" \r\n          style={{backgroundColor: '#16AB8D', borderColor: '#FFFFFF', color: '#FFFFFF'}}\r\n          onClick={handleDecrease}>\r\n            -\r\n          </Button>\r\n          <Button size=\"lg\" variant=\"secondary\" style={{borderColor: '#FFFFFF'}} disabled>\r\n            {selectedAmount}\r\n          </Button>\r\n          <Button size=\"lg\"\r\n          style={{backgroundColor: '#2EFFD5', borderColor: '#FFFFFF', color: '#FFFFFF'}}\r\n          onClick={handleIncrease}>\r\n            +\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" style={{borderRadius: '200px'}} onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button onClick={submitRequest}\r\n        style={{backgroundColor: '#35E82A', borderColor: '#35E82A', borderRadius: '200px', color: '#FFFFFF'}}>\r\n          Request amount\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default OrderModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Badge, Container, Card } from 'react-bootstrap';\r\nimport OrderModal from './OrderModal';\r\n\r\n/**\r\n * Stock item card on order screen\r\n */\r\nfunction OrderCard({\r\n  stockItem,\r\n  getStock,\r\n  lang = 'name',\r\n  onRequest,\r\n  isRequested = false,\r\n}) {\r\n  const [showOrderModal, setShowAmountModal] = useState(false);\r\n  const [hasLanguage, setHasLanguage] = useState(false);\r\n\r\n  // Handlers for showing/closing modal when ordering item\r\n  const handleClose = () => setShowAmountModal(false);\r\n  const handleShow = () => setShowAmountModal(true);\r\n\r\n  // Determine whether this stock item has a name in the specified language\r\n  useEffect(() => {\r\n    setHasLanguage(stockItem[lang] !== undefined);\r\n  }, [lang, stockItem]);\r\n\r\n  function getRequestButtonText() {\r\n    if (stockItem.count <= 0) {\r\n      return 'Out of stock';\r\n    } else if (isRequested) {\r\n      return 'Edit requested amount';\r\n    } else {\r\n      return 'Request item';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ margin: 5 }}>\r\n        <Card.Body>\r\n          <Card.Header as=\"h2\">\r\n            {hasLanguage ? stockItem[lang] : stockItem.name}\r\n            {lang !== 'name' && hasLanguage\r\n              ? ' (' + stockItem['name'] + ')'\r\n              : ''}\r\n          </Card.Header>\r\n\r\n          <Card.Text>\r\n            Amount:{' '}\r\n            <font style={{ fontSize: '1.4em', fontWeight: 'bolder' }}>\r\n              {stockItem.count}\r\n            </font>\r\n          </Card.Text>\r\n          <Container\r\n            style={{ display: 'flex', alignItems: 'center', padding: 0 }}\r\n          >\r\n            {!hasLanguage && (\r\n              <Badge variant=\"danger\">Language unavailable: {lang}</Badge>\r\n            )}\r\n            <div style={{ margin: 'left' }} />\r\n            <Button\r\n              size=\"lg\"\r\n              style={{alignSelf: 'left', backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}\r\n              onClick={handleShow}\r\n              disabled={stockItem.count <= 0}\r\n            >\r\n              {getRequestButtonText()}\r\n            </Button>\r\n          </Container>\r\n          <Card.Text style={{ textAlign: 'right' }}>\r\n            Last updated:{' '}\r\n            {stockItem.timestamp !== undefined\r\n              ? new Date(stockItem.timestamp).toDateString()\r\n              : 'Unavailable'}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <OrderModal\r\n        show={showOrderModal}\r\n        handleClose={handleClose}\r\n        getStock={getStock}\r\n        stockName={stockItem.name}\r\n        stockId={stockItem._id}\r\n        stockCount={stockItem.count}\r\n        onRequest={onRequest}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderCard;\r\n","import Client from './Client';\r\n\r\nexport const PEOPLE_ENDPOINT = '/people';\r\n\r\nexport async function addPersonInfo(item) {\r\n  Client.post(PEOPLE_ENDPOINT, item)\r\n    .then((res) => {\r\n      return true;\r\n    })\r\n    .catch((e) => {\r\n      return false;\r\n    });\r\n}\r\n\r\nexport async function fetchPeople() {\r\n  const promise = await Client.get(PEOPLE_ENDPOINT);\r\n  return promise;\r\n}\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n/**\r\n * Modal to give user confirmation upon completing action\r\n */\r\nfunction ConfirmationModal({ title, body, buttonText, show, handleClose }) {  \r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {title}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        {body}\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button onClick={handleClose}\r\n        style={{backgroundColor: '#16AB8D', borderColor: '#16AB8D', borderRadius: '200px', color: '#FFFFFF'}}>\r\n          {buttonText}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport OrderCard from '../components/OrderCard';\r\nimport Loading from '../components/Loading';\r\nimport { fetchStock } from '../api/Stock';\r\nimport LANGUAGES from '../constants/Languages';\r\nimport { Container, Dropdown, Button } from 'react-bootstrap';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addPersonInfo } from '../api/People';\r\nimport { updateStockCount } from '../api/Stock';\r\nimport ConfirmationModal from '../components/ConfirmationModal';\r\nimport ErrorAlert from '../components/ErrorAlert';\r\nimport { auth } from '../firebase';\r\nimport { LANDING, ORDER_FORM } from '../constants/Routes';\r\n\r\n/**\r\n * Allows user to order stock items only after they've filled out form\r\n */\r\nfunction OrderStock() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const fromForm = location.state !== undefined;\r\n\r\n  const [stock, setStock] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [language, setLanguage] = useState(LANGUAGES[0]);\r\n  const [personInfo, setPersonInfo] = useState(\r\n    fromForm\r\n      ? location.state.personInfo\r\n      : retrieveFromStorage('personInfo', undefined)\r\n  );\r\n  const [requestedStockItems, setRequestedStockItems] = useState(\r\n    retrieveFromStorage('requestedStockItems', [])\r\n  );\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!Boolean(auth.currentUser)) {\r\n      // Send user back to homepage if not signed in\r\n      history.push(LANDING)\r\n    } else if (!personInfo) {\r\n      // Send user back to form if they didn't fill it out\r\n      history.push(ORDER_FORM);\r\n    } else {\r\n      localStorage.setItem('personInfo', JSON.stringify(personInfo));\r\n      getStock();\r\n      console.log(personInfo);\r\n    }\r\n  }, [fromForm, history, personInfo]);\r\n\r\n  function retrieveFromStorage(key, defaultValue) {\r\n    const stored = localStorage.getItem(key);\r\n    if (stored) {\r\n      return JSON.parse(stored);\r\n    } else {\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  function getStock(timeout = 0) {\r\n    // Set stock empty to begin loading spinner\r\n    setStock([]);\r\n    setError(false);\r\n\r\n    // Fetch stock after designated time\r\n    setTimeout(() => {\r\n      fetchStock()\r\n        .then((res) => {\r\n          setStock(res.data);\r\n        })\r\n        .catch((e) => setError(true));\r\n    }, timeout);\r\n  }\r\n\r\n  function capitalize(s) {\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  /**\r\n   * Callback for OrderModal to add item to items list\r\n   * @param {Object} requestedItem { id, name, requestedCount, countAfterRequest }\r\n   */\r\n  function onRequest(requestedItem) {\r\n    // Check if item is already in list\r\n    let alreadyRequested = requestedStockItems.find(\r\n      (item) => item.id === requestedItem.id\r\n    );\r\n\r\n    let updatedRequestedItems;\r\n\r\n    if (alreadyRequested === undefined) {\r\n      // If item isn't in list, simply add it\r\n      updatedRequestedItems = requestedStockItems.concat(requestedItem);\r\n    } else {\r\n      // If item is already in list, update its values instead of adding\r\n      let itemIndex = requestedStockItems.indexOf(alreadyRequested);\r\n\r\n      updatedRequestedItems = [...requestedStockItems];\r\n\r\n      // Replace old values with new values\r\n      updatedRequestedItems[itemIndex].requestedCount =\r\n        requestedItem.requestedCount;\r\n      updatedRequestedItems[itemIndex].countAfterRequest =\r\n        requestedItem.countAfterRequest;\r\n    }\r\n\r\n    // Update state and local storage\r\n    setRequestedStockItems(updatedRequestedItems);\r\n    localStorage.setItem(\r\n      'requestedStockItems',\r\n      JSON.stringify(updatedRequestedItems)\r\n    );\r\n  }\r\n\r\n  function writeRequestToNotes() {\r\n    let orderNotes = '';\r\n    requestedStockItems.forEach((item) => {\r\n      orderNotes += item.name + ': ' + item.requestedCount + ', ';\r\n    });\r\n    return orderNotes.slice(0, -2);\r\n  }\r\n\r\n  function submitRequest() {\r\n    // Send full person info to API\r\n    const requestBody = {\r\n      firstname: personInfo.firstName,\r\n      lastname: personInfo.lastName,\r\n      adults: personInfo.adults,\r\n      children: personInfo.adults,\r\n      zipcode: personInfo.zipcode,\r\n      'order-notes': writeRequestToNotes(),\r\n      fulfilled: false,\r\n    };\r\n    addPersonInfo(requestBody);\r\n\r\n    // Send updates for each requested item to API\r\n    const stockUpdatePromises = requestedStockItems.map((item) => {\r\n      console.log('making promise... ', item.countAfterRequest);\r\n      return updateStockCount(item.id, { newCount: item.countAfterRequest });\r\n    });\r\n\r\n    Promise.all(stockUpdatePromises).then((responses) =>\r\n      console.log(responses)\r\n    );\r\n\r\n    // Clear local storage\r\n    localStorage.removeItem('requestedStockItems');\r\n    localStorage.removeItem('personInfo');\r\n\r\n    // Show confirmation popup\r\n    setShowConfirmation(true);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1 style={{ textAlign: 'center' }}>Select stock here</h1>\r\n\r\n      {requestedStockItems.map((r) => (\r\n        <p key={r.name}>\r\n          {r.name}: {r.requestedCount}\r\n        </p>\r\n      ))}\r\n\r\n      {!error && (\r\n        <Button\r\n          variant=\"type\"\r\n          className=\"mb-3\"\r\n          onClick={submitRequest}\r\n          block\r\n          style={{\r\n            backgroundColor: '#16AB8D',\r\n            borderColor: '#FFFFF5',\r\n            color: '#FFFFFF',\r\n            borderRadius: '200px',\r\n          }}\r\n          disabled={requestedStockItems.length === 0}\r\n        >\r\n          {requestedStockItems.length > 0\r\n            ? 'Submit request'\r\n            : 'Select items below'}\r\n        </Button>\r\n      )}\r\n\r\n      <Container style={{ display: 'flex', alignItems: 'center', padding: 0 }}>\r\n        <Dropdown variant=\"type\" onChange={(e) => console.log(e)}>\r\n          <Dropdown.Toggle\r\n            variant=\"type\"\r\n            id=\"dropdown-basic\"\r\n            size=\"md\"\r\n            className=\"mb-3\"\r\n            style={{\r\n              backgroundColor: '#16AB8D',\r\n              borderColor: '#FFFFF5',\r\n              color: '#FFFFFF',\r\n              borderRadius: '200px',\r\n            }}\r\n          >\r\n            Language: <b>{capitalize(language)}</b>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            {LANGUAGES.map((lang) => (\r\n              <Dropdown.Item\r\n                onSelect={(key) => setLanguage(key)}\r\n                eventKey={lang}\r\n                key={lang}\r\n              >\r\n                {capitalize(lang)}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <div style={{ margin: 'auto' }} />\r\n        <Button\r\n          variant=\"type\"\r\n          size=\"md\"\r\n          onClick={getStock}\r\n          style={{\r\n            backgroundColor: '#16AB8D',\r\n            borderColor: '#FFFFF5',\r\n            color: '#FFFFFF',\r\n            borderRadius: '200px',\r\n          }}\r\n        >\r\n          Refresh\r\n        </Button>\r\n      </Container>\r\n\r\n      {/* List of stock */}\r\n      {stock.length === 0 && !error && <Loading />}\r\n      {stock &&\r\n        personInfo &&\r\n        stock.map((item) => (\r\n          <OrderCard\r\n            stockItem={item}\r\n            getStock={getStock}\r\n            lang={language === 'english' ? 'name' : language}\r\n            key={item._id}\r\n            onRequest={onRequest}\r\n            isRequested={requestedStockItems.some(\r\n              (requested) => item._id === requested.id\r\n            )}\r\n          />\r\n        ))}\r\n      {error && (\r\n        <ErrorAlert\r\n          heading=\"Error\"\r\n          body=\"An error occurred while trying to get the stock.\"\r\n          dismissible={false}\r\n        />\r\n      )}\r\n\r\n      {/* Confirmation popup */}\r\n      <ConfirmationModal\r\n        style={{\r\n          backgroundColor: '#16AB8D',\r\n          borderColor: '#16AB8D',\r\n          color: '#FFFFFF',\r\n        }}\r\n        title=\"Order successfully placed!\"\r\n        body=\"Thanks for your patronage! Your order will be fulfilled shortly.\"\r\n        buttonText=\"Back to Home\"\r\n        show={showConfirmation}\r\n        handleClose={() => {\r\n          setShowConfirmation(false);\r\n          history.push('/'); // Redirect back home\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OrderStock;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\n/**\r\n * Confirmation modal when fulfilling a person's order\r\n */\r\nfunction FulfillModal({ person, show, handleClose, fulfillPerson }) {\r\n  /**\r\n   * Handles confirmation of fulfilling a person's order\r\n   */\r\n  function handleConfirm() {\r\n    fulfillPerson(person._id);\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>Confirm fulfillment</Modal.Header>\r\n      <Modal.Body>\r\n        <h5>\r\n          Are you sure that {person.firstname}'s order is correct and has been\r\n          fulfilled?\r\n        </h5>\r\n        <p>{person['order-notes']}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" style={{borderRadius: '200px'}} onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button onClick={handleConfirm}\r\n        style={{backgroundColor: '#35E82A', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}>\r\n          Confirm fulfillment\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default FulfillModal;\r\n","import React, { useState } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport FulfillModal from './FulfillModal';\r\n\r\n/**\r\n * Displays:\r\n * - person's name\r\n * - order notes\r\n * - button that sends a socket emit to backend that\r\n *   sets fulfill to true\r\n */\r\nfunction UnfulfilledOrderCard({ person, fulfillPerson }) {\r\n  const [showFulfillModal, setShowFulfillModal] = useState(false);\r\n\r\n  // Handlers for showing/closing modal when ordering item\r\n  const handleClose = () => setShowFulfillModal(false);\r\n  const handleShow = () => setShowFulfillModal(true);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        key={person._id}\r\n        size=\"lg\"\r\n        style={{ margin: 5 }}\r\n      >\r\n        <Card.Body>\r\n          <Card.Header as=\"h2\">\r\n            {person.firstname} {person.lastname}\r\n          </Card.Header>\r\n          <Card.Text>{person['order-notes']}</Card.Text>\r\n          <Button onClick={handleShow} block\r\n          style={{backgroundColor: '#16AB8D', borderColor: '#16AB8D', borderRadius: '200px', color: '#FFFFFF'}}>\r\n            Fulfill Order\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <FulfillModal\r\n        person={person}\r\n        show={showFulfillModal}\r\n        handleClose={handleClose}\r\n        fulfillPerson={fulfillPerson}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnfulfilledOrderCard;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport cart from '../images/empty-cart.svg';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    justifyContent: 'center',\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  image: {\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25),\r\n    marginTop: theme.spacing(20),\r\n  },\r\n  grid: {\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst Theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#00c853',\r\n    },\r\n    secondary: {\r\n      main: '#00c853',\r\n    },\r\n    action: {\r\n      main: '#00c853',\r\n    },\r\n  },\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MuiThemeProvider theme={Theme}>\r\n        <Dialog\r\n          open={open}\r\n          maxWidth=\"lg\"\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n          className={classes.dialog}\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {'No orders at the moment'}\r\n          </DialogTitle>\r\n          <DialogActions className={classes.button}>\r\n            <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </MuiThemeProvider>\r\n      <Grid container className={classes.grid}>\r\n        <Grid item lg={4} sm={4}></Grid>\r\n        <Grid item xs={12} lg={4} sm={4} className={classes.grid}>\r\n          <img alt=\"Shopping cart\" src={cart} className={classes.image} />\r\n        </Grid>\r\n        <Grid item lg={4} sm={4}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport Container from 'react-bootstrap/Container';\r\nimport UnfulfilledOrderCard from '../components/UnfulfilledOrderCard';\r\nimport { BASE_API_URL } from '../api/Client';\r\nimport Dialog from '../components/Dialog'\r\n\r\n/**\r\n * Page with list of people with unfulfilled orders\r\n */\r\nfunction OrderTracker() {\r\n  const [ordersList, setOrdersList] = useState([]);\r\n\r\n  // TODO: Implement order tracker using Firebase\r\n  // useEffect(() => {\r\n  //   const socket = socketIOClient(BASE_API_URL);\r\n  //   socket.on('person', (data) => {\r\n  //     eventHandler(data);\r\n  //   });\r\n\r\n  //   const eventHandler = (personData) => {\r\n  //     setOrdersList((currentOrders) => [...currentOrders, personData]);\r\n  //   };\r\n\r\n  //   return () => {\r\n  //     console.log('effect done');\r\n  //     socket.disconnect();\r\n  //   };\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, []);\r\n\r\n  function personFulfilled(id) {\r\n    const socket = socketIOClient(BASE_API_URL);\r\n    console.log('printing socket object: ');\r\n    console.log(socket);\r\n\r\n    console.log('emitting personfulfilled');\r\n    socket.emit('personFulfilled', id);\r\n    socket.on('personFulfillSuccess', function (confirmation) {\r\n      console.log('confirmed ' + confirmation);\r\n      socket.disconnect();\r\n    });\r\n    // Remove fulfilled order from list after emitting fulfillment through socket\r\n    setOrdersList(ordersList.filter((order) => order._id !== id));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {ordersList.length === 0 && <Dialog/>}\r\n      {ordersList &&\r\n        ordersList.map((order) => (\r\n          <UnfulfilledOrderCard\r\n            fulfillPerson={personFulfilled}\r\n            person={order}\r\n            key={order._id}\r\n          />\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OrderTracker;\r\n","import React, { useEffect } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Loading from '../components/Loading';\r\nimport ErrorAlert from '../components/ErrorAlert';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth, signInWithGoogle } from '../firebase';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LANDING } from '../constants/Routes';\r\n\r\n/**\r\n * Sign in page for Pan-Lang\r\n */\r\nfunction SignIn() {\r\n  const history = useHistory();\r\n  const [user, loading, error] = useAuthState(auth);\r\n\r\n  useEffect(() => {\r\n    // Redirect user to landing page if already signed in\r\n    if (Boolean(user)) history.push(LANDING);\r\n  }, [history, user])\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.page}>\r\n      <Typography variant=\"h2\" className={classes.title}>\r\n        Join Pan-Lang today.\r\n      </Typography>\r\n      <Paper className={classes.paper}>\r\n        {/* Sign in button when not signed in */}\r\n        {!Boolean(user) && (\r\n          <Button className={classes.button} onClick={signInWithGoogle}>\r\n            Sign in with Google\r\n          </Button>\r\n        )}\r\n      </Paper>\r\n\r\n      {/* Loading */}\r\n      {loading && <Loading />}\r\n\r\n      {/* Error */}\r\n      {error && <ErrorAlert body=\"An error occurred.\" />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  page: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    marginBottom: theme.spacing(2),\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '30px',\r\n    },\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    padding: theme.spacing(5),\r\n    maxWidth: theme.breakpoints.width('sm'),\r\n  },\r\n  button: {\r\n    alignSelf: 'center',\r\n    backgroundColor: '#16AB8D',\r\n    borderColor: '#FFFFF5',\r\n    color: '#FFFFFF',\r\n    width: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#119178',\r\n    },\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/Navbar/';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport Order from './pages/Order';\r\nimport Stock from './pages/Stock';\r\nimport OrderStock from './pages/OrderStock';\r\nimport OrderTracker from './pages/OrderTracker';\r\nimport SignIn from './pages/SignIn';\r\nimport {\r\n  ABOUT,\r\n  ORDER_FORM,\r\n  ORDER_TRACKER,\r\n  LANDING,\r\n  SIGN_IN,\r\n  STOCK,\r\n  ORDER_STOCK,\r\n} from './constants/Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Navbar />\r\n      {/* FIXME: naive fix for keeping a fixed navbar */}\r\n      <div style={{ padding: 55 }} />\r\n      <Switch>\r\n        <Route exact path={LANDING}>\r\n          <Home />\r\n        </Route>\r\n        <Route exact path={ABOUT}>\r\n          <About />\r\n        </Route>\r\n        <Route path={STOCK}>\r\n          <Stock />\r\n        </Route>\r\n        <Route path={ORDER_FORM}>\r\n          <Order />\r\n        </Route>\r\n        <Route path={ORDER_STOCK}>\r\n          <OrderStock />\r\n        </Route>\r\n        <Route path={ORDER_TRACKER}>\r\n          <OrderTracker />\r\n        </Route>\r\n        <Route path={SIGN_IN}>\r\n          <SignIn />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <h1>\r\n            Welcome to <font style={{ color: '#26B020' }}>Pan-Lang</font>!\r\n          </h1>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <App />\r\n    </React.Fragment>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}