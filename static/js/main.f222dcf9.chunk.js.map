{"version":3,"sources":["api/Pantry.js","firebase.js","images/logo_nobg.png","constants/Routes.js","images/QwertycowMoo.png","images/kgs5.png","images/renzol2.png","images/evanmm3.png","components/NavDrawer.js","images/empty-cart.svg","components/Navbar/index.js","pages/Home/Landing.js","api/People.js","components/CSVModal.js","pages/Home/User.js","pages/Home/index.js","components/AvatarCard.js","pages/About.js","constants/Order.js","pages/Order.js","components/ErrorAlert.js","components/Loading.js","api/Stock.js","components/StockModal.js","components/StockInfo.js","hooks/useLanguage.js","components/StockCard.js","components/LanguageMenu.js","components/SearchBar.js","constants/Languages.js","hooks/useStock.js","hooks/useNameSearch.js","components/StockInput.js","pages/Stock.js","components/AccordionWrapper.js","components/OrderModal.js","components/StockOrderCard.js","components/RequestedItemCard.js","components/ReviewDialog.js","pages/OrderStock.js","components/FulfillModal.js","components/UnfulfilledOrderCard.js","components/EmptyDialog.js","pages/OrderTracker.js","pages/SignIn.js","components/Splash.js","App.js","serviceWorker.js","index.js","api/Client.js"],"names":["item","a","Client","post","then","res","catch","e","env","process","firebase","initializeApp","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","auth","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","yahooProvider","OAuthProvider","sendPantryCreationRequest","addPantry","uid","currentUser","email","name","displayName","signInWithGoogle","signInWithPopup","signInWithFacebook","signInWithYahoo","result","console","log","db","firestore","module","exports","LANDING","SIGN_IN","ABOUT","ORDER_FORM","ORDER_STOCK","ORDER_TRACKER","STOCK","useStyles","makeStyles","theme","toolbar","paddingRight","toolbarIcon","display","alignItems","justifyContent","padding","mixins","drawerPaper","position","breakpoints","down","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","transition","leavingScreen","width","spacing","up","drawerPaperCloseMobile","NavDrawer","open","handleOpen","handleClose","history","useHistory","iOS","browser","test","navigator","userAgent","isMobile","useMediaQuery","useTheme","toggleDrawer","anchor","event","type","key","navigateTo","location","push","setTimeout","signOut","classes","variant","paper","clsx","onClose","onOpen","disableBackdropTransition","disableDiscovery","transitionDuration","appear","enter","exit","className","onClick","button","primary","Boolean","menuButton","marginLeft","marginRight","appBar","backgroundColor","zIndex","drawer","appBarShift","Navbar","drawerOpen","openDrawer","hasUser","trigger","useScrollTrigger","Slide","direction","in","AppBar","Toolbar","IconButton","to","src","logo","alt","style","height","root","marginTop","signInLink","Landing","Container","Typography","Button","component","Link","addPersonInfo","update","put","modal","palette","background","boxShadow","shadows","formControl","minWidth","maxWidth","margin","CSVModal","show","useState","Date","getMonth","month","setMonth","getFullYear","year","setYear","Dialog","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","centered","DialogTitle","Fade","Paper","FormControl","InputLabel","id","Select","required","labelId","value","onChange","target","MenuItem","TextField","label","defaultValue","DialogActions","href","BASE_API_URL","disabled","borderColor","color","textTransform","borderRadius","User","showCSVModal","setShowCSVModal","align","marginBottom","fontWeight","size","Home","useAuthState","user","card","paddingTop","paddingBottom","paddingLeft","avatar","AvatarCard","role","github","elevation","Avatar","rel","flexGrow","p","team","textAlign","avatarGroup","flexWrap","About","QwertycowMoo","kgs5","renzol2","evanmm3","map","member","ORDER_STEPS","orderSchema","Yup","firstName","lastName","adults","integer","positive","children","zipcode","length","orderNotes","page","title","fontSize","typography","h3","stepper","formPaper","subtitle","h5","submit","formField","OrderForm","useEffect","Stepper","activeStep","alternativeLabel","step","Step","StepLabel","validationSchema","onSubmit","personInfo","fromForm","initialValues","handleSubmit","handleChange","handleBlur","handleReset","values","touched","errors","isValid","Grid","container","xs","md","onBlur","helperText","error","fullWidth","flexDirection","ErrorAlert","heading","body","severity","Alert","AlertTitle","spinnerDiv","Loading","CircularProgress","fetchStock","get","createStockItem","updateStockCount","updatedItem","amountSchema","newCount","moreThan","closeButton","form","StockModal","getStock","stockId","stockName","stockCount","loading","setLoading","setError","formSubmission","pantry","_id","parseInt","updateIsSuccessful","Modal","aria-labelledby","aria-describedby","actions","cardAction","only","topContent","bottomContent","nameContainer","noTranslation","subname","date","countContainer","countHeader","count","alignSelf","StockInfo","stockItem","languageTag","hasLanguage","handleShow","disableClick","visibleStockCount","showEnglishOnly","Card","CardActionArea","disableRipple","CardContent","Box","translations","Chip","undefined","timestamp","seconds","_seconds","toDateString","substr","getItemDateString","useLanguage","setHasLanguage","translationsLoaded","StockCard","showAmountModal","setShowAmountModal","menuItem","toggle","LanguageMenu","languages","currentLanguage","setLanguage","isError","React","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","currentTarget","locale","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","lang","index","tag","selected","textContent","selectedLanguage","find","handleMenuItemClick","searchPaper","search","SearchBar","stock","getFilteredStockItems","setNameQuery","LANGUAGES","language","InputProps","startAdornment","InputAdornment","toLowerCase","useStock","setStock","data","useNameSearch","nameQuery","filter","inEnglishName","includes","inTranslatedName","itemSchema","details","StockInput","defaultExpanded","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","isSubmitting","h4","subheading","column","info","Stock","accordion","AccordionWrapper","summary","usePrimary","buttonGroup","incrementor","textField","OrderModal","onRequest","defaultAmount","selectedAmount","setSelectedAmount","Bold","Divider","ButtonGroup","placeholder","amount","valueAsNumber","isNaN","Number","requestedCount","countAfterRequest","StockOrderCard","showOrderModal","RequestedItemCard","requestedItem","removeRequestedItem","showActions","raised","CardActions","additionalNotes","divider","ReviewDialog","submitRequest","requestedStockItems","setAdditionalNotes","requestLoading","setRequestLoading","requestSuccess","setRequestSuccess","success","finishOrder","scroll","List","dense","r","ListItem","ListItemText","secondary","multiline","sm","OrderStock","useLocation","state","showReview","setShowReview","retrieveFromStorage","setRequestedStockItems","stored","localStorage","getItem","JSON","parse","updatedRequestedItems","alreadyRequested","concat","itemIndex","indexOf","setItem","stringify","updatedRequest","splice","writeRequestToNotes","forEach","slice","requestBody","fulfilled","stockUpdatePromises","Promise","all","removeItem","getRequestedCount","itemId","orderTitle","buttonText","Badge","badgeContent","confirm","close","FulfillModal","person","personId","fulfillPerson","order","fontsize","additional","UnfulfilledOrderCard","showFulfillModal","setShowFulfillModal","hours","getHours","minutes","getMinutes","ampm","formatDate","toDate","disableElevation","dialog","image","grid","Theme","createMuiTheme","main","action","AlertDialogSlide","setOpen","lg","cart","OrderTracker","userLoading","userError","query","setQuery","collection","doc","where","useCollection","snapshot","snapLoading","snapError","fulfillOrder","updatePerson","docs","SignIn","require","Splash","App","setDrawerOpen","handleDrawerOpen","basename","exact","path","Order","window","hostname","match","ReactDOM","render","StrictMode","Fragment","CssBaseline","document","getElementById","serviceWorker","ready","registration","unregister","message","axios","baseURL"],"mappings":"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","file":"static/js/main.f222dcf9.chunk.js","sourcesContent":["import Client from './Client';\n\nexport const PANTRY_ENDPOINT = '/pantry';\n\nexport async function addPantry(item) {\n  Client.post(PANTRY_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\n//put request not done on the frontend yet, this is only a placeholder\nexport async function updatePantry(update) {\n  Client.put(PANTRY_ENDPOINT, update)\n    .then((res) => {\n      console.log(res);\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    })\n\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { addPantry } from './api/Pantry';\n\n// Initialize Firebase\nconst env = process.env;\nfirebase.initializeApp({\n  apiKey: env.REACT_APP_API_KEY,\n  authDomain: env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: env.REACT_APP_DATABASE_URL,\n  projectId: env.REACT_APP_PROJECT_ID,\n  storageBucket: env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: env.REACT_APP_APP_ID,\n  measurementId: env.REACT_APP_MEASUREMENT_ID,\n});\n\n// Auth providers\nexport const auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst facebookProvider=  new firebase.auth.FacebookAuthProvider();\nconst yahooProvider = new firebase.auth.OAuthProvider('yahoo.com');\n\n// Sends request to create pantry for new users\n// Does nothing if user already exists in database\nexport const sendPantryCreationRequest = () => {\n  let body = {\n    uid: auth.currentUser.uid,\n    email: auth.currentUser.email,\n    name: auth.currentUser.displayName,\n  };\n  addPantry(body);\n}\n\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(googleProvider).then(sendPantryCreationRequest);\n};\n\nexport const signInWithFacebook = () => {\n  auth.signInWithPopup(facebookProvider).then(sendPantryCreationRequest);\n}\n\nexport const signInWithYahoo = () => {\n  auth.signInWithPopup(yahooProvider).then( (result) => {\n    console.log(result);\n    sendPantryCreationRequest();\n  });\n}\n\n// Database\nexport const db = firebase.firestore();\n","module.exports = __webpack_public_path__ + \"static/media/logo_nobg.484389dc.png\";","// Endpoints for all pages in app\nexport const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ABOUT = '/about';\nexport const ORDER_FORM = '/order-form';\nexport const ORDER_STOCK = '/order-stock';\nexport const ORDER_TRACKER = '/order-tracker';\nexport const STOCK = '/stock';","module.exports = __webpack_public_path__ + \"static/media/QwertycowMoo.c4707b2e.png\";","module.exports = __webpack_public_path__ + \"static/media/kgs5.ed891ef2.png\";","module.exports = __webpack_public_path__ + \"static/media/renzol2.726b433f.png\";","module.exports = __webpack_public_path__ + \"static/media/evanmm3.c4869c53.png\";","import React from 'react';\nimport clsx from 'clsx';\nimport { useHistory } from 'react-router-dom';\n\n// Material UI\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport KitchenIcon from '@material-ui/icons/Kitchen';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport TransitEnterexitIcon from '@material-ui/icons/TransitEnterexit';\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\n\n// Routes and auth\nimport {\n  ABOUT,\n  LANDING,\n  ORDER_FORM,\n  ORDER_TRACKER,\n  SIGN_IN,\n  STOCK,\n} from '../constants/Routes';\nimport { auth } from '../firebase';\n\n/**\n * Left-anchored expandable drawer for navigation\n */\nfunction NavDrawer({ open, handleOpen, handleClose }) {\n  const history = useHistory();\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('md'));\n\n  /**\n   * Callback that toggles drawer on mobile\n   */\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    if (open) {\n      handleOpen();\n    } else {\n      handleClose();\n    }\n  };\n\n  /**\n   * Navigates user to specified page upon clicking drawer\n   */\n  function navigateTo(location) {\n    history.push(location);\n    // Close the drawer on mobile\n    if (isMobile) {\n      setTimeout(handleClose, 0);\n    }\n  }\n\n  /**\n   * Function to sign out from nav drawer\n   */\n  async function signOut() {\n    await auth.signOut();\n    navigateTo(LANDING);\n  }\n\n  const classes = useStyles();\n  return (\n    <SwipeableDrawer\n      anchor=\"left\"\n      variant={isMobile ? 'temporary' : 'permanent'}\n      classes={{\n        paper: clsx(\n          classes.drawerPaper,\n          !open && classes.drawerPaperClose,\n          !open && isMobile && classes.drawerPaperCloseMobile\n        ),\n      }}\n      open={open}\n      onClose={toggleDrawer('left', false)}\n      onOpen={toggleDrawer('left', true)}\n      disableBackdropTransition={true}\n      disableDiscovery={iOS}\n      transitionDuration={{ appear: 100, enter: 100, exit: 400 }}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n\n      {/* Navigation */}\n      <nav>\n        <List>\n          {/* Home */}\n          <ListItem button onClick={() => navigateTo(LANDING)}>\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n\n          {/* Navigation only available to users */}\n          {Boolean(auth.currentUser) && (\n            <>\n              {/* Stock */}\n              <ListItem button onClick={() => navigateTo(STOCK)}>\n                <ListItemIcon>\n                  <KitchenIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Stock\" />\n              </ListItem>\n\n              {/* Order Form */}\n              <ListItem button onClick={() => navigateTo(ORDER_FORM)}>\n                <ListItemIcon>\n                  <ShoppingCartIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Order Form\" />\n              </ListItem>\n\n              {/* Order Tracker */}\n              <ListItem button onClick={() => navigateTo(ORDER_TRACKER)}>\n                <ListItemIcon>\n                  <AssignmentTurnedInIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Order Tracker\" />\n              </ListItem>\n            </>\n          )}\n\n          {/* About Pan-Lang */}\n          <ListItem button onClick={() => navigateTo(ABOUT)}>\n            <ListItemIcon>\n              <InfoIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"About Pan-Lang\" />\n          </ListItem>\n        </List>\n\n        <Divider />\n\n        {/* User specific routes */}\n        <List>\n          {/* Sign in */}\n          {!Boolean(auth.currentUser) && (\n            <ListItem button onClick={() => navigateTo(SIGN_IN)}>\n              <ListItemIcon>\n                <ExitToAppIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Sign in\" />\n            </ListItem>\n          )}\n\n          {/* Sign out */}\n          {Boolean(auth.currentUser) && (\n            <ListItem button onClick={signOut}>\n              <ListItemIcon>\n                <TransitEnterexitIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Sign out\" />\n            </ListItem>\n          )}\n        </List>\n        <Divider />\n      </nav>\n\n      {/* Expand/hide dashboard */}\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={open ? handleClose : handleOpen}>\n          {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n        </IconButton>\n      </div>\n    </SwipeableDrawer>\n  );\n}\n\nconst drawerWidth = 250;\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '8px 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    [theme.breakpoints.down('md')]: {\n      position: 'absolute',\n    },\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    minHeight: '100vh',\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  drawerPaperCloseMobile: {\n    width: 0,\n  },\n}));\n\nexport default NavDrawer;\n","module.exports = __webpack_public_path__ + \"static/media/empty-cart.302b7b48.svg\";","import React from 'react';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Slide from '@material-ui/core/Slide';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\nimport logo from '../../images/logo_nobg.png';\n\n/**\n * Navigation bar at the top of window\n */\nfunction Navbar({ drawerOpen, toggleDrawer, openDrawer, hasUser = false }) {\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('md'));\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(\n          classes.appBar,\n          drawerOpen && !isMobile && classes.appBarShift\n        )}\n      >\n        <Toolbar>\n          {isMobile && (\n            <IconButton onClick={openDrawer}>\n              <MenuIcon />\n            </IconButton>\n          )}\n\n          {/* Logo */}\n          {\n            <Link to=\"/\">\n              <img\n                src={logo}\n                alt=\"Pan-Lang logo\"\n                style={{ width: 60, height: 60 }}\n              />\n            </Link>\n          }\n        </Toolbar>\n      </AppBar>\n    </Slide>\n  );\n}\n\nconst drawerWidth = 250;\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  appBar: {\n    backgroundColor: 'white',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n}));\n\nexport default Navbar;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom';\nimport { SIGN_IN } from '../../constants/Routes';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Landing page for Pan-Lang.\n * The first thing people will see when visiting our web app.\n */\nfunction Landing() {\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h1\">Pan-Lang</Typography>\n      <Typography variant=\"h2\">\n        Helping the language barrier between food pantry coordinators and\n        non-English speakers.\n      </Typography>\n      <Button component={Link} variant=\"contained\" to={SIGN_IN} className={classes.signInLink}>\n        Sign up today!\n      </Button>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n  },\n  signInLink: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default Landing;\n","\nimport Client from './Client';\n\nexport const PEOPLE_ENDPOINT = '/people';\n\nexport async function addPersonInfo(item) {\n  Client.post(PEOPLE_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\nexport async function fetchPeople(pantry, month, year) {\n  let query = \"?pantry=\" + pantry + \"&month=\" + month + \"&year=\" + year;\n  console.log(PEOPLE_ENDPOINT + query)\n  const promise = await Client.get(PEOPLE_ENDPOINT + query);\n  return promise;\n}\n\nexport async function updatePerson(update) {\n  Client.put(PEOPLE_ENDPOINT, update)\n    .then((res) => {\n      console.log(res);\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  InputLabel,\n  MenuItem,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { PEOPLE_ENDPOINT } from '../api/People';\nimport { auth } from '../firebase';\nimport { BASE_API_URL } from '../api/Client';\n\n/**\n * Popup modal for downloading a csv file\n */\n\nfunction CSVModal({ show, handleClose }) {\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n\n  const handleMonthChange = (event) => {\n    setMonth(event.target.value);\n  };\n\n  const handleYearChange = (event) => {\n    setYear(event.target.value);\n  };\n\n  function getDownloadUrl() {\n    if (Boolean(auth.currentUser)) {\n      return `${BASE_API_URL}${PEOPLE_ENDPOINT}?pantry=${auth.currentUser.uid}&month=${month}&year=${year}`;\n    } else {\n      return '';\n    }\n  }\n\n  //Current working on: getting both the forms to do things and send the API request, maybe need to reform the People.js in API too\n  const classes = useStyles();\n  return (\n    <Dialog\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      centered\n      className={classes.modal}\n    >\n      <DialogTitle>Enter month and year</DialogTitle>\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"month-select-label\">Month</InputLabel>\n            <Select\n              required\n              labelId=\"month-select-label\"\n              id=\"month-select\"\n              value={month}\n              onChange={handleMonthChange}\n            >\n              <MenuItem value={1}>January</MenuItem>\n              <MenuItem value={2}>February</MenuItem>\n              <MenuItem value={3}>March</MenuItem>\n              <MenuItem value={4}>April</MenuItem>\n              <MenuItem value={5}>May</MenuItem>\n              <MenuItem value={6}>June</MenuItem>\n              <MenuItem value={7}>July</MenuItem>\n              <MenuItem value={8}>August</MenuItem>\n              <MenuItem value={9}>September</MenuItem>\n              <MenuItem value={10}>October</MenuItem>\n              <MenuItem value={11}>November</MenuItem>\n              <MenuItem value={12}>December</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextField\n              required\n              id=\"year-textfield\"\n              label=\"year\"\n              defaultValue={new Date().getFullYear()}\n              onChange={handleYearChange}\n            ></TextField>\n          </FormControl>\n          <DialogActions>\n            {/* Check user is signed in before accessing user's UID in download URL */}\n            {Boolean(auth.currentUser) && (\n              <a href={getDownloadUrl()}>\n                <Button disabled={!Boolean(auth.currentUser)} id=\"get-people\">Download Order Data</Button>\n              </a>\n            )}\n          </DialogActions>\n        </Paper>\n      </Fade>\n    </Dialog>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    alignItems: 'center',\n  },\n  formControl: {\n    minWidth: '120px',\n    maxWidth: '200px',\n    margin: '5px',\n  },\n}));\nexport default CSVModal;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core';\nimport CsvModal from '../../components/CSVModal';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { ORDER_FORM, STOCK } from '../../constants/Routes';\n\n/**\n * User's home page for Pan-Lang.\n * The default screen for users logged in to Pan-Lang.\n */\nfunction User() {\n  const [showCSVModal, setShowCSVModal] = useState(false);\n\n  // Handlers for showing/closing modal when downloading csv\n  const handleClose = () => setShowCSVModal(false);\n  const handleShow = () => setShowCSVModal(true);\n\n  const classes = useStyles();\n  return (\n    <Container align=\"center\" className={classes.root}>\n      <div style={{ marginBottom: 20 }}>\n        <Typography variant=\"h3\" component=\"h1\">\n          Welcome to{' '}\n          <font style={{ color: '#35E82A', fontWeight: 'bold' }}>Pan-Lang</font>\n        </Typography>\n      </div>\n      <div>\n        <Link to={ORDER_FORM} style={{ color: 'white' }}>\n          <Button className={classes.button} size=\"large\">\n            Start a new order\n          </Button>\n        </Link>\n      </div>\n      <div>\n        <Link to={STOCK} style={{ color: 'white' }}>\n          <Button className={classes.button} size=\"large\">\n            Edit and add stock items\n          </Button>{' '}\n        </Link>\n      </div>\n      <div>\n        <Button className={classes.button} onClick={handleShow} size=\"large\">\n          {' '}\n          Download Data\n        </Button>\n      </div>\n\n      <br></br>\n      <br></br>\n      <Button\n        className={classes.button}\n        onClick={() => auth.signOut()}\n        size=\"large\"\n      >\n        Sign out\n      </Button>\n\n      {/* Download data modal */}\n      <CsvModal show={showCSVModal} handleClose={handleClose} />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n  },\n  button: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    borderRadius: '200px',\n    margin: '5px',\n    width: '100%',\n    maxWidth: 500,\n  },\n}));\nexport default User;\n","import React from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../../firebase';\nimport Landing from './Landing';\nimport User from './User';\n\n/**\n * Landing page\n */\nfunction Home() {\n  const [user] = useAuthState(auth);\n\n  if (!Boolean(user)) {\n    // If the user is not logged in, return landing page\n    return <Landing />;\n  } else {\n    // If user is logged in, return user's home page\n    return <User />;\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport {\n  Avatar,\n  Container,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\n\n/**\n * Card on About page representing each team member\n */\nfunction AvatarCard({ name, src, alt, role = 'Software Developer', github }) {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={3} className={classes.card}>\n      <Container>\n        <Avatar src={src} alt={alt} className={classes.avatar} />\n        <Typography variant=\"h5\">\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </Typography>\n        <Typography variant=\"subtitle1\">{role}</Typography>\n      </Container>\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingLeft: 10,\n    paddingRight: 10,\n    [theme.breakpoints.down('sm')]: {\n      padding: 5,\n      width: '100%',\n    },\n  },\n  avatar: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    [theme.breakpoints.down('sm')]: {\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n    },\n    marginBottom: 10,\n  },\n}));\n\nexport default AvatarCard;\n","import React from 'react';\nimport { Container, makeStyles, Typography } from '@material-ui/core';\nimport AvatarCard from '../components/AvatarCard';\nimport QwertycowMoo from '../images/QwertycowMoo.png';\nimport kgs5 from '../images/kgs5.png';\nimport renzol2 from '../images/renzol2.png';\nimport evanmm3 from '../images/evanmm3.png';\n\n/**\n * About page for Pan-Lang\n * Provides background for our application and service\n */\nfunction About() {\n  const team = [\n    {\n      name: 'Kevin Zhou',\n      src: QwertycowMoo,\n      github: 'https://github.com/QwertycowMoo',\n      role: 'Lead Software Developer',\n    },\n    { name: 'Katie Sanders', src: kgs5, github: 'https://github.com/kgs5' },\n    {\n      name: 'Renzo Ledesma',\n      src: renzol2,\n      github: 'https://github.com/renzol2',\n    },\n    {\n      name: 'Evan Matthews',\n      src: evanmm3,\n      github: 'https://github.com/evanmm3',\n    },\n  ];\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Container\n        maxWidth=\"md\"\n        style={{\n          paddingBottom: 120,\n          marginBottom: 20,\n        }}\n      >\n        {/* Background */}\n        <Typography variant=\"h2\">\n          {'About '}\n          <font style={{ color: '#26B020', fontWeight: 'bold' }}>\n            Pan-Lang\n          </font>\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          Pan-Lang is an organizational web application designed to help local\n          food bank organizers keep track of orders, maintain visitor records,\n          and communicate with non-English speaking patrons.\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          Food insecurity is an important issue in the Champain County\n          community. Nearly 15% of residents must deal with food insecurity.\n          Many of these individuals are also ineligible for federal nutrition\n          programs and must rely on local food pantries for meals.\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          On top of this, many of these individuals speak limited English,\n          making it difficult for them to communicate their needs to food pantry\n          staff. With Pan-Lang, our mission is to break this language barrier\n          and provide a more efficient method of supporting those in need.\n        </Typography>\n      </Container>\n\n      {/* Team */}\n      <Container className={classes.team}>\n        <Typography variant=\"h3\">Our Team</Typography>\n        <Container className={classes.avatarGroup}>\n          {team.map((member) => (\n            <AvatarCard\n              key={member.src}\n              name={member.name}\n              src={member.src}\n              alt={member.name}\n              role={member.role}\n              github={member.github}\n            />\n          ))}\n        </Container>\n      </Container>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n    flexGrow: 1,\n  },\n  p: {\n    marginTop: 8,\n    marginBottom: 8,\n  },\n  team: {\n    textAlign: 'center',\n    width: '100%',\n    paddingBottom: 50,\n  },\n  avatarGroup: {\n    marginTop: 15,\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'stretch',\n    justifyContent: 'space-around',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default About;\n","export const ORDER_STEPS = [\n  'Enter patron info',\n  'Select order items',\n  'Review order'\n];","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { makeStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { ORDER_STOCK, LANDING } from '../constants/Routes';\nimport { ORDER_STEPS } from '../constants/Order';\nimport { auth } from '../firebase';\n\n// Validation schema for order form\nconst orderSchema = Yup.object({\n  firstName: Yup.string().required('First name is required'),\n  lastName: Yup.string().required('Last name is required'),\n  adults: Yup.number().integer().positive().required('# of adults is required'),\n  children: Yup.number()\n    .integer()\n    .positive()\n    .required('# of children is required'),\n  zipcode: Yup.string()\n    .length(5)\n    .test(\n      'Valid ZIP code',\n      'Must be a valid US ZIP code',\n      (value) => /^\\d+$/.test(value) // test for digits only\n    )\n    .required('ZIP code is required'),\n  orderNotes: Yup.string().required(),\n});\n\n/**\n * Page to fill out form for patron's order\n */\nfunction OrderForm() {\n  const history = useHistory();\n\n  // Immediately send user back to homepage if not signed in\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      history.push(LANDING);\n    }\n  }, [history]);\n\n  /**\n   * Called upon form submission\n   * @param {Object} personInfo info from submitted form\n   */\n  function onSubmit(personInfo) {\n    // Redirects user to order stock page with the form data\n    history.push(ORDER_STOCK, { fromForm: true, personInfo });\n  }\n\n  const classes = useStyles();\n  const requiredText = '*Required';\n  return (\n    <Container maxWidth=\"sm\" className={classes.page}>\n      <Typography variant=\"h1\" className={classes.title}>\n        Order Form\n      </Typography>\n\n      <Stepper activeStep={0} className={classes.stepper} alternativeLabel>\n        {ORDER_STEPS.map((step) => (\n          <Step key={step}>\n            <StepLabel>{step}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {/* Form */}\n      <Formik\n        validationSchema={orderSchema}\n        onSubmit={onSubmit}\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          adults: '',\n          children: '',\n          zipcode: '',\n          orderNotes: 'order notes',\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          handleReset,\n          values,\n          touched,\n          isValid,\n          errors,\n        }) => (\n          <Paper className={classes.formPaper}>\n            <Typography variant=\"h3\" className={classes.subtitle}>\n              Enter patron information\n            </Typography>\n\n            {/* First name, last name */}\n            <Grid container spacing={1}>\n              {/* First name */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"firstName\"\n                  label=\"First name\"\n                  required\n                  value={values.firstName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={\n                    touched.firstName ? errors.firstName : requiredText\n                  }\n                  error={touched.firstName && Boolean(errors.firstName)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n\n              {/* Last name */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"lastName\"\n                  label=\"Last name\"\n                  required\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.lastName ? errors.lastName : requiredText}\n                  error={touched.lastName && Boolean(errors.lastName)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n            </Grid>\n\n            {/* # of adults, # of children */}\n            <Grid container spacing={1}>\n              {/* # of adults */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"adults\"\n                  type=\"number\"\n                  required\n                  label=\"# of Adults in Household\"\n                  value={values.adults}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.adults ? errors.adults : requiredText}\n                  error={touched.adults && Boolean(errors.adults)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n\n              {/* # of children */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"children\"\n                  type=\"number\"\n                  required\n                  label=\"# of Children in Household\"\n                  value={values.children}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.children ? errors.children : requiredText}\n                  error={touched.children && Boolean(errors.children)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n            </Grid>\n\n            {/* Zip code */}\n            <TextField\n              id=\"zipcode\"\n              type=\"number\"\n              required\n              label=\"Zip/Postal code\"\n              value={values.zipcode}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.zipcode ? errors.zipcode : requiredText}\n              error={touched.zipcode && Boolean(errors.zipcode)}\n              variant=\"outlined\"\n              fullWidth\n              className={classes.formField}\n            />\n\n            {/* Submit and clear buttons */}\n            <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n              <Button\n                onClick={handleSubmit}\n                className={classes.submit}\n              >\n                Select order\n              </Button>\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={handleReset}\n              >\n                Clear\n              </Button>\n            </div>\n          </Paper>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    marginTop: 110,\n    paddingBottom: '120px',\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: theme.typography.h3.fontSize,\n  },\n  stepper: {\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    backgroundColor: 'rgba(0, 0, 0, 0)'\n  },\n  formPaper: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(3),\n    [theme.breakpoints.down('md')]: {\n      padding: theme.spacing(2),\n    },\n  },\n  subtitle: {\n    fontSize: theme.typography.h5.fontSize,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  submit: {\n    backgroundColor: '#16AB8D',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    color: '#FFFFFF',\n    marginLeft: theme.spacing(2),\n  },\n  formField: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default OrderForm;\n","import React from 'react';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n/**\n * Component signifying an error has occurred, or\n * a different specified severity\n * See: https://material-ui.com/components/alert/#alert\n */\nfunction ErrorAlert({ heading = '', body, severity = 'error', onClose }) {\n  return (\n    <Alert severity={severity} onClose={onClose}>\n      {heading.length > 0 && <AlertTitle>{heading}</AlertTitle>}\n      {body}\n    </Alert>\n  );\n}\n\nexport default ErrorAlert;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Centered spinner to signify loading\n */\nfunction Loading() {\n  const classes = useStyles();\n  return (\n    <Container className={classes.spinnerDiv}>\n      <CircularProgress />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  spinnerDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default Loading;\n","import Client from './Client';\n\nconst STOCK_ENDPOINT = '/stock';\n\nexport async function fetchStock(uid) {\n  return await Client.get(`${STOCK_ENDPOINT}?pantry=${uid}`);\n}\n\nexport async function createStockItem(item) {\n  return await Client.post(STOCK_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\nexport async function updateStockCount(updatedItem) {\n\n  return await Client.put(STOCK_ENDPOINT, updatedItem)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      console.error(e)\n      return false;\n    })\n}\n","import React, { useState } from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Fade from '@material-ui/core/Fade';\nimport Modal from '@material-ui/core/Modal';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorAlert from './ErrorAlert';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { updateStockCount } from '../api/Stock';\nimport { auth } from '../firebase';\n\n/**\n * Popup modal for editing the stock count of an item\n */\nfunction StockModal({\n  show,\n  handleClose,\n  getStock,\n  stockId,\n  stockName,\n  stockCount,\n}) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  /**\n   * Sends PUT request with updated stock count from input\n   * @param {Object} formSubmission { newCount } containing updated count\n   */\n  async function onSubmit(formSubmission) {\n    setLoading(true);\n\n    const updatedItem = {\n      pantry: auth.currentUser.uid,\n      _id: stockId,\n      newCount: parseInt(formSubmission.newCount)\n    };\n\n    const updateIsSuccessful = await updateStockCount(updatedItem);\n\n    setLoading(false);\n\n    if (!updateIsSuccessful) {\n      setError(true);\n    } else {\n      handleClose();\n      getStock(500);\n    }\n  }\n\n  const classes = useStyles();\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <Formik\n            validationSchema={amountSchema}\n            onSubmit={onSubmit}\n            initialValues={{\n              newCount: '',\n            }}\n          >\n            {/* Formik component */}\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              isValid,\n              errors,\n            }) => (\n              <>\n                <Typography variant=\"h5\">\n                  Edit amount for: {stockName}\n                </Typography>\n\n                {/* Text field for entering new amount */}\n                {!loading && !error && (\n                  <Container className={classes.form}>\n                    <Typography>Current amount: {stockCount}</Typography>\n                    <form onSubmit={handleSubmit}>\n                      <TextField\n                        id=\"newCount\"\n                        type=\"number\"\n                        label=\"Enter new item count\"\n                        value={values.newCount}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={touched.newCount ? errors.newCount : ''}\n                        error={touched.newCount && Boolean(errors.newCount)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </form>\n                  </Container>\n                )}\n\n                {/* Message when processing request */}\n                {loading && (\n                  <Typography>\n                    Updating stock count for {stockName}...\n                  </Typography>\n                )}\n\n                {/* Error message */}\n                {error && <ErrorAlert body=\"An error occurred.\" />}\n\n                {/* Action buttons */}\n                {!loading && (\n                  <Container className={classes.actions}>\n                    {/* Submit button */}\n                    {!error && (\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        className={classes.button}\n                      >\n                        Save new amount\n                      </Button>\n                    )}\n\n                    {/* Close modal button */}\n                    <Button\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      className={classes.closeButton}\n                      onClick={() => {\n                        // Set timer so buttons don't reappear during\n                        // fade out animation\n                        setTimeout(() => {\n                          setError(false);\n                          setLoading(false);\n                        }, 120);\n\n                        handleClose();\n                      }}\n                    >\n                      Close\n                    </Button>\n                  </Container>\n                )}\n              </>\n            )}\n          </Formik>\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n}\n\n// Schema for updating count\nconst amountSchema = Yup.object({\n  newCount: Yup.number().integer().moreThan(-1).required(),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n  },\n  button: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    width: '100%',\n    marginBottom: 5,\n  },\n  closeButton: {\n    width: '100%',\n  },\n  form: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default StockModal;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Card component for displaying basic stock information\n * @param {{ \n *   stockItem: Object, \n *   languageTag: String, \n *   hasLanguage: Boolean, \n *   handleShow: Function, \n *   disableClick: Boolean, \n *   visibleStockCount: Number, \n *   showEnglishOnly: Boolean \n * }}\n */\nfunction StockInfo({\n  stockItem,\n  languageTag,\n  hasLanguage,\n  handleShow,\n  disableClick = false,\n  visibleStockCount = stockItem.count,\n  showEnglishOnly,\n  style,\n}) {\n  /**\n   * Gets a String representing an item's timestamp\n   * @param {Object} stockItem\n   */\n  function getItemDateString(stockItem) {\n    let seconds = stockItem.timestamp._seconds;\n    // Date constructor takes in milliseconds\n    return new Date(seconds * 1000).toDateString().substr(3);\n  }\n\n  const classes = useStyles();\n  return (\n    <Card\n      className={classes.card}\n      onClick={disableClick ? null : handleShow}\n      style={style}\n    >\n      {/* Action area makes entire component focusable */}\n      <CardActionArea\n        className={classes.cardAction}\n        disabled={disableClick}\n        disableRipple\n      >\n        <CardContent>\n          {/* Top content of card */}\n          <Box className={classes.topContent}>\n            {/* Name and translation (left) */}\n            <Box className={classes.nameContainer}>\n              {/* Translated name */}\n              <Typography variant=\"h4\" className={classes.name}>\n                {showEnglishOnly || !hasLanguage\n                  ? stockItem.name\n                  : stockItem.translations[languageTag]}\n              </Typography>\n\n              {/* English translation, if necessary */}\n              <Typography variant=\"h5\" className={classes.subname}>\n                {showEnglishOnly || !hasLanguage ? '' : stockItem.name}\n              </Typography>\n\n              {/* No translation alert */}\n              {/* If translated name is required but not present */}\n              {!showEnglishOnly && !hasLanguage && (\n                <Chip\n                  className={classes.noTranslation}\n                  size=\"small\"\n                  color=\"secondary\"\n                  label={'Translation unavailable'}\n                />\n              )}\n            </Box>\n\n            {/* Count (right) */}\n            <Box className={classes.countContainer}>\n              <Typography className={classes.countHeader}>Count</Typography>\n              <Typography className={classes.count}>\n                {visibleStockCount}\n              </Typography>\n            </Box>\n          </Box>\n\n          {/* Bottom content */}\n          <Box className={classes.bottomContent}>\n            {/* Date */}\n            <Typography className={classes.date}>\n              Updated:{' '}\n              {stockItem.timestamp !== undefined\n                ? getItemDateString(stockItem)\n                : 'Unavailable'}\n            </Typography>\n\n            {/* Out of stock alert */}\n            {stockItem.count <= 0 && (\n              <Chip size=\"small\" color=\"secondary\" label={'Out of stock'} />\n            )}\n          </Box>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(1),\n    borderRadius: '30px',\n    maxWidth: '100vw',\n  },\n  cardAction: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    [theme.breakpoints.only('sm')]: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(0),\n    },\n  },\n  topContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  bottomContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  },\n  nameContainer: {},\n  name: {\n    fontWeight: 'bold',\n    fontSize: '25px',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '19px',\n    },\n  },\n  noTranslation: {\n    marginTop: 5,\n  },\n  subname: {\n    marginTop: -8,\n    [theme.breakpoints.down('md')]: {\n      fontSize: '18px',\n      marginTop: -4,\n    },\n  },\n  date: {\n    color: 'gray',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '12px',\n    },\n  },\n  countContainer: {},\n  countHeader: {\n    textAlign: 'right',\n  },\n  count: {\n    marginTop: -10,\n    fontWeight: 'bold',\n    fontSize: '40px',\n    textAlign: 'right',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '27px',\n    },\n  },\n  button: {\n    alignSelf: 'center',\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n  },\n}));\n\nexport default StockInfo;\n","import { useState, useEffect } from 'react';\n\n/**\n * Checks whether given stock item contains a translation\n * @param {String} languageTag Tag (`en`, `es`, etc.) specifying language of translation\n * @param {Object} stockItem single stock item from API\n */\nfunction useLanguage(languageTag, stockItem) {\n  const [hasLanguage, setHasLanguage] = useState(false);\n\n  // Determine whether stock item has translation in specified language\n  useEffect(() => {\n    // Check that translations are present\n    const translationsLoaded = Boolean(stockItem.translations);\n\n    // Check if translation in specified language is present\n    setHasLanguage(\n      translationsLoaded && stockItem.translations[languageTag] !== undefined\n    );\n  }, [languageTag, stockItem]);\n\n  return hasLanguage;\n}\n\nexport default useLanguage;\n","import React, { useState } from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport StockModal from './StockModal';\nimport StockInfo from './StockInfo';\nimport useLanguage from '../hooks/useLanguage';\n\n/**\n * Card component that displays a stock item and allows\n * for editing its amount through a modal popup\n */\nfunction StockCard({ stockItem, getStock, languageTag = 'en' }) {\n  const [showAmountModal, setShowAmountModal] = useState(false);\n  const hasLanguage = useLanguage(languageTag, stockItem);\n\n  // Handlers for showing/closing modal when editing item amount\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  return (\n    <>\n      <Fade in={true} exit={true} enter={true}>\n        <StockInfo\n          stockItem={stockItem}\n          languageTag={languageTag}\n          hasLanguage={hasLanguage}\n          handleShow={handleShow}\n          showEnglishOnly={languageTag === 'en'}\n        />\n      </Fade>\n\n      {/* Popup modal for editing stock count */}\n      <StockModal\n        show={showAmountModal}\n        handleClose={handleClose}\n        getStock={getStock}\n        stockName={\n          hasLanguage ? stockItem.translations[languageTag] : stockItem.name\n        }\n        stockId={stockItem._id}\n        stockCount={stockItem.count}\n      />\n    </>\n  );\n}\n\nexport default StockCard;\n","import React from 'react';\nimport { MenuItem, Menu, Button, makeStyles } from '@material-ui/core';\n\n/**\n * Menu to select language when viewing Stock\n * @param {{\n *   languages: Array<{ tag: String, locale: String }>,\n *   currentLanguage: { tag: String, locale: String },\n *   setLanguage: Function,\n *   isError: Error | Boolean\n * }}\n */\nfunction LanguageMenu({\n  languages = [],\n  currentLanguage,\n  setLanguage,\n  isError = false,\n}) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  /** Toggler for opening/closing menu */\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  /** Handler for selecting a new language */\n  const handleMenuItemClick = (event, index) => {\n    const locale = event.currentTarget.textContent;\n    const selectedLanguage = languages.find((lang) => lang.locale === locale);\n    setLanguage(selectedLanguage);\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  };\n\n  /** Closes menu */\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      {/* Button to toggle menu */}\n      <Button\n        variant=\"contained\"\n        onClick={handleClickListItem}\n        className={classes.toggle}\n        size=\"small\"\n      >\n        {currentLanguage.locale}\n      </Button>\n\n      {/* Language menu */}\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {languages.map((lang, index) => (\n          <MenuItem\n            key={lang.tag}\n            selected={index === selectedIndex}\n            onClick={(event) => handleMenuItemClick(event, index)}\n            className={classes.menuItem}\n          >\n            {lang.locale}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  menuItem: {\n    textAlign: 'center',\n  },\n  toggle: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    width: '100%',\n    marginTop: 5,\n    marginBottom: 5,\n  }\n}));\n\nexport default LanguageMenu;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Search from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core';\nimport LanguageMenu from '../components/LanguageMenu';\n\n/**\n * Search bar when displaying stock items\n * - Filters stock by name\n * - Changes language through dropdown\n * - Refreshes stock\n */\nfunction SearchBar({\n  stock,\n  getFilteredStockItems,\n  setNameQuery,\n  getStock,\n  LANGUAGES,\n  language,\n  setLanguage,\n  error,\n}) {\n  const classes = useStyles();\n  return (\n    <Paper elevation={1} className={classes.searchPaper}>\n      <Box display=\"flex\" alignItems=\"center\">\n        {/* Search bar */}\n        <TextField\n          className={classes.search}\n          type=\"search\"\n          id=\"searchbar\"\n          label={`Showing ${getFilteredStockItems().length} of ${\n            stock.length\n          } items`}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            ),\n          }}\n          onChange={(event) => setNameQuery(event.target.value.toLowerCase())}\n        />\n\n        {/* Refresh stock button */}\n        <IconButton size=\"medium\" color=\"primary\" onClick={getStock}>\n          <RefreshIcon />\n        </IconButton>\n\n        {/* Language menu */}\n        <LanguageMenu\n          languages={LANGUAGES}\n          currentLanguage={language}\n          setLanguage={setLanguage}\n          isError={error}\n        />\n      </Box>\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  searchPaper: {\n    margin: 5,\n    padding: theme.spacing(2),\n  },\n  search: {\n    width: '95%',\n  },\n}));\n\nexport default SearchBar;\n","const LANGUAGES = [\n  { tag: 'en', locale: 'English' },\n  { tag: 'zh-CN', locale: 'Chinese (Simplified)' },\n  { tag: 'es', locale: 'Spanish' },\n  { tag: 'fr', locale: 'French' },\n  { tag: 'de', locale: 'German' },\n];\n\nexport default LANGUAGES;\n","import { useEffect, useState } from 'react';\nimport { fetchStock } from '../api/Stock';\nimport { auth } from '../firebase';\n\n/**\n * Handles state of fetching stock items from API\n * @return {[Array, Boolean, Error, Function]}\n */\nfunction useStock() {\n  const [stock, setStock] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  /**\n   * Fetches stock from API and stores in state\n   * @param {Number} timeout ms to wait before fetching stock\n   */\n  function getStock(timeout = 0) {\n    // Set stock empty to begin loading spinner\n    setStock([]);\n    setError(null);\n    setLoading(true);\n\n    // Fetch stock after designated time\n    setTimeout(() => {\n      fetchStock(auth.currentUser.uid)\n        .then((res) => {\n          setStock(res.data);\n          setLoading(false);\n        })\n        .catch((e) => {\n          setError(e);\n          setLoading(false);\n        });\n    }, timeout);\n  }\n\n  /**\n   * Fetch stock as soon as page is rendered, if user is signed in\n   */\n  useEffect(() => {\n    if (Boolean(auth.currentUser)) {\n      getStock();\n    }\n  }, []);\n\n  // Return state of stock\n  return [stock, loading, error, getStock];\n}\n\nexport default useStock;","import { useState } from 'react';\n\n/**\n * Contains logic for searching stock items by English and translated names\n * @param {Array<{ name: String, translations: Object }>} stock list of stock items\n * @param {String} languageTag language tag, e.g. `en`, `es`, `zh-CN`, etc.\n */\nfunction useNameSearch(stock, languageTag) {\n  const [nameQuery, setNameQuery] = useState('');\n\n  /**\n   * Returns filtered stock array based on search queries\n   * Name query: allows if EITHER English or translated name includes query\n   * @return {Array<{ name: String, translations: Object }>} stock list of stock items\n   * \n   */\n  function getFilteredStockItems() {\n    return stock.filter((item) => {\n      // Check if query is included in English name\n      const inEnglishName = item.name.toLowerCase().includes(nameQuery);\n\n      let inTranslatedName = false;\n\n      // Check first if translations have loaded\n      let translations = item.translations;\n      if (Boolean(translations) && translations[languageTag] !== undefined) {\n        // Check if query is included in translated name\n        inTranslatedName = item.translations[languageTag]\n          .toLowerCase()\n          .includes(nameQuery);\n      }\n      return inEnglishName || inTranslatedName;\n    });\n  }\n\n  return [setNameQuery, getFilteredStockItems];\n}\n\nexport default useNameSearch;\n","import React, { useState } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { createStockItem } from '../api/Stock';\nimport { auth } from '../firebase';\nimport { makeStyles } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n/**\n * Form component that handles creation of new stock items\n */\nfunction StockInput({ getStock, defaultExpanded = false }) {\n  const [loading, setLoading] = useState(false);\n  /**\n   * Handles sending new stock item requests to API\n   * @param {Object} values { name, count } from form\n   */\n  async function onSubmit(values) {\n    setLoading(true);\n\n    // Create item with user's id\n    const item = {\n      name: values.name,\n      count: parseInt(values.count),\n      pantry: auth.currentUser.uid,\n    };\n\n    // Send request to API and stop loading once promise is resolved\n    await createStockItem(item);\n\n    setLoading(false);\n    getStock(500);\n  }\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.container}>\n      <Accordion defaultExpanded={defaultExpanded}>\n        {/* Accordion toggle area */}\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"stock-input-content\"\n          id=\"stock-input-header\"\n        >\n          <Typography>Insert a stock item</Typography>\n        </AccordionSummary>\n\n        {/* Accordion expandable area */}\n        <AccordionDetails className={classes.details}>\n          <Formik\n            validationSchema={itemSchema}\n            onSubmit={onSubmit}\n            initialValues={{\n              name: '',\n              count: 1,\n            }}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              handleReset,\n              isSubmitting,\n              values,\n              touched,\n              isValid,\n              errors,\n            }) => (\n              <>\n                {/* Item name text field */}\n                <TextField\n                  id=\"name\"\n                  label=\"Enter new item name\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.name ? errors.name : ''}\n                  error={touched.name && Boolean(errors.name)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n\n                {/* Item count text field */}\n                <TextField\n                  id=\"count\"\n                  label=\"Enter new item count\"\n                  value={values.count}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.count ? errors.count : ''}\n                  error={touched.count && Boolean(errors.count)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n\n                {/* Form buttons */}\n                <Container className={classes.actions}>\n                  {/* Submit button */}\n                  <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    disabled={loading || isSubmitting}\n                    className={classes.button}\n                    onClick={handleSubmit}\n                  >\n                    {isSubmitting ? 'Adding...' : 'Add item'}\n                  </Button>\n\n                  {/* Clear button */}\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    onClick={handleReset}\n                  >\n                    Clear\n                  </Button>\n                </Container>\n              </>\n            )}\n          </Formik>\n        </AccordionDetails>\n      </Accordion>\n    </Container>\n  );\n}\n\n// Schema for new stock item\nconst itemSchema = Yup.object({\n  name: Yup.string().required(),\n  count: Yup.number().integer().moreThan(-1).required(),\n});\n\n// Styling\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  card: {\n    width: '100%',\n    marginTop: 5,\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  actions: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingBottom: 0,\n  },\n  button: {\n    backgroundColor: '#16AB8D',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default StockInput;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n/** Material UI imports */\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\n\n/** Component imports */\nimport ErrorAlert from '../components/ErrorAlert';\nimport Loading from '../components/Loading';\nimport StockCard from '../components/StockCard';\nimport SearchBar from '../components/SearchBar';\n\n/** Constants, Firebase, API */\nimport LANGUAGES from '../constants/Languages';\nimport { LANDING } from '../constants/Routes';\nimport { auth } from '../firebase';\n\n/** Custom hooks */\nimport useStock from '../hooks/useStock';\nimport useNameSearch from '../hooks/useNameSearch';\nimport StockInput from '../components/StockInput';\n\n/**\n * Page displaying the stock of food pantry with options for language\n */\nfunction Stock() {\n  const [stock, loading, error, getStock] = useStock();\n  const [language, setLanguage] = useState(LANGUAGES[0]);\n  const [setNameQuery, getFilteredStockItems] = useNameSearch(\n    stock,\n    language.tag\n  );\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('md'));\n  const history = useHistory();\n\n  /**\n   * Fetch stock as soon as page is rendered, if user is signed in\n   */\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      history.push(LANDING);\n    }\n  }, [history]);\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h1\" className={classes.title}>\n        Stock Dashboard\n      </Typography>\n\n      {/* Two column desktop layout, one column mobile layout */}\n      <Grid container spacing={isMobile ? 0 : 2}>\n        {/* Left column */}\n        <Grid item xs={12} md={4}>\n          {/* On mobile: hide options in accordion */}\n          {isMobile && <StockInput getStock={getStock} />}\n\n          {/* On desktop: keep options bar open */}\n          {!isMobile && (\n            <Paper elevation={2} className={classes.column}>\n              <Typography variant=\"h5\" className={classes.subheading}>\n                Options\n              </Typography>\n              <StockInput getStock={getStock} defaultExpanded={true} />\n            </Paper>\n          )}\n        </Grid>\n\n        {/* Right column */}\n        <Grid item xs={12} md={8}>\n          {/* Search bar */}\n          <SearchBar\n            LANGUAGES={LANGUAGES}\n            stock={stock}\n            getFilteredStockItems={getFilteredStockItems}\n            error={error}\n            getStock={getStock}\n            language={language}\n            setLanguage={setLanguage}\n            setNameQuery={setNameQuery}\n          />\n\n          {/* Stock items */}\n          {stock &&\n            getFilteredStockItems().map((item) => (\n              <StockCard\n                stockItem={item}\n                getStock={getStock}\n                // Key of English name is always 'name'\n                languageTag={language.tag}\n                key={item.name}\n              />\n            ))}\n\n          {/* Alert when no stock is found */}\n          {!loading && !error && stock.length === 0 && (\n            <ErrorAlert\n              severity=\"info\"\n              body=\"No stock items found. Insert one in the Options menu!\"\n            />\n          )}\n\n          {/* Loading spinner */}\n          {loading && <Loading />}\n\n          {/* Error alert */}\n          {error && (\n            <ErrorAlert\n              heading=\"Error\"\n              body={`An error occurred while trying to get the stock. ${error}`}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n    flexGrow: 1,\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: 2,\n      paddingRight: 2,\n    },\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: theme.typography.h3.fontSize,\n    [theme.breakpoints.down('md')]: {\n      fontSize: theme.typography.h4.fontSize,\n    },\n    marginBottom: theme.spacing(2),\n  },\n  subheading: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n  },\n  column: {\n    padding: theme.spacing(2),\n  },\n  searchPaper: {\n    margin: 5,\n    padding: theme.spacing(2),\n  },\n  search: {\n    width: '95%',\n  },\n  details: {\n    display: 'block',\n  },\n  info: {\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '10px',\n    },\n  },\n}));\n\nexport default Stock;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Component that wraps children in accordion\n */\nfunction AccordionWrapper({ summary, children, usePrimary = false }) {\n  const classes = useStyles();\n  return (\n    <Accordion\n      className={clsx(classes.accordion, usePrimary && classes.primary)}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"stock-input-content\"\n        id=\"stock-input-header\"\n      >\n        <Typography>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.details}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  accordion: {\n    width: '100%',\n  },\n  primary: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n  },\n  details: {\n    display: 'block',\n  },\n}));\n\nexport default AccordionWrapper;\n","import React, { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport Modal from '@material-ui/core/Modal';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n/**\n * Allows user to select how much of a stock item to request\n */\nfunction OrderModal({\n  show,\n  handleClose,\n  stockId,\n  stockName,\n  stockCount,\n  onRequest,\n  defaultAmount = 1,\n}) {\n  const [selectedAmount, setSelectedAmount] = useState(defaultAmount);\n\n  /** Decreases selected amount by 1 */\n  function handleDecrease() {\n    if (selectedAmount > 1) setSelectedAmount(selectedAmount - 1);\n  }\n\n  /** Increases selected amount by 1 */\n  function handleIncrease() {\n    if (selectedAmount < stockCount) setSelectedAmount(selectedAmount + 1);\n  }\n\n  /**\n   * Assigns new selected amount based on text field input from `onChange`\n   */\n  function changeSelectedAmount(event) {\n    const amount = event.currentTarget.valueAsNumber;\n    if (isNaN(Number(amount)) || amount < 1) {\n      setSelectedAmount(1);\n    } else if (amount > stockCount) {\n      setSelectedAmount(stockCount);\n    } else {\n      setSelectedAmount(amount);\n    }\n  }\n\n  /**\n   * Adds requested item to order list\n   */\n  function submitRequest() {\n    const requestedItem = {\n      id: stockId,\n      name: stockName,\n      requestedCount: selectedAmount,\n      countAfterRequest: stockCount - selectedAmount,\n    };\n\n    onRequest(requestedItem);\n    handleClose();\n  }\n\n  // Wrapper for bolding text within a component\n  const Bold = ({ children }) => (\n    <font style={{ fontWeight: 'bold' }}>{children}</font>\n  );\n\n  const classes = useStyles();\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          {/* Heading */}\n          <Typography variant=\"h5\">\n            Select requested amount for: <Bold>{stockName}</Bold>\n          </Typography>\n          <Divider />\n\n          {/* Counts */}\n          <Grid container spacing={0}>\n            <Grid item xs={12} md={6}>\n              <Typography>\n                Current amount: <Bold>{stockCount}</Bold>\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Typography>\n                Amount after request: <Bold>{stockCount - selectedAmount}</Bold>\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {/* Stock count selection */}\n          <ButtonGroup fullWidth className={classes.buttonGroup}>\n            {/* Decrease */}\n            <IconButton\n              onClick={handleDecrease}\n              className={classes.incrementor}\n            >\n              <RemoveIcon />\n            </IconButton>\n\n            {/* Enter requested amount */}\n            <TextField\n              type=\"number\"\n              placeholder={selectedAmount}\n              value={selectedAmount}\n              onChange={changeSelectedAmount}\n              className={classes.textField}\n            />\n\n            {/* Increase */}\n            <IconButton\n              onClick={handleIncrease}\n              className={classes.incrementor}\n            >\n              <AddIcon />\n            </IconButton>\n          </ButtonGroup>\n\n          {/* Request button */}\n          <Button className={classes.button} onClick={submitRequest}>\n            Request amount\n          </Button>\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n    minWidth: '20vw',\n  },\n  button: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  buttonGroup: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  closeButton: {\n    width: '100%',\n  },\n  form: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  incrementor: {\n    width: '25%',\n  },\n  textField: {\n    maxWidth: '50%',\n  },\n}));\n\nexport default OrderModal;\n","import React, { useState } from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport OrderModal from './OrderModal';\nimport StockInfo from './StockInfo';\nimport useLanguage from '../hooks/useLanguage';\n\n/**\n * Stock item card on order screen\n */\nfunction StockOrderCard({\n  stockItem,\n  getStock,\n  languageTag = 'en',\n  onRequest,\n  requestedCount = 0,\n}) {\n  const [showOrderModal, setShowAmountModal] = useState(false);\n  const hasLanguage = useLanguage(languageTag, stockItem);\n\n  // Handlers for showing/closing modal when ordering item\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  /**\n   * If requested, shows stock count before and after order request\n   */\n  function getVisibleStockCount() {\n    return requestedCount\n      ? `${stockItem.count} → ${stockItem.count - requestedCount}`\n      : stockItem.count;\n  }\n\n  return (\n    <>\n      <Fade in exit>\n        <StockInfo\n          stockItem={stockItem}\n          languageTag={languageTag}\n          hasLanguage={hasLanguage}\n          handleShow={handleShow}\n          showEnglishOnly={languageTag === 'en'}\n          visibleStockCount={getVisibleStockCount()}\n          disableClick={stockItem.count <= 0}\n        />\n      </Fade>\n\n      <OrderModal\n        show={showOrderModal}\n        handleClose={handleClose}\n        stockName={stockItem.name}\n        stockId={stockItem._id}\n        stockCount={stockItem.count}\n        onRequest={onRequest}\n      />\n    </>\n  );\n}\n\nexport default StockOrderCard;\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Fade from '@material-ui/core/Fade';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\nimport OrderModal from './OrderModal';\n\n/**\n * Card displaying a requested stock item on Order Stock page\n */\nfunction RequestedItemCard({\n  requestedItem,\n  onRequest,\n  removeRequestedItem,\n  showActions = true,\n}) {\n  const { id, name, requestedCount, countAfterRequest } = requestedItem;\n  const [showOrderModal, setShowAmountModal] = useState(false);\n\n  // Handlers for showing/closing modal when ordering item\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  // Removes requested item from list using callback\n  function removeItem() {\n    removeRequestedItem(requestedItem);\n  }\n\n  const classes = useStyles();\n  return (\n    <>\n      <Fade in>\n        <Card className={classes.card} variant=\"outlined\" raised>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            {/* Item name and count */}\n            <CardContent display=\"flex\">\n              <Typography>\n                {name}:{' '}\n                <font style={{ fontWeight: 'bold' }}>{requestedCount}</font>\n              </Typography>\n            </CardContent>\n\n            {/* Edit count and remove item */}\n            {showActions && (\n              <CardActions>\n                <IconButton color=\"primary\" onClick={handleShow}>\n                  <EditIcon />\n                </IconButton>\n                <IconButton color=\"secondary\" onClick={removeItem}>\n                  <CancelIcon />\n                </IconButton>\n              </CardActions>\n            )}\n          </Box>\n        </Card>\n      </Fade>\n\n      <OrderModal\n        show={showOrderModal}\n        handleClose={handleClose}\n        stockName={name}\n        stockId={id}\n        stockCount={countAfterRequest + requestedCount}\n        onRequest={onRequest}\n        defaultAmount={requestedCount}\n      />\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default RequestedItemCard;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LANDING } from '../constants/Routes';\n\n/**\n * Dialog to let volunteer and patron review order before submitting\n */\nfunction ReviewDialog({\n  show,\n  handleClose,\n  submitRequest,\n  requestedStockItems,\n  personInfo,\n}) {\n  const [additionalNotes, setAdditionalNotes] = useState('');\n  const [requestLoading, setRequestLoading] = useState(false);\n  const [requestSuccess, setRequestSuccess] = useState(null);\n  const history = useHistory();\n  const { firstName, lastName, adults, children, zipcode } = personInfo;\n\n  async function submitOrder() {\n    setRequestLoading(true);\n    const success = await submitRequest(additionalNotes);\n\n    setRequestLoading(false);\n    setRequestSuccess(success);\n  }\n\n  function finishOrder() {\n    history.push(LANDING);\n  }\n\n  function getSubmitButtonText() {\n    if (requestLoading) {\n      return 'Submitting...';\n    } else if (requestSuccess) {\n      return 'Go to home page';\n    } else {\n      return 'Submit request';\n    }\n  }\n\n  const title = requestSuccess ? 'Order requested!' : 'Review Order';\n  const classes = useStyles();\n  return (\n    <Dialog\n      open={show}\n      onClose={requestSuccess ? finishOrder : handleClose}\n      scroll=\"paper\"\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\"\n      className={classes.modal}\n      fullWidth\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h3\" className={classes.title}>\n            {title}\n          </Typography>\n          <Divider className={classes.divider} />\n\n          {/* Hide items after request is received */}\n          {!requestSuccess && (\n            <Box>\n              {/* Requested items */}\n              <Typography variant=\"h4\" className={classes.subtitle}>\n                Requested items:\n              </Typography>\n              <List dense>\n                {requestedStockItems.map((r) => (\n                  <ListItem key={r.name}>\n                    <ListItemText primary={`${r.name}: ${r.requestedCount}`} />\n                  </ListItem>\n                ))}\n              </List>\n\n              {/* Patron info */}\n              <Typography variant=\"h4\" className={classes.subtitle}>\n                Patron info:\n              </Typography>\n              <List dense>\n                <ListItem>\n                  <ListItemText primary={firstName} secondary=\"First name\" />\n                </ListItem>\n                <ListItem>\n                  <ListItemText primary={lastName} secondary=\"Last name\" />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary={adults}\n                    secondary=\"# of adults in household\"\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary={children}\n                    secondary=\"# of children in household\"\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemText primary={zipcode} secondary=\"Zipcode\" />\n                </ListItem>\n              </List>\n\n              {/* Space for additional notes */}\n              <TextField\n                variant=\"filled\"\n                label=\"Additional notes\"\n                className={classes.additionalNotes}\n                onChange={(e) => setAdditionalNotes(e.currentTarget.value)}\n                multiline\n              />\n            </Box>\n          )}\n\n          {/* Submit button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={requestSuccess ? finishOrder : submitOrder}\n            disabled={requestLoading}\n            fullWidth\n          >\n            {getSubmitButtonText()}\n          </Button>\n        </Paper>\n      </Fade>\n    </Dialog>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  additionalNotes: {\n    marginBottom: theme.spacing(3),\n    width: '100%',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n    minWidth: '30vw',\n  },\n  title: {\n    fontSize: theme.typography.h4.fontSize,\n    textAlign: 'center',\n  },\n  divider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  subtitle: {\n    fontSize: 20,\n  },\n}));\n\nexport default ReviewDialog;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n/** Material UI Imports */\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\n\n/** Component imports */\nimport AccordionWrapper from '../components/AccordionWrapper';\nimport ErrorAlert from '../components/ErrorAlert';\nimport Loading from '../components/Loading';\nimport StockOrderCard from '../components/StockOrderCard';\nimport SearchBar from '../components/SearchBar';\nimport RequestedItemCard from '../components/RequestedItemCard';\nimport ReviewDialog from '../components/ReviewDialog';\n\n/** Constants, API, Firebase */\nimport LANGUAGES from '../constants/Languages';\nimport { LANDING, ORDER_FORM } from '../constants/Routes';\nimport { ORDER_STEPS } from '../constants/Order';\nimport { addPersonInfo } from '../api/People';\nimport { updateStockCount } from '../api/Stock';\nimport { auth } from '../firebase';\n\n/** Custom hooks */\nimport useStock from '../hooks/useStock';\nimport useNameSearch from '../hooks/useNameSearch';\n\n/**\n * Allows user to order stock items only after they've filled out form\n */\nfunction OrderStock() {\n  const history = useHistory();\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('md'));\n  const location = useLocation();\n  const fromForm = location.state !== undefined;\n\n  const [stock, loading, error, getStock] = useStock();\n  const [language, setLanguage] = useState(LANGUAGES[0]);\n  const [setNameQuery, getFilteredStockItems] = useNameSearch(\n    stock,\n    language.tag\n  );\n  const [showReview, setShowReview] = useState(false);\n\n  // Patron info from order form page, kept in local storage if necessary\n  const [personInfo] = useState(\n    fromForm\n      ? location.state.personInfo\n      : retrieveFromStorage('personInfo', undefined)\n  );\n\n  // List of requested items, kept in lcoal storage if necessary\n  const [requestedStockItems, setRequestedStockItems] = useState(\n    retrieveFromStorage('requestedStockItems', [])\n  );\n\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      // Send user back to homepage if not signed in\n      history.push(LANDING);\n    } else if (!personInfo) {\n      // Send user back to form if they didn't fill it out\n      history.push(ORDER_FORM);\n    } else {\n      localStorage.setItem('personInfo', JSON.stringify(personInfo));\n    }\n  }, [fromForm, history, personInfo]);\n\n  function retrieveFromStorage(key, defaultValue) {\n    const stored = localStorage.getItem(key);\n    if (stored) {\n      return JSON.parse(stored);\n    } else {\n      return defaultValue;\n    }\n  }\n\n  /**\n   * Callback for OrderModal to add item to items list\n   * @param {{\n   *  id: String,\n   *  name: String,\n   *  requestedCount: Number,\n   *  countAfterRequest: Number }} requestedItem\n   */\n  function onRequest(requestedItem) {\n    // Check if item is already in list\n    let alreadyRequested = requestedStockItems.find(\n      (item) => item.id === requestedItem.id\n    );\n\n    let updatedRequestedItems;\n\n    if (alreadyRequested === undefined) {\n      // If item isn't in list, simply add it\n      updatedRequestedItems = requestedStockItems.concat(requestedItem);\n    } else {\n      // If item is already in list, update its values instead of adding\n      let itemIndex = requestedStockItems.indexOf(alreadyRequested);\n\n      updatedRequestedItems = [...requestedStockItems];\n\n      // Replace old values with new values\n      updatedRequestedItems[itemIndex].requestedCount =\n        requestedItem.requestedCount;\n      updatedRequestedItems[itemIndex].countAfterRequest =\n        requestedItem.countAfterRequest;\n    }\n\n    // Update state and local storage\n    setRequestedStockItems(updatedRequestedItems);\n    localStorage.setItem(\n      'requestedStockItems',\n      JSON.stringify(updatedRequestedItems)\n    );\n  }\n\n  /**\n   * Removes a requested item from list, if present\n   * @param requestedItem item in order to remove\n   */\n  function removeRequestedItem(requestedItem) {\n    const index = requestedStockItems.indexOf(requestedItem);\n    if (index > -1) {\n      const updatedRequest = [...requestedStockItems];\n      updatedRequest.splice(index, 1);\n      setRequestedStockItems(updatedRequest);\n      // TODO: update local storage\n    }\n  }\n\n  function writeRequestToNotes() {\n    let orderNotes = '';\n    requestedStockItems.forEach((item) => {\n      orderNotes += item.name + ': ' + item.requestedCount + ', ';\n    });\n    return orderNotes.slice(0, -2);\n  }\n\n  async function submitRequest(additionalNotes) {\n    // Send full person info to API\n    const requestBody = {\n      pantry: auth.currentUser.uid,\n      firstName: personInfo.firstName,\n      lastName: personInfo.lastName,\n      adults: parseInt(personInfo.adults),\n      children: parseInt(personInfo.children),\n      zipcode: personInfo.zipcode,\n      'order-notes': writeRequestToNotes(),\n      additionalNotes: additionalNotes,\n      fulfilled: false,\n    };\n\n    await addPersonInfo(requestBody);\n\n    // Send updates for each requested item to API\n    const stockUpdatePromises = requestedStockItems.map((item) => {\n      let body = {\n        pantry: auth.currentUser.uid,\n        _id: item.id,\n        newCount: item.countAfterRequest,\n      };\n\n      return updateStockCount(body);\n    });\n\n    // TODO: handle case where some update doesn't go through\n    // Make sure all updates are good\n    await Promise.all(stockUpdatePromises);\n\n    // Clear local storage\n    localStorage.removeItem('requestedStockItems');\n    localStorage.removeItem('personInfo');\n\n    return true;\n  }\n\n  /**\n   * Gets the requested count of a stock item, or 0 if not requested\n   * @param {String} itemId id of requested stock item\n   */\n  function getRequestedCount(itemId) {\n    let requestedItem = requestedStockItems.find((item) => item.id === itemId);\n    if (Boolean(requestedItem)) {\n      return requestedItem.requestedCount;\n    } else {\n      return 0;\n    }\n  }\n\n  const classes = useStyles();\n  const orderTitle = `Review order (${requestedStockItems.length})`;\n  const buttonText =\n    requestedStockItems.length > 0 ? 'Review order' : 'Select items';\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h1\" className={classes.title}>\n        Select order for {personInfo.firstName} {personInfo.lastName}\n      </Typography>\n\n      <Stepper\n        activeStep={showReview ? 2 : 1}\n        className={classes.stepper}\n        alternativeLabel\n      >\n        {ORDER_STEPS.map((step) => (\n          <Step key={step}>\n            <StepLabel>{step}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {/* Two column desktop layout, one column mobile layout */}\n      <Grid container spacing={isMobile ? 1 : 2}>\n        {/* Left column */}\n        <Grid item xs={12} md={5}>\n          {/* On mobile: hide order in accordion */}\n          {isMobile && (\n            <AccordionWrapper\n              summary={\n                <Badge\n                  badgeContent={requestedStockItems.length}\n                  color=\"secondary\"\n                >\n                  {'Review Order Here'}\n                </Badge>\n              }\n              usePrimary={requestedStockItems.length > 0}\n            >\n              {/* Requested items */}\n              {requestedStockItems.map((r) => (\n                <RequestedItemCard\n                  requestedItem={r}\n                  onRequest={onRequest}\n                  removeRequestedItem={removeRequestedItem}\n                  key={r.id}\n                />\n              ))}\n\n              {/* Submit button */}\n              <Button\n                fullWidth\n                onClick={() => setShowReview(true)}\n                disabled={requestedStockItems.length === 0}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                {buttonText}\n              </Button>\n            </AccordionWrapper>\n          )}\n\n          {/* On desktop: keep order open */}\n          {!isMobile && (\n            <Paper elevation={2} className={classes.column}>\n              {/* Title */}\n              <Typography variant=\"h5\" className={classes.subheading}>\n                {orderTitle}\n              </Typography>\n\n              {/* Requested items */}\n              {requestedStockItems.map((r) => (\n                <RequestedItemCard\n                  requestedItem={r}\n                  onRequest={onRequest}\n                  removeRequestedItem={removeRequestedItem}\n                  key={r.id}\n                />\n              ))}\n\n              {/* Submit button */}\n              <Button\n                fullWidth\n                onClick={() => setShowReview(true)}\n                disabled={requestedStockItems.length === 0}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                {buttonText}\n              </Button>\n            </Paper>\n          )}\n        </Grid>\n\n        {/* Right column */}\n        <Grid item xs={12} md={7}>\n          {/* Search bar */}\n          <SearchBar\n            LANGUAGES={LANGUAGES}\n            stock={stock}\n            getFilteredStockItems={getFilteredStockItems}\n            error={error}\n            getStock={getStock}\n            language={language}\n            setLanguage={setLanguage}\n            setNameQuery={setNameQuery}\n          />\n\n          {/* Stock items */}\n          {stock &&\n            personInfo &&\n            getFilteredStockItems().map((item) => (\n              <StockOrderCard\n                stockItem={item}\n                getStock={getStock}\n                languageTag={language.tag}\n                key={item._id}\n                onRequest={onRequest}\n                requestedCount={getRequestedCount(item._id)}\n              />\n            ))}\n\n          {/* Alert when no stock is found */}\n          {!loading && !error && stock.length === 0 && (\n            <ErrorAlert\n              severity=\"info\"\n              body=\"No stock items found. Insert one in the Options menu!\"\n            />\n          )}\n\n          {/* Loading spinner */}\n          {loading && <Loading />}\n\n          {/* Error alert */}\n          {error && (\n            <ErrorAlert\n              heading=\"Error\"\n              body={`An error occurred while trying to get the stock. ${error}`}\n            />\n          )}\n        </Grid>\n      </Grid>\n\n      {/* Review popup */}\n      <ReviewDialog\n        show={showReview}\n        handleClose={() => {\n          setShowReview(false);\n        }}\n        requestedStockItems={requestedStockItems}\n        personInfo={personInfo}\n        submitRequest={submitRequest}\n      />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: 2,\n      paddingRight: 2,\n    },\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: theme.typography.h3.fontSize,\n    [theme.breakpoints.down('md')]: {\n      fontSize: theme.typography.h4.fontSize,\n    },\n    marginBottom: theme.spacing(2),\n  },\n  subheading: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n  },\n  column: {\n    padding: theme.spacing(2),\n  },\n  searchPaper: {\n    margin: 5,\n    padding: theme.spacing(2),\n  },\n  search: {\n    width: '95%',\n  },\n  details: {\n    display: 'block',\n  },\n  info: {\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '10px',\n    },\n  },\n  stepper: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: theme.breakpoints.values.sm,\n    [theme.breakpoints.down('md')]: {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n  },\n}));\n\nexport default OrderStock;\n","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport { Fade, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Confirmation modal when fulfilling a person's order\n */\nfunction FulfillModal({ person, personId, show, handleClose, fulfillPerson }) {\n  /**\n   * Handles confirmation of fulfilling a person's order\n   */\n  function handleConfirm() {\n    handleClose(); //closes first so that repeat requests are not sent\n    fulfillPerson(personId);\n  }\n\n  const classes = useStyles();\n  return (\n    <Modal\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      aria-describedby={\"modal-to-fulfill \" + person.firstName}\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      centered\n      className={classes.modal}\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <h3>Confirm fulfillment</h3>\n          <h5>\n            Are you sure that {person.firstName}'s order is correct and has been\n            fulfilled?\n          </h5>\n          <p>{person['order-notes']}</p>\n          <p>{person['additionalNotes']}</p>\n\n          <Button \n            color=\"secondary\" \n            variant=\"contained\"\n            className={classes.close} \n            onClick={handleClose}>\n            Close\n          </Button>\n          <Button \n            onClick={handleConfirm}\n            className={classes.confirm}>\n            Confirm fulfillment\n          </Button>\n        </Paper> \n      </Fade>\n    </Modal>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  confirm:{\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    '&:hover': {\n      backgroundColor: '#119178',\n    }, \n    borderRadius: '200px'\n  },\n  close:{\n    borderRadius: '200px',\n    margin: '5px'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n  },\n\n}));\n\n\nexport default FulfillModal;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { CardActions } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport FulfillModal from './FulfillModal';\n\n/**\n * Displays:\n * - person's name\n * - order notes\n * - button that sends a socket emit to backend that\n *   sets fulfill to true\n */\nfunction UnfulfilledOrderCard({ person, id, fulfillPerson }) {\n  const [showFulfillModal, setShowFulfillModal] = useState(false);\n\n  // Handlers for showing/closing modal when ordering item\n  const handleClose = () => setShowFulfillModal(false);\n  const handleShow = () => setShowFulfillModal(true);\n\n  const classes = useStyles();\n\n  function formatDate(date) {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    let strTime = date.toDateString() + \" \" + hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n  return (\n    <>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"h5\">\n            \n            {person['firstName']} {person['lastName']}\n          </Typography>\n          <Typography>\n            <Box textAlign=\"right\">\n              {formatDate(person['timestamp'].toDate())} \n            </Box>    \n          </Typography>\n          <Typography variant=\"body1\">\n            {person['order-notes']}\n          </Typography>\n          <Typography variant=\"body2\">\n            {person['additionalNotes']}\n          </Typography>\n          \n        </CardContent>\n        <CardActions>\n          <Button\n            onClick={handleShow}\n            className={classes.button}\n            variant=\"contained\"\n            disableElevation\n          >\n            Fulfill Order\n          </Button>\n        </CardActions>\n      </Card>\n\n      <FulfillModal\n        person={person}\n        personId={id}\n        show={showFulfillModal}\n        handleClose={handleClose}\n        fulfillPerson={fulfillPerson}\n      />\n    </>\n  );\n}\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  order: {\n    fontsize: 12,\n  },\n  additional: {\n    fontsize: 10,\n  },\n  button: {\n    borderRadius: 10,\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    marginBottom: 5,\n  },\n});\n\nexport default UnfulfilledOrderCard;\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport cart from '../images/empty-cart.svg';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    justifyContent: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  dialog: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  image: {\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    marginTop: theme.spacing(20),\n  },\n  grid: {\n    textAlign: 'center',\n  },\n}));\n\nconst Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#00c853',\n    },\n    secondary: {\n      main: '#00c853',\n    },\n    action: {\n      main: '#00c853',\n    },\n  },\n});\n\nexport default function AlertDialogSlide() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <MuiThemeProvider theme={Theme}>\n        <Dialog\n          open={open}\n          maxWidth=\"lg\"\n          keepMounted\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n          className={classes.dialog}\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">\n            {'No orders at the moment'}\n          </DialogTitle>\n          <DialogActions className={classes.button}>\n            <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </MuiThemeProvider>\n      <Grid container className={classes.grid}>\n        <Grid item lg={4} sm={4}></Grid>\n        <Grid item xs={12} lg={4} sm={4} className={classes.grid}>\n          <img alt=\"Shopping cart\" src={cart} className={classes.image} />\n        </Grid>\n        <Grid item lg={4} sm={4}></Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { updatePerson } from '../api/People';\nimport { useHistory } from 'react-router-dom';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { db, auth } from '../firebase';\nimport { LANDING } from '../constants/Routes';\nimport UnfulfilledOrderCard from '../components/UnfulfilledOrderCard';\nimport Loading from '../components/Loading';\nimport Dialog from '../components/EmptyDialog';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Page with list of people with unfulfilled orders\n */\nfunction OrderTracker() {\n  const history = useHistory();\n  const [user, userLoading, userError] = useAuthState(auth);\n  const [query, setQuery] = useState();\n\n  useEffect(() => {\n    if (!Boolean(user)) {\n      // If user is not logged in, redirect to home screen\n      history.push(LANDING);\n    } else {\n      // If user is logged in, fetch their orders\n      setQuery(\n        db\n          .collection('pantries')\n          .doc(user.uid)\n          .collection('people')\n          .where('fulfilled', '==', false)\n      );\n    }\n  }, [history, user]);\n\n  const [snapshot, snapLoading, snapError] = useCollection(query);\n\n  function fulfillOrder(id) {\n    const requestBody = {\n      pantry: user.uid,\n      _id: id,\n      fulfilled: true,\n    };\n    updatePerson(requestBody);\n  }\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      {userError && <strong>User Error: {JSON.stringify(snapError)}</strong>}\n      {userLoading && <span>User: Loading...</span>}\n      {snapError && (\n        <strong>Collection Error: {JSON.stringify(snapError)}</strong>\n      )}\n      {snapLoading && <Loading />}\n      {snapshot && snapshot.docs.length === 0 && <Dialog />}\n      {snapshot &&\n        snapshot.docs.map((doc) => (\n          <UnfulfilledOrderCard\n            person={doc.data()}\n            id={doc.id}\n            fulfillPerson={fulfillOrder}\n            key={doc._id}\n          />\n        ))}\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 110,\n  },\n}));\n\nexport default OrderTracker;\n","import React, { useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Loading from '../components/Loading';\nimport ErrorAlert from '../components/ErrorAlert';\nimport Paper from '@material-ui/core/Paper';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport {\n  auth,\n  signInWithFacebook,\n  signInWithGoogle,\n  signInWithYahoo,\n} from '../firebase';\nimport { makeStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { LANDING } from '../constants/Routes';\n\n/**\n * Sign in page for Pan-Lang\n */\nfunction SignIn() {\n  const history = useHistory();\n  const [user, loading, error] = useAuthState(auth);\n\n  useEffect(() => {\n    // Redirect user to landing page if already signed in\n    if (Boolean(user)) history.push(LANDING);\n  }, [history, user]);\n\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"md\" className={classes.page}>\n      {/* Logo */}\n      <img\n        src={require('../images/logo_nobg.png')}\n        alt=\"Pan-Lang logo\"\n        style={{ width: 120, height: 120 }}\n      />\n\n      <Typography variant=\"h2\" className={classes.title}>\n        Join Pan-Lang today.\n      </Typography>\n\n      <Paper className={classes.paper}>\n        {/* Sign in buttons */}\n        <Button className={classes.button} onClick={signInWithGoogle}>\n          Sign in with Google\n        </Button>\n        <Button className={classes.button} onClick={signInWithFacebook}>\n          Sign in with Facebook\n        </Button>\n        <Button className={classes.button} onClick={signInWithYahoo}>\n          Sign in with Yahoo\n        </Button>\n      </Paper>\n\n      {/* Loading */}\n      {loading && <Loading />}\n\n      {/* Error */}\n      {error && <ErrorAlert body=\"An error occurred.\" />}\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    marginTop: 110,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '30px',\n    },\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    padding: theme.spacing(5),\n    maxWidth: theme.breakpoints.width('sm'),\n  },\n  button: {\n    alignSelf: 'center',\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    width: '100%',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default SignIn;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Full screen component shown when loading authentication\n */\nfunction Splash({ loading = true }) {\n  const classes = useStyles();\n  return (\n    <Container className={classes.container}>\n      <img\n        src={require('../images/logo_nobg.png')}\n        alt=\"Pan-Lang logo\"\n        className={classes.logo}\n      />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: '100vh',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  logo: {\n    maxWidth: '90vw',\n  },\n}));\n\nexport default Splash;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar/';\nimport Home from './pages/Home/';\nimport About from './pages/About';\nimport Order from './pages/Order';\nimport Stock from './pages/Stock';\nimport NavDrawer from './components/NavDrawer';\nimport OrderStock from './pages/OrderStock';\nimport OrderTracker from './pages/OrderTracker';\nimport SignIn from './pages/SignIn';\nimport Splash from './components/Splash';\nimport {\n  ABOUT,\n  ORDER_FORM,\n  ORDER_TRACKER,\n  LANDING,\n  SIGN_IN,\n  STOCK,\n  ORDER_STOCK,\n} from './constants/Routes';\nimport { auth } from './firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\n/**\n * Highest level App component for routing\n */\nfunction App() {\n  const [user, loading] = useAuthState(auth);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  const toggleDrawer = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  if (loading) {\n    return <Splash loading={loading} />;\n  }\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div style={{ display: 'flex' }}>\n        {/* Navigation bar on top of screen */}\n        <Navbar\n          drawerOpen={drawerOpen}\n          toggleDrawer={toggleDrawer}\n          openDrawer={handleDrawerOpen}\n          hasUser={Boolean(user)}\n        />\n\n        {/* Navigation drawer */}\n        <NavDrawer\n          open={drawerOpen}\n          handleOpen={handleDrawerOpen}\n          handleClose={handleDrawerClose}\n        />\n\n        {/* Routes */}\n        <Switch>\n          <Route exact path={LANDING}>\n            <Home />\n          </Route>\n          <Route exact path={ABOUT}>\n            <About />\n          </Route>\n          <Route path={STOCK}>\n            <Stock />\n          </Route>\n          <Route path={ORDER_FORM}>\n            <Order />\n          </Route>\n          <Route path={ORDER_STOCK}>\n            <OrderStock />\n          </Route>\n          <Route path={ORDER_TRACKER}>\n            <OrderTracker />\n          </Route>\n          <Route path={SIGN_IN}>\n            <SignIn />\n          </Route>\n          <Route path=\"*\">\n            <h1>\n              Welcome to <font style={{ color: '#26B020' }}>Pan-Lang</font>!\n            </h1>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <React.Fragment>\n      <CssBaseline />\n      <App />\n    </React.Fragment>\n  </React.StrictMode>,\n\n \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios';\n\nexport const BASE_API_URL = 'https://us-central1-pan-lang.cloudfunctions.net/';\n\nexport default axios.create({\n  baseURL: BASE_API_URL,\n});\n"],"sourceRoot":""}