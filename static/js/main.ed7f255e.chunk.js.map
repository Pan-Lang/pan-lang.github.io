{"version":3,"sources":["images/QwertycowMoo.png","images/kgs5.png","images/renzol2.png","images/evanmm3.png","images/empty-cart.svg","images/logo_nobg.png","components/Navbar/CollapsingButton.js","components/Navbar/CollapsingMenu.js","components/Navbar/index.js","api/Client.js","api/People.js","constants/Months.js","constants/Years.js","pages/Home.js","components/AvatarCard.js","pages/About.js","pages/Order.js","api/Stock.js","components/StockModal.js","components/ErrorAlert.js","components/StockCard.js","components/StockInput.js","components/Loading.js","constants/Languages.js","pages/Stock.js","components/OrderModal.js","components/OrderCard.js","components/ConfirmationModal.js","pages/OrderStock.js","components/FulfillModal.js","components/UnfulfilledOrderCard.js","components/Dialog.js","pages/OrderTracker.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","buttonCollapse","breakpoints","up","display","CollapsingButton","children","useState","isOpen","setOpen","classes","className","IconButton","onClick","event","Boolean","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","root","position","right","buttonBar","down","link","margin","spacing","color","login","navigation","page","to","CollapsingMenu","map","nav","MenuItem","key","component","Link","Button","variant","flexGrow","grow","menuButton","marginLeft","marginRight","backgroundColor","toggleDrawer","appTitle","Navbar","trigger","useScrollTrigger","Slide","appear","direction","in","AppBar","Toolbar","src","require","alt","style","width","height","BASE_API_URL","axios","create","baseURL","item","a","Client","post","then","res","catch","e","MONTHS","MONTH_NAMES","YEARS","Home","current","Date","month","getMonth","year","getFullYear","date","setDate","Container","textAlign","marginBottom","fontWeight","borderColor","borderRadius","size","block","href","URLSearchParams","Dropdown","onChange","console","log","Toggle","indexOf","Item","onSelect","eventKey","card","paddingTop","paddingBottom","paddingLeft","paddingRight","padding","avatar","AvatarCard","name","role","github","Paper","elevation","Avatar","Typography","target","rel","p","marginTop","team","avatarGroup","flexWrap","alignItems","justifyContent","About","QwertycowMoo","kgs5","renzol2","evanmm3","maxWidth","member","orderSchema","Yup","firstName","required","lastName","adults","moreThan","zipcode","lessThan","integer","orderNotes","OrderForm","history","useHistory","validationSchema","onSubmit","personInfo","push","fromForm","initialValues","handleSubmit","handleChange","touched","handleBlur","values","errors","isValid","Form","noValidate","Group","md","controlId","Label","Control","type","placeholder","isInvalid","Feedback","flexDirection","fetchStock","get","updateStockCount","updated","put","error","amountSchema","newCount","StockModal","show","handleClose","getStock","stockId","stockName","stockCount","loading","setLoading","setError","updatedCount","updateIsSuccessful","Modal","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","ErrorAlert","heading","body","dismissible","Alert","length","Heading","StockCard","stockItem","lang","showAmountModal","setShowAmountModal","hasLanguage","setHasLanguage","useEffect","undefined","Card","as","Text","fontSize","count","timestamp","toDateString","Badge","alignSelf","_id","stockSchema","StockInput","Accordion","Collapse","createStockItem","Loading","Spinner","animation","LANGUAGES","Stock","stock","setStock","language","setLanguage","timeout","setTimeout","data","capitalize","s","charAt","toUpperCase","slice","OrderModal","onRequest","selectedAmount","setSelectedAmount","ButtonGroup","aria-label","disabled","requestedItem","requestedCount","countAfterRequest","OrderCard","isRequested","showOrderModal","ConfirmationModal","title","buttonText","OrderStock","location","useLocation","state","retrieveFromStorage","requestedStockItems","setRequestedStockItems","showConfirmation","setShowConfirmation","defaultValue","stored","localStorage","getItem","JSON","parse","updatedRequestedItems","alreadyRequested","find","concat","itemIndex","setItem","stringify","writeRequestToNotes","forEach","r","addPersonInfo","firstname","lastname","fulfilled","stockUpdatePromises","Promise","all","responses","removeItem","some","requested","FulfillModal","person","fulfillPerson","UnfulfilledOrderCard","showFulfillModal","setShowFulfillModal","button","dialog","image","grid","Theme","createMuiTheme","palette","primary","main","secondary","action","AlertDialogSlide","React","Dialog","keepMounted","aria-describedby","DialogTitle","DialogActions","Grid","container","lg","sm","xs","cart","OrderTracker","ordersList","setOrdersList","personFulfilled","socket","socketIOClient","emit","on","confirmation","disconnect","filter","order","eventHandler","personData","currentOrders","Login","pantryName","setPantryName","InputGroup","value","FormControl","App","basename","process","exact","path","Order","window","hostname","match","ReactDOM","render","StrictMode","Fragment","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ed7f255e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/QwertycowMoo.c4707b2e.png\";","module.exports = __webpack_public_path__ + \"static/media/kgs5.ed891ef2.png\";","module.exports = __webpack_public_path__ + \"static/media/renzol2.726b433f.png\";","module.exports = __webpack_public_path__ + \"static/media/evanmm3.c4869c53.png\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.302b7b48.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_nobg.484389dc.png\";","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Menu } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonCollapse: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n    margin: '10px',\r\n    boxShadow: 'none',\r\n  },\r\n}));\r\n\r\n/**\r\n * Responsive button for use in navbar\r\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\r\n */\r\nfunction CollapsingButton({ children }) {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.buttonCollapse}>\r\n      <IconButton\r\n        onClick={(event) => setOpen(Boolean(event.currentTarget))}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={isOpen}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        open={isOpen}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        {children}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollapsingButton;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MenuItem, Button } from '@material-ui/core';\r\nimport CollapsingButton from './CollapsingButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    right: 0,\r\n  },\r\n  buttonBar: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'none',\r\n    },\r\n    margin: '10px',\r\n    paddingLeft: '16px',\r\n    right: 0,\r\n    position: 'relative',\r\n    width: '100%',\r\n    background: 'transparent',\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1),\r\n    color: 'gray',\r\n  },\r\n  login: {\r\n    margin: '10px',\r\n  },\r\n}));\r\n\r\n// Pages to navigate to\r\nconst navigation = [\r\n  { page: 'About', to: '/about' },\r\n  { page: 'Order Form', to: '/order' },\r\n  { page: 'Order Tracker', to: '/order-tracker' },\r\n  { page: 'Stock', to: '/stock' },\r\n];\r\n\r\n/**\r\n * Responsive navigation menu\r\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\r\n */\r\nfunction CollapsingMenu() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Mobile */}\r\n      <CollapsingButton>\r\n        {navigation.map((nav) => (\r\n          <MenuItem key={nav.to} component={Link} to={nav.to}>\r\n            {nav.page}\r\n          </MenuItem>\r\n        ))}\r\n        <MenuItem component={Link} to=\"/login\">\r\n          Login\r\n        </MenuItem>\r\n      </CollapsingButton>\r\n\r\n      {/* Desktop */}\r\n      <nav className={classes.buttonBar} id=\"appbar-collapse\">\r\n        {navigation.map((nav) => (\r\n          <Button\r\n            component={Link}\r\n            className={classes.link}\r\n            to={nav.to}\r\n            key={nav.to}\r\n          >\r\n            {nav.page}\r\n          </Button>\r\n        ))}\r\n        <Button\r\n          component={Link}\r\n          to=\"/login\"\r\n          variant=\"contained\"\r\n          className={classes.login}\r\n        >\r\n          Login\r\n        </Button>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollapsingMenu;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport CollapsingMenu from './CollapsingMenu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  navigation: {\r\n    backgroundColor: 'white',\r\n  },\r\n  toggleDrawer: {},\r\n  appTitle: {},\r\n}));\r\n\r\n/**\r\n * Navigation bar at the top of window\r\n */\r\nfunction Navbar() {\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger();\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      <AppBar className={classes.navigation}>\r\n        <Toolbar>\r\n          {/* Logo */}\r\n          <Link to=\"/\">\r\n            <img\r\n              src={require('../../images/logo_nobg.png')}\r\n              alt=\"Pan-Lang\"\r\n              style={{ width: 75, height: 75 }}\r\n            />\r\n          </Link>\r\n\r\n          {/* Navigation menu */}\r\n          <CollapsingMenu />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Slide>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import axios from 'axios';\r\n\r\nexport const BASE_API_URL = 'https://panlang.herokuapp.com';\r\n\r\nexport default axios.create({\r\n  baseURL: BASE_API_URL,\r\n});\r\n","import Client from './Client';\r\n\r\nexport const PEOPLE_ENDPOINT = '/people';\r\n\r\nexport async function addPersonInfo(item) {\r\n  Client.post(PEOPLE_ENDPOINT, item)\r\n    .then((res) => {\r\n      return true;\r\n    })\r\n    .catch((e) => {\r\n      return false;\r\n    });\r\n}\r\n\r\nexport async function fetchPeople() {\r\n  const promise = await Client.get(PEOPLE_ENDPOINT);\r\n  return promise;\r\n}\r\n","export const MONTHS = [\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  '10',\r\n  '11',\r\n  '12',\r\n];\r\n\r\nexport const MONTH_NAMES = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n","const YEARS = ['2020', '2021', '2022', '2023', '2024'];\r\n\r\nexport default YEARS;","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Link } from 'react-router-dom';\r\nimport { PEOPLE_ENDPOINT } from '../api/People';\r\nimport { BASE_API_URL } from '../api/Client';\r\nimport { MONTHS, MONTH_NAMES } from '../constants/Months';\r\nimport YEARS from '../constants/Years';\r\n\r\nfunction Home() {\r\n  const current = new Date();\r\n  const [date, setDate] = useState({\r\n    month: MONTHS[current.getMonth()],\r\n    year: current.getFullYear(),\r\n  });\r\n\r\n  return (\r\n    <Container style={{ textAlign: 'center' }}>\r\n      <div style={{ marginBottom: 20 }}>\r\n        <br></br>\r\n        <h1>Welcome to </h1>{' '}\r\n        <h1>\r\n          <font style={{ color: '#35E82A', fontWeight: 'bold' }}>Pan-</font><font style={{ color: '#2EFFD5', fontWeight: 'bold' }}>Lang</font>\r\n        </h1>\r\n      </div>\r\n      <div>\r\n        <Link to=\"/order\" style={{ color: 'white' }}>\r\n          <Button style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}} size=\"lg\" className=\"mb-3\" block>\r\n            Start a new order\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      <Link to=\"/stock\" style={{ color: 'white' }}>\r\n        <Button style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}} size=\"lg\" className=\"mb-3\" block>\r\n          Edit and add stock items\r\n        </Button>{' '}\r\n      </Link>\r\n\r\n      <br></br>\r\n      <br></br>\r\n      {/* I think we want an anchor tag w/ href and target=_blank , \r\n      if we use axios we have to hack around downloading the content for the user*/}\r\n      <a\r\n        href={`${BASE_API_URL}${PEOPLE_ENDPOINT}?${new URLSearchParams(date)}`}\r\n      >\r\n        <Button style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}} size=\"lg\" className=\"mb-3\" block>\r\n          Download order data\r\n        </Button>{' '}\r\n      </a>\r\n\r\n      {/* Month selection dropdown here */}\r\n      <Dropdown onChange={(e) => console.log(e)}>\r\n        <Dropdown.Toggle\r\n          variant=\"type\"\r\n          id=\"dropdown-basic\"\r\n          size=\"md\"\r\n          className=\"mb-3\"\r\n          style={{backgroundColor: '#35E82A', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}\r\n        >\r\n          Month: <b>{MONTH_NAMES[MONTHS.indexOf(date.month)]}</b>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {MONTHS.map((month) => (\r\n            <Dropdown.Item\r\n              onSelect={(key) => setDate({ ...date, month: key })}\r\n              eventKey={month}\r\n              key={month}\r\n            >\r\n              {MONTH_NAMES[MONTHS.indexOf(month)]}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n\r\n      {/* Year selection dropdown here */}\r\n      <Dropdown onChange={(e) => console.log(e)}>\r\n        <Dropdown.Toggle\r\n          variant=\"type\"\r\n          id=\"dropdown-basic\"\r\n          size=\"md\"\r\n          className=\"mb-3\"\r\n          style={{backgroundColor: '#35E82A', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}\r\n        >\r\n          Year: <b>{date.year}</b>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {YEARS.map((year) => (\r\n            <Dropdown.Item\r\n              onSelect={(key) => setDate({ ...date, year: key })}\r\n              eventKey={year}\r\n              key={year}\r\n            >\r\n              {year}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Container,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 5,\r\n      width: '100%',\r\n    },\r\n  },\r\n  avatar: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25),\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n    },\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\n/**\r\n * Card on About page representing each team member\r\n */\r\nfunction AvatarCard({ name, src, alt, role = 'Software Developer', github }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.card}>\r\n      <Container>\r\n        <Avatar src={src} alt={alt} className={classes.avatar} />\r\n        <Typography variant=\"h5\">\r\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {name}\r\n          </a>\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\">{role}</Typography>\r\n      </Container>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AvatarCard;\r\n","import React from 'react';\r\nimport { Container, makeStyles, Typography } from '@material-ui/core';\r\nimport AvatarCard from '../components/AvatarCard';\r\nimport QwertycowMoo from '../images/QwertycowMoo.png';\r\nimport kgs5 from '../images/kgs5.png';\r\nimport renzol2 from '../images/renzol2.png';\r\nimport evanmm3 from '../images/evanmm3.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  page: {\r\n    backgroundColor: 'white',\r\n  },\r\n  p: {\r\n    marginTop: 8,\r\n    marginBottom: 8,\r\n  },\r\n  team: {\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    paddingBottom: 50,\r\n  },\r\n  avatarGroup: {\r\n    marginTop: 15,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'space-around',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n/**\r\n * About page for Pan-Lang\r\n * Provides background for our application and service\r\n */\r\nfunction About() {\r\n  const classes = useStyles();\r\n  const team = [\r\n    {\r\n      name: 'Kevin Zhou',\r\n      src: QwertycowMoo,\r\n      github: 'https://github.com/QwertycowMoo',\r\n      role: 'Lead Software Developer',\r\n    },\r\n    { name: 'Katie Sanders', src: kgs5, github: 'https://github.com/kgs5' },\r\n    {\r\n      name: 'Renzo Ledesma',\r\n      src: renzol2,\r\n      github: 'https://github.com/renzol2',\r\n    },\r\n    {\r\n      name: 'Evan Matthews',\r\n      src: evanmm3,\r\n      github: 'https://github.com/evanmm3',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container className={classes.page}>\r\n      <Container\r\n        maxWidth=\"md\"\r\n        style={{\r\n          paddingBottom: 120,\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        {/* Background */}\r\n        <Typography variant=\"h2\">\r\n          {'About '}\r\n          <font style={{ color: '#26B020', fontWeight: 'bold' }}>\r\n            Pan-Lang:\r\n          </font>\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.p}>\r\n          Pan-Lang is an organizational web application designed to help local\r\n          food bank organizers keep track of orders, maintain visitor records,\r\n          and communicate with non-English speaking patrons.\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.p}>\r\n          Food insecurity is an important issue in the Champain County\r\n          community. Nearly 15% of residents must deal with food insecurity.\r\n          Many of these individuals are also ineligible for federal nutrition\r\n          programs and must rely on local food pantries for meals.\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.p}>\r\n          On top of this, many of these individuals speak limited English,\r\n          making it difficult for them to communicate their needs to food pantry\r\n          staff. With Pan-Lang, our mission is to break this language barrier\r\n          and provide a more efficient method of supporting those in need.\r\n        </Typography>\r\n      </Container>\r\n\r\n      {/* Team */}\r\n      <Container className={classes.team}>\r\n        <Typography variant=\"h3\">Our Team</Typography>\r\n        <Container className={classes.avatarGroup}>\r\n          {team.map((member) => (\r\n            <AvatarCard\r\n              key={member.src}\r\n              name={member.name}\r\n              src={member.src}\r\n              alt={member.name}\r\n              role={member.role}\r\n              github={member.github}\r\n            />\r\n          ))}\r\n        </Container>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst orderSchema = Yup.object({\r\n  firstName: Yup.string().required(),\r\n  lastName: Yup.string().required(),\r\n  adults: Yup.number().moreThan(-1).required(),\r\n  children: Yup.number().moreThan(-1).required(),\r\n  zipcode: Yup.number().moreThan(9999).lessThan(100000).integer().required(),\r\n  orderNotes: Yup.string().required(),\r\n});\r\n\r\nfunction OrderForm() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Container style={{ backgroundColor: 'white', paddingBottom: 120 }}>\r\n      <h1 style={{ textAlign: 'center' }}>Order</h1>\r\n      <Formik\r\n        validationSchema={orderSchema}\r\n        onSubmit={(personInfo) => {\r\n          history.push('/order-stock', { fromForm: true, personInfo })\r\n        }}\r\n        initialValues={{\r\n          firstName: '',\r\n          lastName: '',\r\n          adults: -1,\r\n          children: -1,\r\n          zipcode: -1,\r\n          orderNotes: 'test'\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          errors,\r\n        }) => (\r\n          <div>\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Group md=\"4\" controlId=\"orderForm1\">\r\n                <Form.Label>First name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  placeholder={'Enter first name here'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.firstName && !errors.firstName}\r\n                  isInvalid={!!errors.firstName}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm2\">\r\n                <Form.Label>Last name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  placeholder={'Enter last name here'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.lastName && !errors.lastName}\r\n                  isInvalid={!!errors.lastName}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm3\">\r\n                <Form.Label># of Adults</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"adults\"\r\n                  placeholder={'Enter number of adults in household'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.adults && !errors.adults}\r\n                  isInvalid={!!errors.adults}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm4\">\r\n                <Form.Label># of Children</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"children\"\r\n                  placeholder={'Enter number of children in household'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.children && !errors.children}\r\n                  isInvalid={!!errors.children}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group md=\"4\" controlId=\"orderForm4\">\r\n                <Form.Label>ZIP Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"zipcode\"\r\n                  placeholder={'Enter your ZIP Code'}\r\n                  onChange={handleChange}\r\n                  isValid={touched.zipcode && !errors.zipcode}\r\n                  isInvalid={!!errors.zipcode}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n                <Button type=\"submit\" style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}} block>Select order</Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OrderForm;\r\n","import Client from './Client';\r\n\r\nconst STOCK_ENDPOINT = '/stock';\r\n\r\nexport async function fetchStock() {\r\n  return await Client.get(STOCK_ENDPOINT);\r\n}\r\n\r\nexport async function createStockItem(item) {\r\n  Client.post(STOCK_ENDPOINT, item)\r\n    .then((res) => {\r\n      return true;\r\n    })\r\n    .catch((e) => {\r\n      return false;\r\n    });\r\n}\r\n\r\nexport async function updateStockCount(id, updated) {\r\n  return await Client.put(`${STOCK_ENDPOINT}/${id}`, updated)\r\n    .then((res) => {\r\n      console.log(res);\r\n      return true;\r\n    })\r\n    .catch((e) => {\r\n      console.error(e)\r\n      return false;\r\n    })\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { updateStockCount } from '../api/Stock';\r\n\r\nconst amountSchema = Yup.object({\r\n  newCount: Yup.number().integer().moreThan(-1).required(),\r\n});\r\n\r\nfunction StockModal({\r\n  show,\r\n  handleClose,\r\n  getStock,\r\n  stockId,\r\n  stockName,\r\n  stockCount,\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  async function onSubmit(updatedCount) {\r\n    setLoading(true);\r\n    const updateIsSuccessful = await updateStockCount(stockId, updatedCount);\r\n\r\n    setLoading(false);\r\n\r\n    if (!updateIsSuccessful) {\r\n      setError(true);\r\n    } else {\r\n      handleClose();\r\n      getStock(500);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Formik\r\n        validationSchema={amountSchema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          newCount: -1,\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          errors,\r\n        }) => (\r\n          <>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Edit amount for: {stockName}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            {/* Body of modal; changes upon sending update request */}\r\n            <Modal.Body>\r\n              {!loading && !error && (\r\n                <>\r\n                  <p>Current amount: {stockCount}</p>\r\n                  <Form noValidate onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"stockCount\">\r\n                      <Form.Control\r\n                        type=\"number\"\r\n                        name=\"newCount\"\r\n                        placeholder={'Insert new item count'}\r\n                        onChange={handleChange}\r\n                        isValid={touched.newCount && !errors.newCount}\r\n                        isInvalid={!!errors.newCount}\r\n                      />\r\n                      <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </>\r\n              )}\r\n\r\n              {loading && <p>Updating stock count for {stockName}...</p>}\r\n\r\n              {error && <p>An error occurred when trying to update stock.</p>}\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              {!loading && (\r\n                <>\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    style={{borderRadius: '200px'}}\r\n                    onClick={() => {\r\n                      setError(false);\r\n                      setLoading(false);\r\n                      handleClose();\r\n                    }}\r\n                  >\r\n                    Close\r\n                  </Button>\r\n                  {!error && (\r\n                    <Button onClick={handleSubmit}\r\n                    style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}>\r\n                      Save new amount\r\n                    </Button>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default StockModal;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction ErrorAlert({ heading = '', body, dismissible = false, onClose }) {\r\n  return (\r\n    <Alert variant=\"danger\" onClose={onClose} dismissible={dismissible} className={'mt-3'}>\r\n      {heading.length > 0 && <Alert.Heading>{heading}</Alert.Heading>}\r\n      {body}\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default ErrorAlert;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Badge, Container, Card } from 'react-bootstrap';\r\nimport StockModal from './StockModal';\r\nimport ErrorAlert from './ErrorAlert';\r\n\r\nfunction StockCard({ stockItem, getStock, lang = 'name' }) {\r\n  const [showAmountModal, setShowAmountModal] = useState(false);\r\n  const [hasLanguage, setHasLanguage] = useState(false);\r\n\r\n  // Handlers for showing/closing modal when editing item amount\r\n  const handleClose = () => setShowAmountModal(false);\r\n  const handleShow = () => setShowAmountModal(true);\r\n\r\n  // Determine whether this stock item has a name in the specified language\r\n  useEffect(() => {\r\n    setHasLanguage(stockItem[lang] !== undefined);\r\n  }, [lang, stockItem]);\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ margin: 5 }}>\r\n        <Card.Body>\r\n          <Card.Header as=\"h2\">\r\n            {hasLanguage ? stockItem[lang] : stockItem.name}\r\n            {lang !== 'name' && hasLanguage\r\n              ? ' (' + stockItem['name'] + ')'\r\n              : ''}\r\n          </Card.Header>\r\n\r\n          <Card.Text>\r\n            Amount:{' '}\r\n            <font style={{ fontSize: '1.4em', fontWeight: 'bolder' }}>\r\n              {stockItem.count}\r\n            </font>\r\n          </Card.Text>\r\n\r\n          <Card.Text style={{ textAlign: 'right' }}>\r\n            Last updated:{' '}\r\n            {stockItem.timestamp !== undefined\r\n              ? new Date(stockItem.timestamp).toDateString()\r\n              : 'Unavailable'}\r\n          </Card.Text>\r\n\r\n          <Container\r\n            style={{ display: 'flex', alignItems: 'center', padding: 0 }}\r\n          >\r\n            {!hasLanguage && (\r\n              <Badge variant=\"danger\">Language unavailable: {lang}</Badge>\r\n            )}\r\n            <div style={{ margin: 'auto' }} />\r\n            <Button\r\n              size=\"sm\"\r\n              style={{alignSelf: 'center', backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}\r\n              onClick={handleShow}\r\n            >\r\n              Edit amount\r\n            </Button>\r\n          </Container>\r\n\r\n          {stockItem.count <= 0 && <ErrorAlert body=\"Warning: Out of stock\" />}\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <StockModal\r\n        show={showAmountModal}\r\n        handleClose={handleClose}\r\n        getStock={getStock}\r\n        stockName={hasLanguage ? stockItem[lang] : stockItem.name}\r\n        stockId={stockItem._id}\r\n        stockCount={stockItem.count}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StockCard;\r\n","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { createStockItem } from '../api/Stock';\r\n\r\nconst stockSchema = Yup.object({\r\n  name: Yup.string().required(),\r\n  count: Yup.number().integer().moreThan(-1).required(),\r\n});\r\n\r\n/**\r\n * Handles creation of new stock items\r\n */\r\nfunction StockInput({ getStock }) {\r\n  return (\r\n    <Accordion>\r\n      <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n          Click here to insert a stock item\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <Card.Body>\r\n            <Formik\r\n              validationSchema={stockSchema}\r\n              onSubmit={(item) => {\r\n                getStock(500);\r\n                console.log(createStockItem(item));\r\n              }}\r\n              initialValues={{\r\n                name: '',\r\n                count: -1,\r\n              }}\r\n            >\r\n              {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                touched,\r\n                isValid,\r\n                errors,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"stockInputName\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder={'Insert item name here'}\r\n                      onChange={handleChange}\r\n                      isValid={touched.name && !errors.name}\r\n                      isInvalid={!!errors.name}\r\n                    />\r\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"stockInputCount\">\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"count\"\r\n                      placeholder={'Insert item count here'}\r\n                      onChange={handleChange}\r\n                      isValid={touched.count && !errors.count}\r\n                      isInvalid={!!errors.count}\r\n                    />\r\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Button variant=\"success\" type=\"submit\">\r\n                    Add item to database\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default StockInput;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nfunction Loading() {\r\n  return (\r\n    <Container style={{ display: 'flex', justifyContent: 'center' }}>\r\n      <Spinner\r\n        animation=\"border\"\r\n        role=\"status\"\r\n        className=\"mt-3\"\r\n        style={{ marginLeft: 'auto', marginRight: 'auto' }}\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","const LANGUAGES = ['english', 'spanish', 'french', 'chinese'];\r\n\r\nexport default LANGUAGES;","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport StockCard from '../components/StockCard';\r\nimport StockInput from '../components/StockInput';\r\nimport { fetchStock } from '../api/Stock';\r\nimport { Button } from 'react-bootstrap';\r\nimport Loading from '../components/Loading';\r\nimport LANGUAGES from '../constants/Languages';\r\nimport ErrorAlert from '../components/ErrorAlert';\r\n\r\n/**\r\n * Displays the stock of food pantry with options for language\r\n */\r\nfunction Stock() {\r\n  const [stock, setStock] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [language, setLanguage] = useState(LANGUAGES[0]);\r\n\r\n  function getStock(timeout = 0) {\r\n    // Set stock empty to begin loading spinner\r\n    setStock([]);\r\n    setError(false);\r\n\r\n    // Fetch stock after designated time\r\n    setTimeout(() => {\r\n      fetchStock()\r\n        .then((res) => {\r\n          setStock(res.data);\r\n        })\r\n        .catch((e) => setError(true));\r\n    }, timeout);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getStock();\r\n  }, []);\r\n\r\n  function capitalize(s) {\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1 style={{ textAlign: 'center' }}>Stock</h1>\r\n      <Container style={{ display: 'flex', alignItems: 'center', padding: 0 }}>\r\n        <Dropdown onChange={(e) => console.log(e)}>\r\n          <Dropdown.Toggle\r\n            variant=\"type\"\r\n            id=\"dropdown-basic\"\r\n            size=\"md\"\r\n            className=\"mb-3\"\r\n            style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}\r\n          >\r\n            Language: <b>{capitalize(language)}</b>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            {LANGUAGES.map((lang) => (\r\n              <Dropdown.Item\r\n                onSelect={(key) => setLanguage(key)}\r\n                eventKey={lang}\r\n                key={lang}\r\n              >\r\n                {capitalize(lang)}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <div style={{ margin: 'auto' }} />\r\n        <Button\r\n          variant=\"type\"\r\n          size=\"md\"\r\n          onClick={getStock}\r\n          style={{backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}>\r\n          Refresh\r\n        </Button>\r\n      </Container>\r\n\r\n      {!error && <StockInput getStock={getStock} />}\r\n\r\n      {stock.length === 0 && !error && <Loading />}\r\n      {stock &&\r\n        stock.map((item) => (\r\n          <StockCard\r\n            stockItem={item}\r\n            getStock={getStock}\r\n            lang={language === 'english' ? 'name' : language}\r\n            key={item._id}\r\n          />\r\n        ))}\r\n      {error && <ErrorAlert heading=\"Error\" body=\"An error occurred while trying to get the stock.\" dismissible={false} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Stock;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, ButtonGroup } from 'react-bootstrap';\r\n\r\n/**\r\n * Allows user to select how much of a stock item to request\r\n */\r\nfunction OrderModal({\r\n  show,\r\n  handleClose,\r\n  getStock,\r\n  stockId,\r\n  stockName,\r\n  stockCount,\r\n  onRequest,\r\n}) {\r\n  // Currently requested amount\r\n  const [selectedAmount, setSelectedAmount] = useState(1);\r\n\r\n  function handleDecrease() {\r\n    if (selectedAmount > 1) setSelectedAmount(selectedAmount - 1);\r\n  }\r\n\r\n  function handleIncrease() {\r\n    if (selectedAmount < stockCount) setSelectedAmount(selectedAmount + 1);\r\n  }\r\n\r\n  function submitRequest() {\r\n    const requestedItem = {\r\n      id: stockId,\r\n      name: stockName,\r\n      requestedCount: selectedAmount,\r\n      countAfterRequest: stockCount - selectedAmount,\r\n    };\r\n    console.log(\"submitRequest -> stockCount\", stockCount)\r\n    console.log(\"submitRequest -> selectedAmount\", selectedAmount)\r\n    \r\n    console.log(\"countAfterRequest ->\", requestedItem.countAfterRequest);\r\n\r\n    onRequest(requestedItem);\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Select requested amount for: {stockName}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>\r\n          Current amount: <b>{stockCount}</b>\r\n        </p>\r\n        <p>\r\n          Amount after order: <b>{stockCount - selectedAmount}</b>\r\n        </p>\r\n        <ButtonGroup\r\n          aria-label=\"Stock item request buttons\"\r\n          style={{ display: 'flex', alignItems: 'center' }}\r\n        >\r\n          <Button size=\"lg\" \r\n          style={{backgroundColor: '#16AB8D', borderColor: '#FFFFFF', color: '#FFFFFF'}}\r\n          onClick={handleDecrease}>\r\n            -\r\n          </Button>\r\n          <Button size=\"lg\" variant=\"secondary\" style={{borderColor: '#FFFFFF'}} disabled>\r\n            {selectedAmount}\r\n          </Button>\r\n          <Button size=\"lg\"\r\n          style={{backgroundColor: '#2EFFD5', borderColor: '#FFFFFF', color: '#FFFFFF'}}\r\n          onClick={handleIncrease}>\r\n            +\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" style={{borderRadius: '200px'}} onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button onClick={submitRequest}\r\n        style={{backgroundColor: '#35E82A', borderColor: '#35E82A', borderRadius: '200px', color: '#FFFFFF'}}>\r\n          Request amount\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default OrderModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Badge, Container, Card } from 'react-bootstrap';\r\nimport OrderModal from './OrderModal';\r\n\r\n/**\r\n * Stock item card on order screen\r\n */\r\nfunction OrderCard({\r\n  stockItem,\r\n  getStock,\r\n  lang = 'name',\r\n  onRequest,\r\n  isRequested = false,\r\n}) {\r\n  const [showOrderModal, setShowAmountModal] = useState(false);\r\n  const [hasLanguage, setHasLanguage] = useState(false);\r\n\r\n  // Handlers for showing/closing modal when ordering item\r\n  const handleClose = () => setShowAmountModal(false);\r\n  const handleShow = () => setShowAmountModal(true);\r\n\r\n  // Determine whether this stock item has a name in the specified language\r\n  useEffect(() => {\r\n    setHasLanguage(stockItem[lang] !== undefined);\r\n  }, [lang, stockItem]);\r\n\r\n  function getRequestButtonText() {\r\n    if (stockItem.count <= 0) {\r\n      return 'Out of stock';\r\n    } else if (isRequested) {\r\n      return 'Edit requested amount';\r\n    } else {\r\n      return 'Request item';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ margin: 5 }}>\r\n        <Card.Body>\r\n          <Card.Header as=\"h2\">\r\n            {hasLanguage ? stockItem[lang] : stockItem.name}\r\n            {lang !== 'name' && hasLanguage\r\n              ? ' (' + stockItem['name'] + ')'\r\n              : ''}\r\n          </Card.Header>\r\n\r\n          <Card.Text>\r\n            Amount:{' '}\r\n            <font style={{ fontSize: '1.4em', fontWeight: 'bolder' }}>\r\n              {stockItem.count}\r\n            </font>\r\n          </Card.Text>\r\n          <Container\r\n            style={{ display: 'flex', alignItems: 'center', padding: 0 }}\r\n          >\r\n            {!hasLanguage && (\r\n              <Badge variant=\"danger\">Language unavailable: {lang}</Badge>\r\n            )}\r\n            <div style={{ margin: 'left' }} />\r\n            <Button\r\n              size=\"lg\"\r\n              style={{alignSelf: 'left', backgroundColor: '#16AB8D', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}\r\n              onClick={handleShow}\r\n              disabled={stockItem.count <= 0}\r\n            >\r\n              {getRequestButtonText()}\r\n            </Button>\r\n          </Container>\r\n          <Card.Text style={{ textAlign: 'right' }}>\r\n            Last updated:{' '}\r\n            {stockItem.timestamp !== undefined\r\n              ? new Date(stockItem.timestamp).toDateString()\r\n              : 'Unavailable'}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <OrderModal\r\n        show={showOrderModal}\r\n        handleClose={handleClose}\r\n        getStock={getStock}\r\n        stockName={stockItem.name}\r\n        stockId={stockItem._id}\r\n        stockCount={stockItem.count}\r\n        onRequest={onRequest}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderCard;\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n/**\r\n * Modal to give user confirmation upon completing action\r\n */\r\nfunction ConfirmationModal({ title, body, buttonText, show, handleClose }) {  \r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {title}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        {body}\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button onClick={handleClose}\r\n        style={{backgroundColor: '#16AB8D', borderColor: '#16AB8D', borderRadius: '200px', color: '#FFFFFF'}}>\r\n          {buttonText}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport OrderCard from '../components/OrderCard';\r\nimport Loading from '../components/Loading';\r\nimport { fetchStock } from '../api/Stock';\r\nimport LANGUAGES from '../constants/Languages';\r\nimport { Container, Dropdown, Button } from 'react-bootstrap';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addPersonInfo } from '../api/People';\r\nimport { updateStockCount } from '../api/Stock';\r\nimport ConfirmationModal from '../components/ConfirmationModal';\r\nimport ErrorAlert from '../components/ErrorAlert';\r\n\r\n/**\r\n * Allows user to order stock items only after they've filled out form\r\n */\r\nfunction OrderStock() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const fromForm = location.state !== undefined;\r\n\r\n  const [stock, setStock] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [language, setLanguage] = useState(LANGUAGES[0]);\r\n  const [personInfo, setPersonInfo] = useState(\r\n    fromForm\r\n      ? location.state.personInfo\r\n      : retrieveFromStorage('personInfo', undefined)\r\n  );\r\n  const [requestedStockItems, setRequestedStockItems] = useState(\r\n    retrieveFromStorage('requestedStockItems', [])\r\n  );\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Send user back to form if they didn't fill it out\r\n    if (!personInfo) {\r\n      history.push('/order');\r\n    } else {\r\n      localStorage.setItem('personInfo', JSON.stringify(personInfo));\r\n      getStock();\r\n      console.log(personInfo);\r\n    }\r\n  }, [fromForm, history, personInfo]);\r\n\r\n  function retrieveFromStorage(key, defaultValue) {\r\n    const stored = localStorage.getItem(key);\r\n    if (stored) {\r\n      return JSON.parse(stored);\r\n    } else {\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  function getStock(timeout = 0) {\r\n    // Set stock empty to begin loading spinner\r\n    setStock([]);\r\n    setError(false);\r\n\r\n    // Fetch stock after designated time\r\n    setTimeout(() => {\r\n      fetchStock()\r\n        .then((res) => {\r\n          setStock(res.data);\r\n        })\r\n        .catch((e) => setError(true));\r\n    }, timeout);\r\n  }\r\n\r\n  function capitalize(s) {\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  /**\r\n   * Callback for OrderModal to add item to items list\r\n   * @param {Object} requestedItem { id, name, requestedCount, countAfterRequest }\r\n   */\r\n  function onRequest(requestedItem) {\r\n    // Check if item is already in list\r\n    let alreadyRequested = requestedStockItems.find(\r\n      (item) => item.id === requestedItem.id\r\n    );\r\n\r\n    let updatedRequestedItems;\r\n\r\n    if (alreadyRequested === undefined) {\r\n      // If item isn't in list, simply add it\r\n      updatedRequestedItems = requestedStockItems.concat(requestedItem);\r\n    } else {\r\n      // If item is already in list, update its values instead of adding\r\n      let itemIndex = requestedStockItems.indexOf(alreadyRequested);\r\n\r\n      updatedRequestedItems = [...requestedStockItems];\r\n\r\n      // Replace old values with new values\r\n      updatedRequestedItems[itemIndex].requestedCount =\r\n        requestedItem.requestedCount;\r\n      updatedRequestedItems[itemIndex].countAfterRequest =\r\n        requestedItem.countAfterRequest;\r\n    }\r\n\r\n    // Update state and local storage\r\n    setRequestedStockItems(updatedRequestedItems);\r\n    localStorage.setItem(\r\n      'requestedStockItems',\r\n      JSON.stringify(updatedRequestedItems)\r\n    );\r\n  }\r\n\r\n  function writeRequestToNotes() {\r\n    let orderNotes = '';\r\n    requestedStockItems.forEach((item) => {\r\n      orderNotes += item.name + ': ' + item.requestedCount + ', ';\r\n    });\r\n    return orderNotes.slice(0, -2);\r\n  }\r\n\r\n  function submitRequest() {\r\n    // Send full person info to API\r\n    const requestBody = {\r\n      firstname: personInfo.firstName,\r\n      lastname: personInfo.lastName,\r\n      adults: personInfo.adults,\r\n      children: personInfo.adults,\r\n      zipcode: personInfo.zipcode,\r\n      'order-notes': writeRequestToNotes(),\r\n      fulfilled: false,\r\n    };\r\n    addPersonInfo(requestBody);\r\n\r\n    // Send updates for each requested item to API\r\n    const stockUpdatePromises = requestedStockItems.map((item) => {\r\n      console.log('making promise... ', item.countAfterRequest);\r\n      return updateStockCount(item.id, { newCount: item.countAfterRequest });\r\n    });\r\n\r\n    Promise.all(stockUpdatePromises).then((responses) =>\r\n      console.log(responses)\r\n    );\r\n\r\n    // Clear local storage\r\n    localStorage.removeItem('requestedStockItems');\r\n    localStorage.removeItem('personInfo');\r\n\r\n    // Show confirmation popup\r\n    setShowConfirmation(true);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1 style={{ textAlign: 'center' }}>Select stock here</h1>\r\n\r\n      {requestedStockItems.map((r) => (\r\n        <p key={r.name}>\r\n          {r.name}: {r.requestedCount}\r\n        </p>\r\n      ))}\r\n\r\n      {!error && (\r\n        <Button\r\n          variant=\"type\"\r\n          className=\"mb-3\"\r\n          onClick={submitRequest}\r\n          block\r\n          style={{\r\n            backgroundColor: '#16AB8D',\r\n            borderColor: '#FFFFF5',\r\n            color: '#FFFFFF',\r\n            borderRadius: '200px',\r\n          }}\r\n          disabled={requestedStockItems.length === 0}\r\n        >\r\n          {requestedStockItems.length > 0\r\n            ? 'Submit request'\r\n            : 'Select items below'}\r\n        </Button>\r\n      )}\r\n\r\n      <Container style={{ display: 'flex', alignItems: 'center', padding: 0 }}>\r\n        <Dropdown variant=\"type\" onChange={(e) => console.log(e)}>\r\n          <Dropdown.Toggle\r\n            variant=\"type\"\r\n            id=\"dropdown-basic\"\r\n            size=\"md\"\r\n            className=\"mb-3\"\r\n            style={{\r\n              backgroundColor: '#16AB8D',\r\n              borderColor: '#FFFFF5',\r\n              color: '#FFFFFF',\r\n              borderRadius: '200px',\r\n            }}\r\n          >\r\n            Language: <b>{capitalize(language)}</b>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            {LANGUAGES.map((lang) => (\r\n              <Dropdown.Item\r\n                onSelect={(key) => setLanguage(key)}\r\n                eventKey={lang}\r\n                key={lang}\r\n              >\r\n                {capitalize(lang)}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <div style={{ margin: 'auto' }} />\r\n        <Button\r\n          variant=\"type\"\r\n          size=\"md\"\r\n          onClick={getStock}\r\n          style={{\r\n            backgroundColor: '#16AB8D',\r\n            borderColor: '#FFFFF5',\r\n            color: '#FFFFFF',\r\n            borderRadius: '200px',\r\n          }}\r\n        >\r\n          Refresh\r\n        </Button>\r\n      </Container>\r\n\r\n      {/* List of stock */}\r\n      {stock.length === 0 && !error && <Loading />}\r\n      {stock &&\r\n        personInfo &&\r\n        stock.map((item) => (\r\n          <OrderCard\r\n            stockItem={item}\r\n            getStock={getStock}\r\n            lang={language === 'english' ? 'name' : language}\r\n            key={item._id}\r\n            onRequest={onRequest}\r\n            isRequested={requestedStockItems.some(\r\n              (requested) => item._id === requested.id\r\n            )}\r\n          />\r\n        ))}\r\n      {error && (\r\n        <ErrorAlert\r\n          heading=\"Error\"\r\n          body=\"An error occurred while trying to get the stock.\"\r\n          dismissible={false}\r\n        />\r\n      )}\r\n\r\n      {/* Confirmation popup */}\r\n      <ConfirmationModal\r\n        style={{\r\n          backgroundColor: '#16AB8D',\r\n          borderColor: '#16AB8D',\r\n          color: '#FFFFFF',\r\n        }}\r\n        title=\"Order successfully placed!\"\r\n        body=\"Thanks for your patronage! Your order will be fulfilled shortly.\"\r\n        buttonText=\"Back to Home\"\r\n        show={showConfirmation}\r\n        handleClose={() => {\r\n          setShowConfirmation(false);\r\n          history.push('/'); // Redirect back home\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OrderStock;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\n/**\r\n * Confirmation modal when fulfilling a person's order\r\n */\r\nfunction FulfillModal({ person, show, handleClose, fulfillPerson }) {\r\n  /**\r\n   * Handles confirmation of fulfilling a person's order\r\n   */\r\n  function handleConfirm() {\r\n    fulfillPerson(person._id);\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>Confirm fulfillment</Modal.Header>\r\n      <Modal.Body>\r\n        <h5>\r\n          Are you sure that {person.firstname}'s order is correct and has been\r\n          fulfilled?\r\n        </h5>\r\n        <p>{person['order-notes']}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" style={{borderRadius: '200px'}} onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button onClick={handleConfirm}\r\n        style={{backgroundColor: '#35E82A', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}>\r\n          Confirm fulfillment\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default FulfillModal;\r\n","import React, { useState } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport FulfillModal from './FulfillModal';\r\n\r\n/**\r\n * Displays:\r\n * - person's name\r\n * - order notes\r\n * - button that sends a socket emit to backend that\r\n *   sets fulfill to true\r\n */\r\nfunction UnfulfilledOrderCard({ person, fulfillPerson }) {\r\n  const [showFulfillModal, setShowFulfillModal] = useState(false);\r\n\r\n  // Handlers for showing/closing modal when ordering item\r\n  const handleClose = () => setShowFulfillModal(false);\r\n  const handleShow = () => setShowFulfillModal(true);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        key={person._id}\r\n        size=\"lg\"\r\n        style={{ margin: 5 }}\r\n      >\r\n        <Card.Body>\r\n          <Card.Header as=\"h2\">\r\n            {person.firstname} {person.lastname}\r\n          </Card.Header>\r\n          <Card.Text>{person['order-notes']}</Card.Text>\r\n          <Button onClick={handleShow} block\r\n          style={{backgroundColor: '#16AB8D', borderColor: '#16AB8D', borderRadius: '200px', color: '#FFFFFF'}}>\r\n            Fulfill Order\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <FulfillModal\r\n        person={person}\r\n        show={showFulfillModal}\r\n        handleClose={handleClose}\r\n        fulfillPerson={fulfillPerson}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnfulfilledOrderCard;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport cart from '../images/empty-cart.svg';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    justifyContent: 'center',\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  image: {\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25),\r\n    marginTop: theme.spacing(20),\r\n  },\r\n  grid: {\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst Theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#00c853',\r\n    },\r\n    secondary: {\r\n      main: '#00c853',\r\n    },\r\n    action: {\r\n      main: '#00c853',\r\n    },\r\n  },\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MuiThemeProvider theme={Theme}>\r\n        <Dialog\r\n          open={open}\r\n          maxWidth=\"lg\"\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n          className={classes.dialog}\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {'No orders at the moment'}\r\n          </DialogTitle>\r\n          <DialogActions className={classes.button}>\r\n            <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </MuiThemeProvider>\r\n      <Grid container className={classes.grid}>\r\n        <Grid item lg={4} sm={4}></Grid>\r\n        <Grid item xs={12} lg={4} sm={4} className={classes.grid}>\r\n          <img alt=\"Shopping cart\" src={cart} className={classes.image} />\r\n        </Grid>\r\n        <Grid item lg={4} sm={4}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport Container from 'react-bootstrap/Container';\r\nimport UnfulfilledOrderCard from '../components/UnfulfilledOrderCard';\r\nimport { BASE_API_URL } from '../api/Client';\r\nimport Dialog from '../components/Dialog'\r\n\r\n/**\r\n * Page with list of people with unfulfilled orders\r\n */\r\nfunction OrderTracker() {\r\n  const [ordersList, setOrdersList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(BASE_API_URL);\r\n    socket.on('person', (data) => {\r\n      eventHandler(data);\r\n    });\r\n\r\n    const eventHandler = (personData) => {\r\n      setOrdersList((currentOrders) => [...currentOrders, personData]);\r\n    };\r\n\r\n    return () => {\r\n      console.log('effect done');\r\n      socket.disconnect();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function personFulfilled(id) {\r\n    const socket = socketIOClient(BASE_API_URL);\r\n    console.log('printing socket object: ');\r\n    console.log(socket);\r\n\r\n    console.log('emitting personfulfilled');\r\n    socket.emit('personFulfilled', id);\r\n    socket.on('personFulfillSuccess', function (confirmation) {\r\n      console.log('confirmed ' + confirmation);\r\n      socket.disconnect();\r\n    });\r\n    // Remove fulfilled order from list after emitting fulfillment through socket\r\n    setOrdersList(ordersList.filter((order) => order._id !== id));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {ordersList.length === 0 && <Dialog/>}\r\n      {ordersList &&\r\n        ordersList.map((order) => (\r\n          <UnfulfilledOrderCard\r\n            fulfillPerson={personFulfilled}\r\n            person={order}\r\n            key={order._id}\r\n          />\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OrderTracker;\r\n","import React, { useState } from 'react';\r\nimport { Card, FormControl, InputGroup } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Login() {\r\n  const [pantryName, setPantryName] = useState('');\r\n\r\n  function handlePantryNameChange(e) {\r\n    setPantryName(e.target.value);\r\n  }\r\n\r\n  function handleLogin() {\r\n    console.log(`log in to pantry: ${pantryName}`);\r\n  }\r\n\r\n  function handleSignup() {\r\n    console.log('signup');\r\n  }\r\n\r\n  return (\r\n    <Container style={{ textAlign: 'center' }}>\r\n      <h1>Log In</h1>\r\n      <Card className=\"mb-3\">\r\n        <Card.Body>\r\n          <p>Gain full access to your pantry's stock and current orders.</p>\r\n          <InputGroup\r\n            className=\"mb-3\"\r\n            size=\"lg\"\r\n            onChange={handlePantryNameChange}\r\n          >\r\n            <FormControl\r\n              aria-label=\"Default\"\r\n              placeholder=\"Enter your pantry name here\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n          </InputGroup>\r\n          <Button style={{ backgroundColor: 'green' }} onClick={handleLogin}>\r\n            Login to your pantry\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card>\r\n        <Card.Body>\r\n          <p>Don't have a pantry with us yet?</p>\r\n          <Button style={{ backgroundColor: 'green' }} onClick={handleSignup}>\r\n            Sign up to create a pantry\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/Navbar/';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport Order from './pages/Order';\r\nimport Stock from './pages/Stock';\r\nimport OrderStock from './pages/OrderStock';\r\nimport OrderTracker from './pages/OrderTracker';\r\nimport Login from './pages/Login';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Navbar />\r\n      {/* FIXME: naive fix for keeping a fixed navbar */}\r\n      <div style={{ padding: 55 }} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/stock\">\r\n          <Stock />\r\n        </Route>\r\n        <Route path=\"/order\">\r\n          <Order />\r\n        </Route>\r\n        <Route path=\"/order-stock\">\r\n          <OrderStock />\r\n        </Route>\r\n        <Route path=\"/order-tracker\"> \r\n          <OrderTracker />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <h1>\r\n            Welcome to <font style={{ color: '#26B020' }}>Pan-Lang</font>!\r\n          </h1>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <App />\r\n    </React.Fragment>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}