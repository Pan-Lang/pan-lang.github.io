{"version":3,"sources":["images/logo_nobg.png","images/QwertycowMoo.png","images/kgs5.png","images/renzol2.png","images/evanmm3.png","images/empty-cart.svg","components/Navbar/CollapsingButton.js","api/Client.js","api/Pantry.js","firebase.js","components/Navbar/CollapsingMenu.js","constants/Routes.js","components/Navbar/index.js","pages/Home/Landing.js","pages/Home/User.js","pages/Home/index.js","components/AvatarCard.js","pages/About.js","constants/Order.js","pages/Order.js","components/ErrorAlert.js","components/Loading.js","api/Stock.js","components/StockModal.js","components/StockInfo.js","hooks/useLanguage.js","components/StockCard.js","components/LanguageMenu.js","components/SearchBar.js","constants/Languages.js","hooks/useStock.js","hooks/useNameSearch.js","components/StockInput.js","pages/Stock.js","components/AccordionWrapper.js","components/OrderModal.js","components/StockOrderCard.js","components/RequestedItemCard.js","components/ReviewDialog.js","api/People.js","pages/OrderStock.js","components/FulfillModal.js","components/UnfulfilledOrderCard.js","components/EmptyDialog.js","pages/OrderTracker.js","pages/SignIn.js","components/Splash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","buttonCollapse","breakpoints","up","display","CollapsingButton","children","isOpen","setOpen","classes","className","IconButton","onClick","event","Boolean","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","axios","create","baseURL","item","a","Client","post","then","res","catch","e","env","process","firebase","initializeApp","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","auth","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","yahooProvider","OAuthProvider","sendPantryCreationRequest","addPantry","uid","currentUser","email","name","displayName","signInWithGoogle","signInWithPopup","signInWithFacebook","signInWithYahoo","result","console","log","db","firestore","root","position","right","buttonBar","down","link","margin","spacing","color","login","profileIcon","marginLeft","CollapsingMenu","useState","useAuthState","user","fullNavigation","page","to","navigation","getAuthButtonText","split","getAuthButtonLink","map","nav","MenuItem","key","component","Link","Button","variant","menuButton","marginRight","backgroundColor","Navbar","trigger","useScrollTrigger","Slide","appear","direction","in","AppBar","Toolbar","src","require","alt","style","width","height","signInLink","marginTop","Landing","Container","Typography","User","textAlign","marginBottom","fontWeight","borderColor","borderRadius","size","block","signOut","Home","card","paddingTop","paddingBottom","paddingLeft","paddingRight","padding","avatar","AvatarCard","role","github","Paper","elevation","Avatar","href","target","rel","p","team","avatarGroup","flexWrap","alignItems","justifyContent","About","QwertycowMoo","kgs5","renzol2","evanmm3","maxWidth","member","ORDER_STEPS","orderSchema","Yup","firstName","required","lastName","adults","integer","positive","zipcode","length","test","value","orderNotes","title","fontSize","typography","h3","stepper","formPaper","subtitle","h5","submit","formField","OrderForm","history","useHistory","useEffect","push","Stepper","activeStep","step","Step","StepLabel","validationSchema","onSubmit","personInfo","fromForm","initialValues","handleSubmit","handleChange","handleBlur","handleReset","values","touched","errors","isValid","Grid","container","xs","md","TextField","label","onChange","onBlur","helperText","error","fullWidth","type","flexDirection","ErrorAlert","heading","body","severity","Alert","AlertTitle","spinnerDiv","Loading","CircularProgress","fetchStock","get","createStockItem","updateStockCount","updatedItem","put","amountSchema","newCount","moreThan","modal","paper","palette","background","boxShadow","shadows","button","closeButton","form","StockModal","show","handleClose","getStock","stockId","stockName","stockCount","loading","setLoading","setError","formSubmission","pantry","_id","parseInt","updateIsSuccessful","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","actions","setTimeout","cardAction","only","topContent","bottomContent","nameContainer","noTranslation","subname","date","countContainer","countHeader","count","alignSelf","StockInfo","stockItem","languageTag","hasLanguage","handleShow","disableClick","visibleStockCount","showEnglishOnly","Card","CardActionArea","disabled","disableRipple","CardContent","Box","translations","Chip","undefined","timestamp","seconds","_seconds","Date","toDateString","substr","getItemDateString","useLanguage","setHasLanguage","translationsLoaded","StockCard","showAmountModal","setShowAmountModal","exit","enter","menuItem","toggle","textTransform","LanguageMenu","languages","currentLanguage","setLanguage","isError","React","setAnchorEl","selectedIndex","setSelectedIndex","locale","keepMounted","getContentAnchorEl","lang","index","tag","selected","textContent","selectedLanguage","find","handleMenuItemClick","searchPaper","search","SearchBar","stock","getFilteredStockItems","setNameQuery","LANGUAGES","language","InputProps","startAdornment","InputAdornment","toLowerCase","useStock","setStock","data","useNameSearch","nameQuery","filter","inEnglishName","includes","inTranslatedName","itemSchema","details","StockInput","defaultExpanded","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","isSubmitting","h4","subheading","column","info","Stock","isMobile","useMediaQuery","useTheme","AccordionWrapper","summary","minWidth","buttonGroup","incrementor","textField","OrderModal","onRequest","defaultAmount","selectedAmount","setSelectedAmount","Bold","Divider","ButtonGroup","placeholder","amount","valueAsNumber","isNaN","Number","requestedCount","countAfterRequest","StockOrderCard","showOrderModal","RequestedItemCard","requestedItem","removeRequestedItem","showActions","raised","CardActions","additionalNotes","divider","ReviewDialog","submitRequest","requestedStockItems","setAdditionalNotes","requestLoading","setRequestLoading","requestSuccess","setRequestSuccess","success","Dialog","scroll","List","dense","r","ListItem","ListItemText","primary","secondary","multiline","addPersonInfo","update","sm","OrderStock","location","useLocation","state","showReview","setShowReview","retrieveFromStorage","setRequestedStockItems","defaultValue","stored","localStorage","getItem","JSON","parse","updatedRequestedItems","alreadyRequested","concat","itemIndex","indexOf","setItem","stringify","updatedRequest","splice","writeRequestToNotes","forEach","slice","requestBody","fulfilled","stockUpdatePromises","Promise","all","removeItem","getRequestedCount","itemId","orderTitle","buttonText","FulfillModal","person","personId","fulfillPerson","onHide","centered","Header","Body","Footer","order","fontsize","UnfulfilledOrderCard","showFulfillModal","setShowFulfillModal","disableElevation","dialog","image","grid","Theme","createMuiTheme","main","action","AlertDialogSlide","DialogTitle","DialogActions","lg","cart","OrderTracker","userLoading","userError","query","setQuery","collection","doc","where","useCollection","snapshot","snapLoading","snapError","fulfillOrder","updatePerson","docs","SignIn","logo","Splash","App","basename","exact","path","Order","window","hostname","match","ReactDOM","render","StrictMode","Fragment","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.aaef724c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_nobg.484389dc.png\";","module.exports = __webpack_public_path__ + \"static/media/QwertycowMoo.c4707b2e.png\";","module.exports = __webpack_public_path__ + \"static/media/kgs5.ed891ef2.png\";","module.exports = __webpack_public_path__ + \"static/media/renzol2.726b433f.png\";","module.exports = __webpack_public_path__ + \"static/media/evanmm3.c4869c53.png\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.302b7b48.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Menu } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu'\n\n/**\n * Responsive button for use in navbar\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\n */\nfunction CollapsingButton({ children, isOpen, setOpen }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.buttonCollapse}>\n      <IconButton\n        onClick={(event) => setOpen(Boolean(event.currentTarget))}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        id=\"menu-appbar\"\n        anchorEl={isOpen}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={isOpen}\n        onClose={() => setOpen(false)}\n      >\n        {children}\n      </Menu>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  buttonCollapse: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    margin: '10px',\n    boxShadow: 'none',\n  },\n}));\n\nexport default CollapsingButton;\n","import axios from 'axios';\n\nexport const BASE_API_URL = 'https://us-central1-pan-lang.cloudfunctions.net/';\n\nexport default axios.create({\n  baseURL: BASE_API_URL,\n});\n","import Client from './Client';\n\nexport const PANTRY_ENDPOINT = '/pantry';\n\nexport async function addPantry(item) {\n  Client.post(PANTRY_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\n//put request not done on the frontend yet, this is only a placeholder\nexport async function updatePantry(update) {\n  Client.put(PANTRY_ENDPOINT, update)\n    .then((res) => {\n      console.log(res);\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    })\n\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { addPantry } from './api/Pantry';\n\n// Initialize Firebase\nconst env = process.env;\nfirebase.initializeApp({\n  apiKey: env.REACT_APP_API_KEY,\n  authDomain: env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: env.REACT_APP_DATABASE_URL,\n  projectId: env.REACT_APP_PROJECT_ID,\n  storageBucket: env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: env.REACT_APP_APP_ID,\n  measurementId: env.REACT_APP_MEASUREMENT_ID,\n});\n\n// Auth providers\nexport const auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst facebookProvider=  new firebase.auth.FacebookAuthProvider();\nconst yahooProvider = new firebase.auth.OAuthProvider('yahoo.com');\n\n// Sends request to create pantry for new users\n// Does nothing if user already exists in database\nexport const sendPantryCreationRequest = () => {\n  let body = {\n    uid: auth.currentUser.uid,\n    email: auth.currentUser.email,\n    name: auth.currentUser.displayName,\n  };\n  addPantry(body);\n}\n\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(googleProvider).then(sendPantryCreationRequest);\n};\n\nexport const signInWithFacebook = () => {\n  auth.signInWithPopup(facebookProvider).then(sendPantryCreationRequest);\n}\n\nexport const signInWithYahoo = () => {\n  auth.signInWithPopup(yahooProvider).then( (result) => {\n    console.log(result);\n    sendPantryCreationRequest();\n  });\n}\n\n// Database\nexport const db = firebase.firestore();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MenuItem, Button } from '@material-ui/core';\nimport CollapsingButton from './CollapsingButton';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  ABOUT,\n  LANDING,\n  ORDER_FORM,\n  ORDER_TRACKER,\n  SIGN_IN,\n  STOCK,\n} from '../../constants/Routes';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../../firebase';\n\n/**\n * Responsive navigation menu\n * Base code from: https://codesandbox.io/s/64kr4k1lww?file=/demo.js\n */\nfunction CollapsingMenu() {\n  const [isOpen, setOpen] = useState(false);\n  const [user] = useAuthState(auth);\n\n  // Pages to navigate to\n  const fullNavigation = [\n    { page: 'About', to: ABOUT },\n    { page: 'Order Form', to: ORDER_FORM },\n    { page: 'Order Tracker', to: ORDER_TRACKER },\n    { page: 'Stock', to: STOCK },\n  ];\n\n  // Only show About page when user is not logged in\n  const navigation = Boolean(user) ? fullNavigation : [fullNavigation[0]];\n\n  // Auth button text depends on whether user is logged in\n  function getAuthButtonText() {\n    // If the user is signed in\n    if (Boolean(user)) {\n      // In case the user doesn't have a display name\n      if (user.displayName === null) {\n        return user.email;\n      } else {\n        return user.displayName.split(' ')[0];\n      }\n    }\n\n    // If the user is not signed in\n    return 'Sign In';\n  }\n\n  // Profile button redirects to landing page\n  function getAuthButtonLink() {\n    return Boolean(user) ? LANDING : SIGN_IN;\n  }\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {/* Mobile */}\n      <CollapsingButton isOpen={isOpen} setOpen={setOpen}>\n        {navigation.map((nav) => (\n          <MenuItem\n            key={nav.to}\n            component={Link}\n            to={nav.to}\n            // FIXME: sometimes causes menu to pop up in weird places\n            // try: open menu -> About -> open menu again\n            onClick={() => setOpen(false)}\n          >\n            {nav.page}\n          </MenuItem>\n        ))}\n        <MenuItem\n          component={Link}\n          to={getAuthButtonLink()}\n          onClick={() => setOpen(false)}\n        >\n          {getAuthButtonText()}\n          {Boolean(user) && (\n            <AccountCircleIcon className={classes.profileIcon} />\n          )}\n        </MenuItem>\n      </CollapsingButton>\n\n      {/* Desktop */}\n      <nav className={classes.buttonBar} id=\"appbar-collapse\">\n        {navigation.map((nav) => (\n          <Button\n            component={Link}\n            className={classes.link}\n            to={nav.to}\n            key={nav.to}\n          >\n            {nav.page}\n          </Button>\n        ))}\n        <Button\n          component={Link}\n          to={getAuthButtonLink()}\n          variant=\"contained\"\n          className={classes.login}\n        >\n          {getAuthButtonText()}\n          {Boolean(user) && (\n            <AccountCircleIcon className={classes.profileIcon} />\n          )}\n        </Button>\n      </nav>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    right: 0,\n  },\n  buttonBar: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'none',\n    },\n    margin: '10px',\n    paddingLeft: '16px',\n    right: 0,\n    position: 'relative',\n    width: '100%',\n    background: 'transparent',\n  },\n  link: {\n    margin: theme.spacing(1, 1),\n    color: 'gray',\n  },\n  login: {\n    margin: '10px',\n  },\n  profileIcon: {\n    marginLeft: '4px',\n  },\n}));\n\nexport default CollapsingMenu;\n","// Endpoints for all pages in app\nexport const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ABOUT = '/about';\nexport const ORDER_FORM = '/order-form';\nexport const ORDER_STOCK = '/order-stock';\nexport const ORDER_TRACKER = '/order-tracker';\nexport const STOCK = '/stock';","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport CollapsingMenu from './CollapsingMenu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slide from '@material-ui/core/Slide';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\n/**\n * Navigation bar at the top of window\n */\nfunction Navbar() {\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      <AppBar className={classes.navigation}>\n        <Toolbar>\n          {/* Logo */}\n          <Link to=\"/\">\n            <img\n              src={require('../../images/logo_nobg.png')}\n              alt=\"Pan-Lang logo\"\n              style={{ width: 75, height: 75 }}\n            />\n          </Link>\n\n          {/* Navigation menu */}\n          <CollapsingMenu />\n        </Toolbar>\n      </AppBar>\n    </Slide>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  navigation: {\n    backgroundColor: 'white',\n  },\n}));\n\nexport default Navbar;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom';\nimport { SIGN_IN } from '../../constants/Routes';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Landing page for Pan-Lang.\n * The first thing people will see when visiting our web app.\n */\nfunction Landing() {\n  const classes = useStyles();\n  return (\n    <Container>\n      <Typography variant=\"h1\">Pan-Lang</Typography>\n      <Typography variant=\"h2\">\n        Helping the language barrier between food pantry coordinators and\n        non-English speakers.\n      </Typography>\n      <Button component={Link} variant=\"contained\" to={SIGN_IN} className={classes.signInLink}>\n        Sign up today!\n      </Button>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  signInLink: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default Landing;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { ORDER_FORM, STOCK } from '../../constants/Routes';\n\n/**\n * User's home page for Pan-Lang.\n * The default screen for users logged in to Pan-Lang.\n */\nfunction User() {\n  return (\n    <Container style={{ textAlign: 'center' }}>\n      <div style={{ marginBottom: 20 }}>\n        <br></br>\n        <h1>Welcome to </h1>{' '}\n        <h1>\n          <font style={{ color: '#35E82A', fontWeight: 'bold' }}>Pan-</font>\n          <font style={{ color: '#2EFFD5', fontWeight: 'bold' }}>Lang</font>\n        </h1>\n      </div>\n      <div>\n        <Link to={ORDER_FORM} style={{ color: 'white' }}>\n          <Button\n            style={{\n              backgroundColor: '#16AB8D',\n              borderColor: '#FFFFF5',\n              color: '#FFFFFF',\n              borderRadius: '200px',\n            }}\n            size=\"lg\"\n            className=\"mb-3\"\n            block\n          >\n            Start a new order\n          </Button>\n        </Link>\n      </div>\n      <Link to={STOCK} style={{ color: 'white' }}>\n        <Button\n          style={{\n            backgroundColor: '#16AB8D',\n            borderColor: '#FFFFF5',\n            color: '#FFFFFF',\n            borderRadius: '200px',\n          }}\n          size=\"lg\"\n          className=\"mb-3\"\n          block\n        >\n          Edit and add stock items\n        </Button>{' '}\n      </Link>\n\n      <br></br>\n      <br></br>\n      <Button\n        style={{\n          backgroundColor: '#16AB8D',\n          borderColor: '#FFFFF5',\n          color: '#FFFFFF',\n          borderRadius: '200px',\n        }}\n        size=\"lg\"\n        className=\"mb-3\"\n        block\n        onClick={() => auth.signOut()}\n      >\n        Sign out\n      </Button>\n    </Container>\n  );\n}\n\nexport default User;\n","import React from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../../firebase';\nimport Landing from './Landing';\nimport User from './User';\n\n/**\n * Landing page\n */\nfunction Home() {\n  const [user] = useAuthState(auth);\n\n  if (!Boolean(user)) {\n    // If the user is not logged in, return landing page\n    return <Landing />;\n  } else {\n    // If user is logged in, return user's home page\n    return <User />;\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport {\n  Avatar,\n  Container,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\n\n/**\n * Card on About page representing each team member\n */\nfunction AvatarCard({ name, src, alt, role = 'Software Developer', github }) {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={3} className={classes.card}>\n      <Container>\n        <Avatar src={src} alt={alt} className={classes.avatar} />\n        <Typography variant=\"h5\">\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </Typography>\n        <Typography variant=\"subtitle1\">{role}</Typography>\n      </Container>\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingLeft: 10,\n    paddingRight: 10,\n    [theme.breakpoints.down('sm')]: {\n      padding: 5,\n      width: '100%',\n    },\n  },\n  avatar: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    [theme.breakpoints.down('sm')]: {\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n    },\n    marginBottom: 10,\n  },\n}));\n\nexport default AvatarCard;\n","import React from 'react';\nimport { Container, makeStyles, Typography } from '@material-ui/core';\nimport AvatarCard from '../components/AvatarCard';\nimport QwertycowMoo from '../images/QwertycowMoo.png';\nimport kgs5 from '../images/kgs5.png';\nimport renzol2 from '../images/renzol2.png';\nimport evanmm3 from '../images/evanmm3.png';\n\n/**\n * About page for Pan-Lang\n * Provides background for our application and service\n */\nfunction About() {\n  const team = [\n    {\n      name: 'Kevin Zhou',\n      src: QwertycowMoo,\n      github: 'https://github.com/QwertycowMoo',\n      role: 'Lead Software Developer',\n    },\n    { name: 'Katie Sanders', src: kgs5, github: 'https://github.com/kgs5' },\n    {\n      name: 'Renzo Ledesma',\n      src: renzol2,\n      github: 'https://github.com/renzol2',\n    },\n    {\n      name: 'Evan Matthews',\n      src: evanmm3,\n      github: 'https://github.com/evanmm3',\n    },\n  ];\n\n  const classes = useStyles();\n  return (\n    <Container>\n      <Container\n        maxWidth=\"md\"\n        style={{\n          paddingBottom: 120,\n          marginBottom: 20,\n        }}\n      >\n        {/* Background */}\n        <Typography variant=\"h2\">\n          {'About '}\n          <font style={{ color: '#26B020', fontWeight: 'bold' }}>\n            Pan-Lang\n          </font>\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          Pan-Lang is an organizational web application designed to help local\n          food bank organizers keep track of orders, maintain visitor records,\n          and communicate with non-English speaking patrons.\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          Food insecurity is an important issue in the Champain County\n          community. Nearly 15% of residents must deal with food insecurity.\n          Many of these individuals are also ineligible for federal nutrition\n          programs and must rely on local food pantries for meals.\n        </Typography>\n        <Typography component=\"p\" className={classes.p}>\n          On top of this, many of these individuals speak limited English,\n          making it difficult for them to communicate their needs to food pantry\n          staff. With Pan-Lang, our mission is to break this language barrier\n          and provide a more efficient method of supporting those in need.\n        </Typography>\n      </Container>\n\n      {/* Team */}\n      <Container className={classes.team}>\n        <Typography variant=\"h3\">Our Team</Typography>\n        <Container className={classes.avatarGroup}>\n          {team.map((member) => (\n            <AvatarCard\n              key={member.src}\n              name={member.name}\n              src={member.src}\n              alt={member.name}\n              role={member.role}\n              github={member.github}\n            />\n          ))}\n        </Container>\n      </Container>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  p: {\n    marginTop: 8,\n    marginBottom: 8,\n  },\n  team: {\n    textAlign: 'center',\n    width: '100%',\n    paddingBottom: 50,\n  },\n  avatarGroup: {\n    marginTop: 15,\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'stretch',\n    justifyContent: 'space-around',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default About;\n","export const ORDER_STEPS = [\n  'Enter patron info',\n  'Select order items',\n  'Review order'\n];","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { makeStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { ORDER_STOCK, LANDING } from '../constants/Routes';\nimport { ORDER_STEPS } from '../constants/Order';\nimport { auth } from '../firebase';\n\n// Validation schema for order form\nconst orderSchema = Yup.object({\n  firstName: Yup.string().required('First name is required'),\n  lastName: Yup.string().required('Last name is required'),\n  adults: Yup.number().integer().positive().required('# of adults is required'),\n  children: Yup.number()\n    .integer()\n    .positive()\n    .required('# of children is required'),\n  zipcode: Yup.string()\n    .length(5)\n    .test(\n      'Valid ZIP code',\n      'Must be a valid US ZIP code',\n      (value) => /^\\d+$/.test(value) // test for digits only\n    )\n    .required('ZIP code is required'),\n  orderNotes: Yup.string().required(),\n});\n\n/**\n * Page to fill out form for patron's order\n */\nfunction OrderForm() {\n  const history = useHistory();\n\n  // Immediately send user back to homepage if not signed in\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      history.push(LANDING);\n    }\n  }, [history]);\n\n  /**\n   * Called upon form submission\n   * @param {Object} personInfo info from submitted form\n   */\n  function onSubmit(personInfo) {\n    // Redirects user to order stock page with the form data\n    history.push(ORDER_STOCK, { fromForm: true, personInfo });\n  }\n\n  const classes = useStyles();\n  const requiredText = '*Required';\n  return (\n    <Container maxWidth=\"sm\" className={classes.page}>\n      <Typography variant=\"h1\" className={classes.title}>\n        Order Form\n      </Typography>\n\n      <Stepper activeStep={0} className={classes.stepper}>\n        {ORDER_STEPS.map((step) => (\n          <Step key={step}>\n            <StepLabel>{step}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {/* Form */}\n      <Formik\n        validationSchema={orderSchema}\n        onSubmit={onSubmit}\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          adults: '',\n          children: '',\n          zipcode: '',\n          orderNotes: 'order notes',\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          handleReset,\n          values,\n          touched,\n          isValid,\n          errors,\n        }) => (\n          <Paper className={classes.formPaper}>\n            <Typography variant=\"h3\" className={classes.subtitle}>\n              Enter patron information\n            </Typography>\n\n            {/* First name, last name */}\n            <Grid container spacing={1}>\n              {/* First name */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"firstName\"\n                  label=\"First name\"\n                  required\n                  value={values.firstName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={\n                    touched.firstName ? errors.firstName : requiredText\n                  }\n                  error={touched.firstName && Boolean(errors.firstName)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n\n              {/* Last name */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"lastName\"\n                  label=\"Last name\"\n                  required\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.lastName ? errors.lastName : requiredText}\n                  error={touched.lastName && Boolean(errors.lastName)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n            </Grid>\n\n            {/* # of adults, # of children */}\n            <Grid container spacing={1}>\n              {/* # of adults */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"adults\"\n                  type=\"number\"\n                  required\n                  label=\"# of Adults in Household\"\n                  value={values.adults}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.adults ? errors.adults : requiredText}\n                  error={touched.adults && Boolean(errors.adults)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n\n              {/* # of children */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  id=\"children\"\n                  type=\"number\"\n                  required\n                  label=\"# of Children in Household\"\n                  value={values.children}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.children ? errors.children : requiredText}\n                  error={touched.children && Boolean(errors.children)}\n                  variant=\"outlined\"\n                  fullWidth\n                  className={classes.formField}\n                />\n              </Grid>\n            </Grid>\n\n            {/* Zip code */}\n            <TextField\n              id=\"zipcode\"\n              type=\"number\"\n              required\n              label=\"Zip/Postal code\"\n              value={values.zipcode}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.zipcode ? errors.zipcode : requiredText}\n              error={touched.zipcode && Boolean(errors.zipcode)}\n              variant=\"outlined\"\n              fullWidth\n              className={classes.formField}\n            />\n\n            {/* Submit and clear buttons */}\n            <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n              <Button\n                onClick={handleSubmit}\n                className={classes.submit}\n              >\n                Select order\n              </Button>\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={handleReset}\n              >\n                Clear\n              </Button>\n            </div>\n          </Paper>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    paddingBottom: '120px',\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: theme.typography.h3.fontSize,\n  },\n  stepper: {\n    marginTop: theme.spacing(1),\n  },\n  formPaper: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(3),\n    [theme.breakpoints.down('md')]: {\n      padding: theme.spacing(2),\n    },\n  },\n  subtitle: {\n    fontSize: theme.typography.h5.fontSize,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  submit: {\n    backgroundColor: '#16AB8D',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    color: '#FFFFFF',\n    marginLeft: theme.spacing(2),\n  },\n  formField: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default OrderForm;\n","import React from 'react';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n/**\n * Component signifying an error has occurred, or\n * a different specified severity\n * See: https://material-ui.com/components/alert/#alert\n */\nfunction ErrorAlert({ heading = '', body, severity = 'error', onClose }) {\n  return (\n    <Alert severity={severity} onClose={onClose}>\n      {heading.length > 0 && <AlertTitle>{heading}</AlertTitle>}\n      {body}\n    </Alert>\n  );\n}\n\nexport default ErrorAlert;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Centered spinner to signify loading\n */\nfunction Loading() {\n  const classes = useStyles();\n  return (\n    <Container className={classes.spinnerDiv}>\n      <CircularProgress />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  spinnerDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default Loading;\n","import Client from './Client';\n\nconst STOCK_ENDPOINT = '/stock';\n\nexport async function fetchStock(uid) {\n  return await Client.get(`${STOCK_ENDPOINT}?pantry=${uid}`);\n}\n\nexport async function createStockItem(item) {\n  return await Client.post(STOCK_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\nexport async function updateStockCount(updatedItem) {\n\n  return await Client.put(STOCK_ENDPOINT, updatedItem)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      console.error(e)\n      return false;\n    })\n}\n","import React, { useState } from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Fade from '@material-ui/core/Fade';\nimport Modal from '@material-ui/core/Modal';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorAlert from './ErrorAlert';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { updateStockCount } from '../api/Stock';\nimport { auth } from '../firebase';\n\n/**\n * Popup modal for editing the stock count of an item\n */\nfunction StockModal({\n  show,\n  handleClose,\n  getStock,\n  stockId,\n  stockName,\n  stockCount,\n}) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  /**\n   * Sends PUT request with updated stock count from input\n   * @param {Object} formSubmission { newCount } containing updated count\n   */\n  async function onSubmit(formSubmission) {\n    setLoading(true);\n\n    const updatedItem = {\n      pantry: auth.currentUser.uid,\n      _id: stockId,\n      newCount: parseInt(formSubmission.newCount)\n    };\n\n    const updateIsSuccessful = await updateStockCount(updatedItem);\n\n    setLoading(false);\n\n    if (!updateIsSuccessful) {\n      setError(true);\n    } else {\n      handleClose();\n      getStock(500);\n    }\n  }\n\n  const classes = useStyles();\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <Formik\n            validationSchema={amountSchema}\n            onSubmit={onSubmit}\n            initialValues={{\n              newCount: '',\n            }}\n          >\n            {/* Formik component */}\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              isValid,\n              errors,\n            }) => (\n              <>\n                <Typography variant=\"h5\">\n                  Edit amount for: {stockName}\n                </Typography>\n\n                {/* Text field for entering new amount */}\n                {!loading && !error && (\n                  <Container className={classes.form}>\n                    <Typography>Current amount: {stockCount}</Typography>\n                    <form onSubmit={handleSubmit}>\n                      <TextField\n                        id=\"newCount\"\n                        type=\"number\"\n                        label=\"Enter new item count\"\n                        value={values.newCount}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={touched.newCount ? errors.newCount : ''}\n                        error={touched.newCount && Boolean(errors.newCount)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </form>\n                  </Container>\n                )}\n\n                {/* Message when processing request */}\n                {loading && (\n                  <Typography>\n                    Updating stock count for {stockName}...\n                  </Typography>\n                )}\n\n                {/* Error message */}\n                {error && <ErrorAlert body=\"An error occurred.\" />}\n\n                {/* Action buttons */}\n                {!loading && (\n                  <Container className={classes.actions}>\n                    {/* Submit button */}\n                    {!error && (\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        className={classes.button}\n                      >\n                        Save new amount\n                      </Button>\n                    )}\n\n                    {/* Close modal button */}\n                    <Button\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      className={classes.closeButton}\n                      onClick={() => {\n                        // Set timer so buttons don't reappear during\n                        // fade out animation\n                        setTimeout(() => {\n                          setError(false);\n                          setLoading(false);\n                        }, 120);\n\n                        handleClose();\n                      }}\n                    >\n                      Close\n                    </Button>\n                  </Container>\n                )}\n              </>\n            )}\n          </Formik>\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n}\n\n// Schema for updating count\nconst amountSchema = Yup.object({\n  newCount: Yup.number().integer().moreThan(-1).required(),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n  },\n  button: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    width: '100%',\n    marginBottom: 5,\n  },\n  closeButton: {\n    width: '100%',\n  },\n  form: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default StockModal;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Card component for displaying basic stock information\n * @param {{ \n *   stockItem: Object, \n *   languageTag: String, \n *   hasLanguage: Boolean, \n *   handleShow: Function, \n *   disableClick: Boolean, \n *   visibleStockCount: Number, \n *   showEnglishOnly: Boolean \n * }}\n */\nfunction StockInfo({\n  stockItem,\n  languageTag,\n  hasLanguage,\n  handleShow,\n  disableClick = false,\n  visibleStockCount = stockItem.count,\n  showEnglishOnly,\n  style,\n}) {\n  /**\n   * Gets a String representing an item's timestamp\n   * @param {Object} stockItem\n   */\n  function getItemDateString(stockItem) {\n    let seconds = stockItem.timestamp._seconds;\n    // Date constructor takes in milliseconds\n    return new Date(seconds * 1000).toDateString().substr(3);\n  }\n\n  const classes = useStyles();\n  return (\n    <Card\n      className={classes.card}\n      onClick={disableClick ? null : handleShow}\n      style={style}\n    >\n      {/* Action area makes entire component focusable */}\n      <CardActionArea\n        className={classes.cardAction}\n        disabled={disableClick}\n        disableRipple\n      >\n        <CardContent>\n          {/* Top content of card */}\n          <Box className={classes.topContent}>\n            {/* Name and translation (left) */}\n            <Box className={classes.nameContainer}>\n              {/* Translated name */}\n              <Typography variant=\"h4\" className={classes.name}>\n                {showEnglishOnly || !hasLanguage\n                  ? stockItem.name\n                  : stockItem.translations[languageTag]}\n              </Typography>\n\n              {/* English translation, if necessary */}\n              <Typography variant=\"h5\" className={classes.subname}>\n                {showEnglishOnly || !hasLanguage ? '' : stockItem.name}\n              </Typography>\n\n              {/* No translation alert */}\n              {/* If translated name is required but not present */}\n              {!showEnglishOnly && !hasLanguage && (\n                <Chip\n                  className={classes.noTranslation}\n                  size=\"small\"\n                  color=\"secondary\"\n                  label={'Translation unavailable'}\n                />\n              )}\n            </Box>\n\n            {/* Count (right) */}\n            <Box className={classes.countContainer}>\n              <Typography className={classes.countHeader}>Count</Typography>\n              <Typography className={classes.count}>\n                {visibleStockCount}\n              </Typography>\n            </Box>\n          </Box>\n\n          {/* Bottom content */}\n          <Box className={classes.bottomContent}>\n            {/* Date */}\n            <Typography className={classes.date}>\n              Updated:{' '}\n              {stockItem.timestamp !== undefined\n                ? getItemDateString(stockItem)\n                : 'Unavailable'}\n            </Typography>\n\n            {/* Out of stock alert */}\n            {stockItem.count <= 0 && (\n              <Chip size=\"small\" color=\"secondary\" label={'Out of stock'} />\n            )}\n          </Box>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(1),\n    borderRadius: '30px',\n    maxWidth: '100vw',\n  },\n  cardAction: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    [theme.breakpoints.only('sm')]: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(0),\n    },\n  },\n  topContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  bottomContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  },\n  nameContainer: {},\n  name: {\n    fontWeight: 'bold',\n    fontSize: '25px',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '19px',\n    },\n  },\n  noTranslation: {\n    marginTop: 5,\n  },\n  subname: {\n    marginTop: -8,\n    [theme.breakpoints.down('md')]: {\n      fontSize: '18px',\n      marginTop: -4,\n    },\n  },\n  date: {\n    color: 'gray',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '12px',\n    },\n  },\n  countContainer: {},\n  countHeader: {\n    textAlign: 'right',\n  },\n  count: {\n    marginTop: -10,\n    fontWeight: 'bold',\n    fontSize: '40px',\n    textAlign: 'right',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '27px',\n    },\n  },\n  button: {\n    alignSelf: 'center',\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n  },\n}));\n\nexport default StockInfo;\n","import { useState, useEffect } from 'react';\n\n/**\n * Checks whether given stock item contains a translation\n * @param {String} languageTag Tag (`en`, `es`, etc.) specifying language of translation\n * @param {Object} stockItem single stock item from API\n */\nfunction useLanguage(languageTag, stockItem) {\n  const [hasLanguage, setHasLanguage] = useState(false);\n\n  // Determine whether stock item has translation in specified language\n  useEffect(() => {\n    // Check that translations are present\n    const translationsLoaded = Boolean(stockItem.translations);\n\n    // Check if translation in specified language is present\n    setHasLanguage(\n      translationsLoaded && stockItem.translations[languageTag] !== undefined\n    );\n  }, [languageTag, stockItem]);\n\n  return hasLanguage;\n}\n\nexport default useLanguage;\n","import React, { useState } from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport StockModal from './StockModal';\nimport StockInfo from './StockInfo';\nimport useLanguage from '../hooks/useLanguage';\n\n/**\n * Card component that displays a stock item and allows\n * for editing its amount through a modal popup\n */\nfunction StockCard({ stockItem, getStock, languageTag = 'en' }) {\n  const [showAmountModal, setShowAmountModal] = useState(false);\n  const hasLanguage = useLanguage(languageTag, stockItem);\n\n  // Handlers for showing/closing modal when editing item amount\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  return (\n    <>\n      <Fade in={true} exit={true} enter={true}>\n        <StockInfo\n          stockItem={stockItem}\n          languageTag={languageTag}\n          hasLanguage={hasLanguage}\n          handleShow={handleShow}\n          showEnglishOnly={languageTag === 'en'}\n        />\n      </Fade>\n\n      {/* Popup modal for editing stock count */}\n      <StockModal\n        show={showAmountModal}\n        handleClose={handleClose}\n        getStock={getStock}\n        stockName={\n          hasLanguage ? stockItem.translations[languageTag] : stockItem.name\n        }\n        stockId={stockItem._id}\n        stockCount={stockItem.count}\n      />\n    </>\n  );\n}\n\nexport default StockCard;\n","import React from 'react';\nimport { MenuItem, Menu, Button, makeStyles } from '@material-ui/core';\n\n/**\n * Menu to select language when viewing Stock\n * @param {{\n *   languages: Array<{ tag: String, locale: String }>,\n *   currentLanguage: { tag: String, locale: String },\n *   setLanguage: Function,\n *   isError: Error | Boolean\n * }}\n */\nfunction LanguageMenu({\n  languages = [],\n  currentLanguage,\n  setLanguage,\n  isError = false,\n}) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  /** Toggler for opening/closing menu */\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  /** Handler for selecting a new language */\n  const handleMenuItemClick = (event, index) => {\n    const locale = event.currentTarget.textContent;\n    const selectedLanguage = languages.find((lang) => lang.locale === locale);\n    setLanguage(selectedLanguage);\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  };\n\n  /** Closes menu */\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      {/* Button to toggle menu */}\n      <Button\n        variant=\"contained\"\n        onClick={handleClickListItem}\n        className={classes.toggle}\n        size=\"small\"\n      >\n        {currentLanguage.locale}\n      </Button>\n\n      {/* Language menu */}\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {languages.map((lang, index) => (\n          <MenuItem\n            key={lang.tag}\n            selected={index === selectedIndex}\n            onClick={(event) => handleMenuItemClick(event, index)}\n            className={classes.menuItem}\n          >\n            {lang.locale}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  menuItem: {\n    textAlign: 'center',\n  },\n  toggle: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    width: '100%',\n    marginTop: 5,\n    marginBottom: 5,\n  }\n}));\n\nexport default LanguageMenu;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Search from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core';\nimport LanguageMenu from '../components/LanguageMenu';\n\n/**\n * Search bar when displaying stock items\n * - Filters stock by name\n * - Changes language through dropdown\n * - Refreshes stock\n */\nfunction SearchBar({\n  stock,\n  getFilteredStockItems,\n  setNameQuery,\n  getStock,\n  LANGUAGES,\n  language,\n  setLanguage,\n  error,\n}) {\n  const classes = useStyles();\n  return (\n    <Paper elevation={1} className={classes.searchPaper}>\n      <Box display=\"flex\" alignItems=\"center\">\n        {/* Search bar */}\n        <TextField\n          className={classes.search}\n          type=\"search\"\n          id=\"searchbar\"\n          label={`Showing ${getFilteredStockItems().length} of ${\n            stock.length\n          } items`}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            ),\n          }}\n          onChange={(event) => setNameQuery(event.target.value.toLowerCase())}\n        />\n\n        {/* Refresh stock button */}\n        <IconButton size=\"medium\" color=\"primary\" onClick={getStock}>\n          <RefreshIcon />\n        </IconButton>\n\n        {/* Language menu */}\n        <LanguageMenu\n          languages={LANGUAGES}\n          currentLanguage={language}\n          setLanguage={setLanguage}\n          isError={error}\n        />\n      </Box>\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  searchPaper: {\n    margin: 5,\n    padding: theme.spacing(2),\n  },\n  search: {\n    width: '95%',\n  },\n}));\n\nexport default SearchBar;\n","const LANGUAGES = [\n  { tag: 'en', locale: 'English' },\n  { tag: 'zh-CN', locale: 'Chinese (Simplified)' },\n  { tag: 'es', locale: 'Spanish' },\n  { tag: 'fr', locale: 'French' },\n  { tag: 'de', locale: 'German' },\n];\n\nexport default LANGUAGES;\n","import { useEffect, useState } from 'react';\nimport { fetchStock } from '../api/Stock';\nimport { auth } from '../firebase';\n\n/**\n * Handles state of fetching stock items from API\n * @return {[Array, Boolean, Error, Function]}\n */\nfunction useStock() {\n  const [stock, setStock] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  /**\n   * Fetches stock from API and stores in state\n   * @param {Number} timeout ms to wait before fetching stock\n   */\n  function getStock(timeout = 0) {\n    // Set stock empty to begin loading spinner\n    setStock([]);\n    setError(null);\n    setLoading(true);\n\n    // Fetch stock after designated time\n    setTimeout(() => {\n      fetchStock(auth.currentUser.uid)\n        .then((res) => {\n          setStock(res.data);\n          setLoading(false);\n        })\n        .catch((e) => {\n          setError(e);\n          setLoading(false);\n        });\n    }, timeout);\n  }\n\n  /**\n   * Fetch stock as soon as page is rendered, if user is signed in\n   */\n  useEffect(() => {\n    if (Boolean(auth.currentUser)) {\n      getStock();\n    }\n  }, []);\n\n  // Return state of stock\n  return [stock, loading, error, getStock];\n}\n\nexport default useStock;","import { useState } from 'react';\n\n/**\n * Contains logic for searching stock items by English and translated names\n * @param {Array<{ name: String, translations: Object }>} stock list of stock items\n * @param {String} languageTag language tag, e.g. `en`, `es`, `zh-CN`, etc.\n */\nfunction useNameSearch(stock, languageTag) {\n  const [nameQuery, setNameQuery] = useState('');\n\n  /**\n   * Returns filtered stock array based on search queries\n   * Name query: allows if EITHER English or translated name includes query\n   * @return {Array<{ name: String, translations: Object }>} stock list of stock items\n   * \n   */\n  function getFilteredStockItems() {\n    return stock.filter((item) => {\n      // Check if query is included in English name\n      const inEnglishName = item.name.toLowerCase().includes(nameQuery);\n\n      let inTranslatedName = false;\n\n      // Check first if translations have loaded\n      let translations = item.translations;\n      if (Boolean(translations) && translations[languageTag] !== undefined) {\n        // Check if query is included in translated name\n        inTranslatedName = item.translations[languageTag]\n          .toLowerCase()\n          .includes(nameQuery);\n      }\n      return inEnglishName || inTranslatedName;\n    });\n  }\n\n  return [setNameQuery, getFilteredStockItems];\n}\n\nexport default useNameSearch;\n","import React, { useState } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { createStockItem } from '../api/Stock';\nimport { auth } from '../firebase';\nimport { makeStyles } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n/**\n * Form component that handles creation of new stock items\n */\nfunction StockInput({ getStock, defaultExpanded = false }) {\n  const [loading, setLoading] = useState(false);\n  /**\n   * Handles sending new stock item requests to API\n   * @param {Object} values { name, count } from form\n   */\n  async function onSubmit(values) {\n    setLoading(true);\n\n    // Create item with user's id\n    const item = {\n      name: values.name,\n      count: parseInt(values.count),\n      pantry: auth.currentUser.uid,\n    };\n\n    // Send request to API and stop loading once promise is resolved\n    await createStockItem(item);\n\n    setLoading(false);\n    getStock(500);\n  }\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.container}>\n      <Accordion defaultExpanded={defaultExpanded}>\n        {/* Accordion toggle area */}\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"stock-input-content\"\n          id=\"stock-input-header\"\n        >\n          <Typography>Insert a stock item</Typography>\n        </AccordionSummary>\n\n        {/* Accordion expandable area */}\n        <AccordionDetails className={classes.details}>\n          <Formik\n            validationSchema={itemSchema}\n            onSubmit={onSubmit}\n            initialValues={{\n              name: '',\n              count: 1,\n            }}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              handleReset,\n              isSubmitting,\n              values,\n              touched,\n              isValid,\n              errors,\n            }) => (\n              <>\n                {/* Item name text field */}\n                <TextField\n                  id=\"name\"\n                  label=\"Enter new item name\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.name ? errors.name : ''}\n                  error={touched.name && Boolean(errors.name)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n\n                {/* Item count text field */}\n                <TextField\n                  id=\"count\"\n                  label=\"Enter new item count\"\n                  value={values.count}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  helperText={touched.count ? errors.count : ''}\n                  error={touched.count && Boolean(errors.count)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n\n                {/* Form buttons */}\n                <Container className={classes.actions}>\n                  {/* Submit button */}\n                  <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    disabled={loading || isSubmitting}\n                    className={classes.button}\n                    onClick={handleSubmit}\n                  >\n                    {isSubmitting ? 'Adding...' : 'Add item'}\n                  </Button>\n\n                  {/* Clear button */}\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    onClick={handleReset}\n                  >\n                    Clear\n                  </Button>\n                </Container>\n              </>\n            )}\n          </Formik>\n        </AccordionDetails>\n      </Accordion>\n    </Container>\n  );\n}\n\n// Schema for new stock item\nconst itemSchema = Yup.object({\n  name: Yup.string().required(),\n  count: Yup.number().integer().moreThan(-1).required(),\n});\n\n// Styling\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  card: {\n    width: '100%',\n    marginTop: 5,\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  actions: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingBottom: 0,\n  },\n  button: {\n    backgroundColor: '#16AB8D',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default StockInput;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n/** Material UI imports */\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\n\n/** Component imports */\nimport ErrorAlert from '../components/ErrorAlert';\nimport Loading from '../components/Loading';\nimport StockCard from '../components/StockCard';\nimport SearchBar from '../components/SearchBar';\n\n/** Constants, Firebase, API */\nimport LANGUAGES from '../constants/Languages';\nimport { LANDING } from '../constants/Routes';\nimport { auth } from '../firebase';\n\n/** Custom hooks */\nimport useStock from '../hooks/useStock';\nimport useNameSearch from '../hooks/useNameSearch';\nimport StockInput from '../components/StockInput';\n\n/**\n * Page displaying the stock of food pantry with options for language\n */\nfunction Stock() {\n  const [stock, loading, error, getStock] = useStock();\n  const [language, setLanguage] = useState(LANGUAGES[0]);\n  const [setNameQuery, getFilteredStockItems] = useNameSearch(\n    stock,\n    language.tag\n  );\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('md'));\n  const history = useHistory();\n\n  /**\n   * Fetch stock as soon as page is rendered, if user is signed in\n   */\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      history.push(LANDING);\n    }\n  }, [history]);\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h1\" className={classes.title}>\n        Stock Dashboard\n      </Typography>\n\n      {/* Two column desktop layout, one column mobile layout */}\n      <Grid container spacing={isMobile ? 0 : 2}>\n        {/* Left column */}\n        <Grid item xs={12} md={4}>\n          {/* On mobile: hide options in accordion */}\n          {isMobile && <StockInput getStock={getStock} />}\n\n          {/* On desktop: keep options bar open */}\n          {!isMobile && (\n            <Paper elevation={2} className={classes.column}>\n              <Typography variant=\"h5\" className={classes.subheading}>\n                Options\n              </Typography>\n              <StockInput getStock={getStock} defaultExpanded={true} />\n            </Paper>\n          )}\n        </Grid>\n\n        {/* Right column */}\n        <Grid item xs={12} md={8}>\n          {/* Search bar */}\n          <SearchBar\n            LANGUAGES={LANGUAGES}\n            stock={stock}\n            getFilteredStockItems={getFilteredStockItems}\n            error={error}\n            getStock={getStock}\n            language={language}\n            setLanguage={setLanguage}\n            setNameQuery={setNameQuery}\n          />\n\n          {/* Stock items */}\n          {stock &&\n            getFilteredStockItems().map((item) => (\n              <StockCard\n                stockItem={item}\n                getStock={getStock}\n                // Key of English name is always 'name'\n                languageTag={language.tag}\n                key={item.name}\n              />\n            ))}\n\n          {/* Alert when no stock is found */}\n          {!loading && !error && stock.length === 0 && (\n            <ErrorAlert\n              severity=\"info\"\n              body=\"No stock items found. Insert one in the Options menu!\"\n            />\n          )}\n\n          {/* Loading spinner */}\n          {loading && <Loading />}\n\n          {/* Error alert */}\n          {error && (\n            <ErrorAlert\n              heading=\"Error\"\n              body={`An error occurred while trying to get the stock. ${error}`}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: 2,\n      paddingRight: 2,\n    },\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: theme.typography.h3.fontSize,\n    [theme.breakpoints.down('md')]: {\n      fontSize: theme.typography.h4.fontSize,\n    },\n    marginBottom: theme.spacing(2),\n  },\n  subheading: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n  },\n  column: {\n    padding: theme.spacing(2),\n  },\n  searchPaper: {\n    margin: 5,\n    padding: theme.spacing(2),\n  },\n  search: {\n    width: '95%',\n  },\n  details: {\n    display: 'block',\n  },\n  info: {\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '10px',\n    },\n  },\n}));\n\nexport default Stock;\n","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Component that wraps children in accordion\n */\nfunction AccordionWrapper({ summary, children }) {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"stock-input-content\"\n        id=\"stock-input-header\"\n      >\n        <Typography>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.details}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  details: {\n    display: 'block',\n  },\n}));\n\nexport default AccordionWrapper;\n","import React, { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport Modal from '@material-ui/core/Modal';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n/**\n * Allows user to select how much of a stock item to request\n */\nfunction OrderModal({\n  show,\n  handleClose,\n  stockId,\n  stockName,\n  stockCount,\n  onRequest,\n  defaultAmount = 1,\n}) {\n  const [selectedAmount, setSelectedAmount] = useState(defaultAmount);\n\n  /** Decreases selected amount by 1 */\n  function handleDecrease() {\n    if (selectedAmount > 1) setSelectedAmount(selectedAmount - 1);\n  }\n\n  /** Increases selected amount by 1 */\n  function handleIncrease() {\n    if (selectedAmount < stockCount) setSelectedAmount(selectedAmount + 1);\n  }\n\n  /**\n   * Assigns new selected amount based on text field input from `onChange`\n   */\n  function changeSelectedAmount(event) {\n    const amount = event.currentTarget.valueAsNumber;\n    if (isNaN(Number(amount)) || amount < 1) {\n      setSelectedAmount(1);\n    } else if (amount > stockCount) {\n      setSelectedAmount(stockCount);\n    } else {\n      setSelectedAmount(amount);\n    }\n  }\n\n  /**\n   * Adds requested item to order list\n   */\n  function submitRequest() {\n    const requestedItem = {\n      id: stockId,\n      name: stockName,\n      requestedCount: selectedAmount,\n      countAfterRequest: stockCount - selectedAmount,\n    };\n\n    onRequest(requestedItem);\n    handleClose();\n  }\n\n  // Wrapper for bolding text within a component\n  const Bold = ({ children }) => (\n    <font style={{ fontWeight: 'bold' }}>{children}</font>\n  );\n\n  const classes = useStyles();\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={show}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          {/* Heading */}\n          <Typography variant=\"h5\">\n            Select requested amount for: <Bold>{stockName}</Bold>\n          </Typography>\n          <Divider />\n\n          {/* Counts */}\n          <Grid container spacing={0}>\n            <Grid item xs={12} md={6}>\n              <Typography>\n                Current amount: <Bold>{stockCount}</Bold>\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Typography>\n                Amount after request: <Bold>{stockCount - selectedAmount}</Bold>\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {/* Stock count selection */}\n          <ButtonGroup fullWidth className={classes.buttonGroup}>\n            {/* Decrease */}\n            <IconButton\n              onClick={handleDecrease}\n              className={classes.incrementor}\n            >\n              <RemoveIcon />\n            </IconButton>\n\n            {/* Enter requested amount */}\n            <TextField\n              type=\"number\"\n              placeholder={selectedAmount}\n              value={selectedAmount}\n              onChange={changeSelectedAmount}\n              className={classes.textField}\n            />\n\n            {/* Increase */}\n            <IconButton\n              onClick={handleIncrease}\n              className={classes.incrementor}\n            >\n              <AddIcon />\n            </IconButton>\n          </ButtonGroup>\n\n          {/* Request button */}\n          <Button className={classes.button} onClick={submitRequest}>\n            Request amount\n          </Button>\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n    minWidth: '20vw',\n  },\n  button: {\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  buttonGroup: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  closeButton: {\n    width: '100%',\n  },\n  form: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  incrementor: {\n    width: '25%',\n  },\n  textField: {\n    maxWidth: '50%',\n  },\n}));\n\nexport default OrderModal;\n","import React, { useState } from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport OrderModal from './OrderModal';\nimport StockInfo from './StockInfo';\nimport useLanguage from '../hooks/useLanguage';\n\n/**\n * Stock item card on order screen\n */\nfunction StockOrderCard({\n  stockItem,\n  getStock,\n  languageTag = 'en',\n  onRequest,\n  requestedCount = 0,\n}) {\n  const [showOrderModal, setShowAmountModal] = useState(false);\n  const hasLanguage = useLanguage(languageTag, stockItem);\n\n  // Handlers for showing/closing modal when ordering item\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  /**\n   * If requested, shows stock count before and after order request\n   */\n  function getVisibleStockCount() {\n    return requestedCount\n      ? `${stockItem.count} → ${stockItem.count - requestedCount}`\n      : stockItem.count;\n  }\n\n  return (\n    <>\n      <Fade in exit>\n        <StockInfo\n          stockItem={stockItem}\n          languageTag={languageTag}\n          hasLanguage={hasLanguage}\n          handleShow={handleShow}\n          showEnglishOnly={languageTag === 'en'}\n          visibleStockCount={getVisibleStockCount()}\n          disableClick={stockItem.count <= 0}\n        />\n      </Fade>\n\n      <OrderModal\n        show={showOrderModal}\n        handleClose={handleClose}\n        stockName={stockItem.name}\n        stockId={stockItem._id}\n        stockCount={stockItem.count}\n        onRequest={onRequest}\n      />\n    </>\n  );\n}\n\nexport default StockOrderCard;\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Fade from '@material-ui/core/Fade';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\nimport OrderModal from './OrderModal';\n\n/**\n * Card displaying a requested stock item on Order Stock page\n */\nfunction RequestedItemCard({\n  requestedItem,\n  onRequest,\n  removeRequestedItem,\n  showActions = true,\n}) {\n  const { id, name, requestedCount, countAfterRequest } = requestedItem;\n  const [showOrderModal, setShowAmountModal] = useState(false);\n\n  // Handlers for showing/closing modal when ordering item\n  const handleClose = () => setShowAmountModal(false);\n  const handleShow = () => setShowAmountModal(true);\n\n  // Removes requested item from list using callback\n  function removeItem() {\n    removeRequestedItem(requestedItem);\n  }\n\n  const classes = useStyles();\n  return (\n    <>\n      <Fade in>\n        <Card className={classes.card} variant=\"outlined\" raised>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            {/* Item name and count */}\n            <CardContent display=\"flex\">\n              <Typography>\n                {name}:{' '}\n                <font style={{ fontWeight: 'bold' }}>{requestedCount}</font>\n              </Typography>\n            </CardContent>\n\n            {/* Edit count and remove item */}\n            {showActions && (\n              <CardActions>\n                <IconButton color=\"primary\" onClick={handleShow}>\n                  <EditIcon />\n                </IconButton>\n                <IconButton color=\"secondary\" onClick={removeItem}>\n                  <CancelIcon />\n                </IconButton>\n              </CardActions>\n            )}\n          </Box>\n        </Card>\n      </Fade>\n\n      <OrderModal\n        show={showOrderModal}\n        handleClose={handleClose}\n        stockName={name}\n        stockId={id}\n        stockCount={countAfterRequest + requestedCount}\n        onRequest={onRequest}\n        defaultAmount={requestedCount}\n      />\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default RequestedItemCard;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LANDING } from '../constants/Routes';\n\n/**\n * Dialog to let volunteer and patron review order before submitting\n */\nfunction ReviewDialog({\n  show,\n  handleClose,\n  submitRequest,\n  requestedStockItems,\n  personInfo,\n}) {\n  const [additionalNotes, setAdditionalNotes] = useState('');\n  const [requestLoading, setRequestLoading] = useState(false);\n  const [requestSuccess, setRequestSuccess] = useState(null);\n  const history = useHistory();\n  const { firstName, lastName, adults, children, zipcode } = personInfo;\n\n  async function submitOrder() {\n    setRequestLoading(true);\n    const success = await submitRequest(additionalNotes);\n\n    setRequestLoading(false);\n    setRequestSuccess(success);\n  }\n\n  function finishOrder() {\n    history.push(LANDING);\n  }\n\n  function getSubmitButtonText() {\n    if (requestLoading) {\n      return 'Submitting...';\n    } else if (requestSuccess) {\n      return 'Go to home page';\n    } else {\n      return 'Submit request';\n    }\n  }\n\n  const title = requestSuccess ? 'Order requested!' : 'Review Order';\n  const classes = useStyles();\n  return (\n    <Dialog\n      open={show}\n      onClose={handleClose}\n      scroll=\"paper\"\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\"\n      className={classes.modal}\n      fullWidth\n    >\n      <Fade in={show}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h3\" className={classes.title}>\n            {title}\n          </Typography>\n          <Divider className={classes.divider} />\n\n          {/* Hide items after request is received */}\n          {!requestSuccess && (\n            <Box>\n              {/* Requested items */}\n              <Typography variant=\"h4\" className={classes.subtitle}>\n                Requested items:\n              </Typography>\n              <List dense>\n                {requestedStockItems.map((r) => (\n                  <ListItem key={r.name}>\n                    <ListItemText primary={`${r.name}: ${r.requestedCount}`} />\n                  </ListItem>\n                ))}\n              </List>\n\n              {/* Patron info */}\n              <Typography variant=\"h4\" className={classes.subtitle}>\n                Patron info:\n              </Typography>\n              <List dense>\n                <ListItem>\n                  <ListItemText primary={firstName} secondary=\"First name\" />\n                </ListItem>\n                <ListItem>\n                  <ListItemText primary={lastName} secondary=\"Last name\" />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary={adults}\n                    secondary=\"# of adults in household\"\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary={children}\n                    secondary=\"# of children in household\"\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemText primary={zipcode} secondary=\"Zipcode\" />\n                </ListItem>\n              </List>\n\n              {/* Space for additional notes */}\n              <TextField\n                variant=\"filled\"\n                label=\"Additional notes\"\n                className={classes.additionalNotes}\n                onChange={(e) => setAdditionalNotes(e.currentTarget.value)}\n                multiline\n              />\n            </Box>\n          )}\n\n          {/* Submit button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={requestSuccess ? finishOrder : submitOrder}\n            disabled={requestLoading}\n            fullWidth\n          >\n            {getSubmitButtonText()}\n          </Button>\n        </Paper>\n      </Fade>\n    </Dialog>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  additionalNotes: {\n    marginBottom: theme.spacing(3),\n    width: '100%',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '15px',\n    minWidth: '30vw',\n  },\n  title: {\n    fontSize: theme.typography.h4.fontSize,\n    textAlign: 'center',\n  },\n  divider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  subtitle: {\n    fontSize: 20,\n  },\n}));\n\nexport default ReviewDialog;\n","import Client from './Client';\n\nexport const PEOPLE_ENDPOINT = '/people';\n\nexport async function addPersonInfo(item) {\n  Client.post(PEOPLE_ENDPOINT, item)\n    .then((res) => {\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n\nexport async function fetchPeople() {\n  const promise = await Client.get(PEOPLE_ENDPOINT);\n  return promise;\n}\n\nexport async function updatePerson(update) {\n  Client.put(PEOPLE_ENDPOINT, update)\n    .then((res) => {\n      console.log(res);\n      return true;\n    })\n    .catch((e) => {\n      return false;\n    });\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n/** Material UI Imports */\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\n\n/** Component imports */\nimport AccordionWrapper from '../components/AccordionWrapper';\nimport ErrorAlert from '../components/ErrorAlert';\nimport Loading from '../components/Loading';\nimport StockOrderCard from '../components/StockOrderCard';\nimport SearchBar from '../components/SearchBar';\nimport RequestedItemCard from '../components/RequestedItemCard';\nimport ReviewDialog from '../components/ReviewDialog';\n\n/** Constants, API, Firebase */\nimport LANGUAGES from '../constants/Languages';\nimport { LANDING, ORDER_FORM } from '../constants/Routes';\nimport { ORDER_STEPS } from '../constants/Order';\nimport { addPersonInfo } from '../api/People';\nimport { updateStockCount } from '../api/Stock';\nimport { auth } from '../firebase';\n\n/** Custom hooks */\nimport useStock from '../hooks/useStock';\nimport useNameSearch from '../hooks/useNameSearch';\n\n/**\n * Allows user to order stock items only after they've filled out form\n */\nfunction OrderStock() {\n  const history = useHistory();\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('md'));\n  const location = useLocation();\n  const fromForm = location.state !== undefined;\n\n  const [stock, loading, error, getStock] = useStock();\n  const [language, setLanguage] = useState(LANGUAGES[0]);\n  const [setNameQuery, getFilteredStockItems] = useNameSearch(\n    stock,\n    language.tag\n  );\n  const [showReview, setShowReview] = useState(false);\n\n  // Patron info from order form page, kept in local storage if necessary\n  const [personInfo] = useState(\n    fromForm\n      ? location.state.personInfo\n      : retrieveFromStorage('personInfo', undefined)\n  );\n\n  // List of requested items, kept in lcoal storage if necessary\n  const [requestedStockItems, setRequestedStockItems] = useState(\n    retrieveFromStorage('requestedStockItems', [])\n  );\n\n  useEffect(() => {\n    if (!Boolean(auth.currentUser)) {\n      // Send user back to homepage if not signed in\n      history.push(LANDING);\n    } else if (!personInfo) {\n      // Send user back to form if they didn't fill it out\n      history.push(ORDER_FORM);\n    } else {\n      localStorage.setItem('personInfo', JSON.stringify(personInfo));\n    }\n  }, [fromForm, history, personInfo]);\n\n  function retrieveFromStorage(key, defaultValue) {\n    const stored = localStorage.getItem(key);\n    if (stored) {\n      return JSON.parse(stored);\n    } else {\n      return defaultValue;\n    }\n  }\n\n  /**\n   * Callback for OrderModal to add item to items list\n   * @param {{\n   *  id: String,\n   *  name: String,\n   *  requestedCount: Number,\n   *  countAfterRequest: Number }} requestedItem\n   */\n  function onRequest(requestedItem) {\n    // Check if item is already in list\n    let alreadyRequested = requestedStockItems.find(\n      (item) => item.id === requestedItem.id\n    );\n\n    let updatedRequestedItems;\n\n    if (alreadyRequested === undefined) {\n      // If item isn't in list, simply add it\n      updatedRequestedItems = requestedStockItems.concat(requestedItem);\n    } else {\n      // If item is already in list, update its values instead of adding\n      let itemIndex = requestedStockItems.indexOf(alreadyRequested);\n\n      updatedRequestedItems = [...requestedStockItems];\n\n      // Replace old values with new values\n      updatedRequestedItems[itemIndex].requestedCount =\n        requestedItem.requestedCount;\n      updatedRequestedItems[itemIndex].countAfterRequest =\n        requestedItem.countAfterRequest;\n    }\n\n    // Update state and local storage\n    setRequestedStockItems(updatedRequestedItems);\n    localStorage.setItem(\n      'requestedStockItems',\n      JSON.stringify(updatedRequestedItems)\n    );\n  }\n\n  /**\n   * Removes a requested item from list, if present\n   * @param requestedItem item in order to remove\n   */\n  function removeRequestedItem(requestedItem) {\n    const index = requestedStockItems.indexOf(requestedItem);\n    if (index > -1) {\n      const updatedRequest = [...requestedStockItems];\n      updatedRequest.splice(index, 1);\n      setRequestedStockItems(updatedRequest);\n    }\n  }\n\n  function writeRequestToNotes() {\n    let orderNotes = '';\n    requestedStockItems.forEach((item) => {\n      orderNotes += item.name + ': ' + item.requestedCount + ', ';\n    });\n    return orderNotes.slice(0, -2);\n  }\n\n  async function submitRequest(additionalNotes) {\n    // Send full person info to API\n    const requestBody = {\n      pantry: auth.currentUser.uid,\n      firstName: personInfo.firstName,\n      lastName: personInfo.lastName,\n      adults: parseInt(personInfo.adults),\n      children: parseInt(personInfo.children),\n      zipcode: personInfo.zipcode,\n      'order-notes': writeRequestToNotes(),\n      additionalNotes: additionalNotes,\n      fulfilled: false,\n    };\n    \n    await addPersonInfo(requestBody);\n\n    // Send updates for each requested item to API\n    const stockUpdatePromises = requestedStockItems.map((item) => {\n      let body = {\n        pantry: auth.currentUser.uid,\n        _id: item.id,\n        newCount: item.countAfterRequest,\n      };\n\n      return updateStockCount(body);\n    });\n\n    // TODO: handle case where some update doesn't go through\n    // Make sure all updates are good\n    await Promise.all(stockUpdatePromises);\n\n    // Clear local storage\n    localStorage.removeItem('requestedStockItems');\n    localStorage.removeItem('personInfo');\n\n    return true;\n  }\n\n  /**\n   * Gets the requested count of a stock item, or 0 if not requested\n   * @param {String} itemId id of requested stock item\n   */\n  function getRequestedCount(itemId) {\n    let requestedItem = requestedStockItems.find((item) => item.id === itemId);\n    if (Boolean(requestedItem)) {\n      return requestedItem.requestedCount;\n    } else {\n      return 0;\n    }\n  }\n\n  const classes = useStyles();\n  const orderTitle = `Current order (${requestedStockItems.length})`;\n  const buttonText =\n    requestedStockItems.length > 0 ? 'Review order' : 'Select items';\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h1\" className={classes.title}>\n        Select order for {personInfo.firstName} {personInfo.lastName}\n      </Typography>\n\n      <Stepper activeStep={showReview ? 2 : 1} className={classes.stepper}>\n        {ORDER_STEPS.map((step) => (\n          <Step key={step}>\n            <StepLabel>{step}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {/* Two column desktop layout, one column mobile layout */}\n      <Grid container spacing={isMobile ? 0 : 2}>\n        {/* Left column */}\n        <Grid item xs={12} md={5}>\n          {/* On mobile: hide order in accordion */}\n          {isMobile && (\n            <AccordionWrapper summary={orderTitle}>\n              {/* Requested items */}\n              {requestedStockItems.map((r) => (\n                <RequestedItemCard\n                  requestedItem={r}\n                  onRequest={onRequest}\n                  removeRequestedItem={removeRequestedItem}\n                  key={r.id}\n                />\n              ))}\n\n              {/* Submit button */}\n              <Button\n                fullWidth\n                onClick={() => setShowReview(true)}\n                disabled={requestedStockItems.length === 0}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                {buttonText}\n              </Button>\n            </AccordionWrapper>\n          )}\n\n          {/* On desktop: keep order open */}\n          {!isMobile && (\n            <Paper elevation={2} className={classes.column}>\n              {/* Title */}\n              <Typography variant=\"h5\" className={classes.subheading}>\n                {orderTitle}\n              </Typography>\n\n              {/* Requested items */}\n              {requestedStockItems.map((r) => (\n                <RequestedItemCard\n                  requestedItem={r}\n                  onRequest={onRequest}\n                  removeRequestedItem={removeRequestedItem}\n                  key={r.id}\n                />\n              ))}\n\n              {/* Submit button */}\n              <Button\n                fullWidth\n                onClick={() => setShowReview(true)}\n                disabled={requestedStockItems.length === 0}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                {buttonText}\n              </Button>\n            </Paper>\n          )}\n        </Grid>\n\n        {/* Right column */}\n        <Grid item xs={12} md={7}>\n          {/* Search bar */}\n          <SearchBar\n            LANGUAGES={LANGUAGES}\n            stock={stock}\n            getFilteredStockItems={getFilteredStockItems}\n            error={error}\n            getStock={getStock}\n            language={language}\n            setLanguage={setLanguage}\n            setNameQuery={setNameQuery}\n          />\n\n          {/* Stock items */}\n          {stock &&\n            personInfo &&\n            getFilteredStockItems().map((item) => (\n              <StockOrderCard\n                stockItem={item}\n                getStock={getStock}\n                languageTag={language.tag}\n                key={item._id}\n                onRequest={onRequest}\n                requestedCount={getRequestedCount(item._id)}\n              />\n            ))}\n\n          {/* Alert when no stock is found */}\n          {!loading && !error && stock.length === 0 && (\n            <ErrorAlert\n              severity=\"info\"\n              body=\"No stock items found. Insert one in the Options menu!\"\n            />\n          )}\n\n          {/* Loading spinner */}\n          {loading && <Loading />}\n\n          {/* Error alert */}\n          {error && (\n            <ErrorAlert\n              heading=\"Error\"\n              body={`An error occurred while trying to get the stock. ${error}`}\n            />\n          )}\n        </Grid>\n      </Grid>\n\n      {/* Review popup */}\n      <ReviewDialog\n        show={showReview}\n        handleClose={() => {\n          setShowReview(false);\n        }}\n        requestedStockItems={requestedStockItems}\n        personInfo={personInfo}\n        submitRequest={submitRequest}\n      />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.only('xs')]: {\n      paddingLeft: 2,\n      paddingRight: 2,\n    },\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: theme.typography.h3.fontSize,\n    [theme.breakpoints.down('md')]: {\n      fontSize: theme.typography.h4.fontSize,\n    },\n    marginBottom: theme.spacing(2),\n  },\n  subheading: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n  },\n  column: {\n    padding: theme.spacing(2),\n  },\n  searchPaper: {\n    margin: 5,\n    padding: theme.spacing(2),\n  },\n  search: {\n    width: '95%',\n  },\n  details: {\n    display: 'block',\n  },\n  info: {\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '10px',\n    },\n  },\n  stepper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: theme.breakpoints.values.sm,\n  },\n}));\n\nexport default OrderStock;\n","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\n/**\n * Confirmation modal when fulfilling a person's order\n */\nfunction FulfillModal({ person, personId, show, handleClose, fulfillPerson }) {\n  /**\n   * Handles confirmation of fulfilling a person's order\n   */\n  function handleConfirm() {\n    fulfillPerson(personId);\n    handleClose();\n  }\n\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>Confirm fulfillment</Modal.Header>\n      <Modal.Body>\n        <h5>\n          Are you sure that {person.firstName}'s order is correct and has been\n          fulfilled?\n        </h5>\n        <p>{person['order-notes']}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" style={{borderRadius: '200px'}} onClick={handleClose}>\n          Close\n        </Button>\n        <Button onClick={handleConfirm}\n        style={{backgroundColor: '#35E82A', borderColor: '#FFFFF5', color: '#FFFFFF', borderRadius: '200px'}}>\n          Confirm fulfillment\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default FulfillModal;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { CardActions } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport FulfillModal from './FulfillModal';\n\n/**\n * Displays:\n * - person's name\n * - order notes\n * - button that sends a socket emit to backend that\n *   sets fulfill to true\n */\nfunction UnfulfilledOrderCard({ person, id, fulfillPerson }) {\n  const [showFulfillModal, setShowFulfillModal] = useState(false);\n\n  // Handlers for showing/closing modal when ordering item\n  const handleClose = () => setShowFulfillModal(false);\n  const handleShow = () => setShowFulfillModal(true);\n\n  const classes = useStyles();\n  return (\n    <>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"h5\">\n            {person['firstName']} {person['lastName']}\n          </Typography>\n          <Typography className={classes.order}>\n            {person['order-notes']}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            onClick={handleShow}\n            className={classes.button}\n            variant=\"contained\"\n            disableElevation\n          >\n            Fulfill Order\n          </Button>\n        </CardActions>\n      </Card>\n\n      <FulfillModal\n        person={person}\n        personId={id}\n        show={showFulfillModal}\n        handleClose={handleClose}\n        fulfillPerson={fulfillPerson}\n      />\n    </>\n  );\n}\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  order: {\n    fontsize: 12,\n  },\n  button: {\n    borderRadius: 10,\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    marginBottom: 5,\n  },\n});\n\nexport default UnfulfilledOrderCard;\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport cart from '../images/empty-cart.svg';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    justifyContent: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  dialog: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  image: {\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    marginTop: theme.spacing(20),\n  },\n  grid: {\n    textAlign: 'center',\n  },\n}));\n\nconst Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#00c853',\n    },\n    secondary: {\n      main: '#00c853',\n    },\n    action: {\n      main: '#00c853',\n    },\n  },\n});\n\nexport default function AlertDialogSlide() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <MuiThemeProvider theme={Theme}>\n        <Dialog\n          open={open}\n          maxWidth=\"lg\"\n          keepMounted\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n          className={classes.dialog}\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">\n            {'No orders at the moment'}\n          </DialogTitle>\n          <DialogActions className={classes.button}>\n            <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </MuiThemeProvider>\n      <Grid container className={classes.grid}>\n        <Grid item lg={4} sm={4}></Grid>\n        <Grid item xs={12} lg={4} sm={4} className={classes.grid}>\n          <img alt=\"Shopping cart\" src={cart} className={classes.image} />\n        </Grid>\n        <Grid item lg={4} sm={4}></Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { updatePerson } from '../api/People';\nimport { useHistory } from 'react-router-dom';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { db, auth } from '../firebase';\nimport { LANDING } from '../constants/Routes';\nimport UnfulfilledOrderCard from '../components/UnfulfilledOrderCard';\nimport Loading from '../components/Loading';\nimport Dialog from '../components/EmptyDialog';\n\n/**\n * Page with list of people with unfulfilled orders\n */\nfunction OrderTracker() {\n  const history = useHistory();\n  const [user, userLoading, userError] = useAuthState(auth);\n  const [query, setQuery] = useState();\n\n  useEffect(() => {\n    if (!Boolean(user)) {\n      // If user is not logged in, redirect to home screen\n      history.push(LANDING);\n    } else {\n      // If user is logged in, fetch their orders\n      setQuery(\n        db\n          .collection('pantries')\n          .doc(user.uid)\n          .collection('people')\n          .where('fulfilled', '==', false)\n      );\n    }\n  }, [history, user]);\n\n  const [snapshot, snapLoading, snapError] = useCollection(query);\n\n  function fulfillOrder(id) {\n    const requestBody = {\n      pantry: user.uid,\n      _id: id,\n      fulfilled: true,\n    };\n    updatePerson(requestBody);\n  }\n\n  return (\n    <Container>\n      {userError && <strong>User Error: {JSON.stringify(snapError)}</strong>}\n      {userLoading && <span>User: Loading...</span>}\n      {snapError && (\n        <strong>Collection Error: {JSON.stringify(snapError)}</strong>\n      )}\n      {snapLoading && <Loading />}\n      {snapshot && snapshot.docs.length === 0 && <Dialog />}\n      {snapshot &&\n        snapshot.docs.map((doc) => (\n          <UnfulfilledOrderCard\n            person={doc.data()}\n            id={doc.id}\n            fulfillPerson={fulfillOrder}\n            key={doc._id}\n          />\n        ))}\n    </Container>\n  );\n}\n\nexport default OrderTracker;\n","import React, { useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Loading from '../components/Loading';\nimport ErrorAlert from '../components/ErrorAlert';\nimport Paper from '@material-ui/core/Paper';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport {\n  auth,\n  signInWithFacebook,\n  signInWithGoogle,\n  signInWithYahoo,\n} from '../firebase';\nimport { makeStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { LANDING } from '../constants/Routes';\n\n/**\n * Sign in page for Pan-Lang\n */\nfunction SignIn() {\n  const history = useHistory();\n  const [user, loading, error] = useAuthState(auth);\n\n  useEffect(() => {\n    // Redirect user to landing page if already signed in\n    if (Boolean(user)) history.push(LANDING);\n  }, [history, user]);\n\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"md\" className={classes.page}>\n      {/* Logo */}\n      <img\n        src={require('../images/logo_nobg.png')}\n        alt=\"Pan-Lang logo\"\n        style={{ width: 120, height: 120 }}\n      />\n\n      <Typography variant=\"h2\" className={classes.title}>\n        Join Pan-Lang today.\n      </Typography>\n\n      <Paper className={classes.paper}>\n        {/* Sign in buttons */}\n        <Button className={classes.button} onClick={signInWithGoogle}>\n          Sign in with Google\n        </Button>\n        <Button className={classes.button} onClick={signInWithFacebook}>\n          Sign in with Facebook\n        </Button>\n        <Button className={classes.button} onClick={signInWithYahoo}>\n          Sign in with Yahoo\n        </Button>\n      </Paper>\n\n      {/* Loading */}\n      {loading && <Loading />}\n\n      {/* Error */}\n      {error && <ErrorAlert body=\"An error occurred.\" />}\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '30px',\n    },\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    padding: theme.spacing(5),\n    maxWidth: theme.breakpoints.width('sm'),\n  },\n  button: {\n    alignSelf: 'center',\n    backgroundColor: '#16AB8D',\n    borderColor: '#FFFFF5',\n    color: '#FFFFFF',\n    width: '100%',\n    '&:hover': {\n      backgroundColor: '#119178',\n    },\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default SignIn;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * Full screen component shown when loading authentication\n */\nfunction Splash({ loading = true }) {\n  const classes = useStyles();\n  return (\n    <Container className={classes.container}>\n      <img\n        src={require('../images/logo_nobg.png')}\n        alt=\"Pan-Lang logo\"\n        className={classes.logo}\n      />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: '100vh',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  logo: {\n    maxWidth: '90vw',\n  },\n}));\n\nexport default Splash;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar/';\nimport Home from './pages/Home/';\nimport About from './pages/About';\nimport Order from './pages/Order';\nimport Stock from './pages/Stock';\nimport OrderStock from './pages/OrderStock';\nimport OrderTracker from './pages/OrderTracker';\nimport SignIn from './pages/SignIn';\nimport Splash from './components/Splash';\nimport {\n  ABOUT,\n  ORDER_FORM,\n  ORDER_TRACKER,\n  LANDING,\n  SIGN_IN,\n  STOCK,\n  ORDER_STOCK,\n} from './constants/Routes';\nimport { auth } from './firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\n/**\n * Highest level App component for routing\n */\nfunction App() {\n  // `user` is unused\n  const [, loading] = useAuthState(auth);\n\n  if (loading) {\n    return (\n      <Splash loading={loading} />\n    );\n  }\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      {/* FIXME: naive fix for keeping a fixed navbar */}\n      <div style={{ padding: 55 }} />\n      <Switch>\n        <Route exact path={LANDING}>\n          <Home />\n        </Route>\n        <Route exact path={ABOUT}>\n          <About />\n        </Route>\n        <Route path={STOCK}>\n          <Stock />\n        </Route>\n        <Route path={ORDER_FORM}>\n          <Order />\n        </Route>\n        <Route path={ORDER_STOCK}>\n          <OrderStock />\n        </Route>\n        <Route path={ORDER_TRACKER}>\n          <OrderTracker />\n        </Route>\n        <Route path={SIGN_IN}>\n          <SignIn />\n        </Route>\n        <Route path=\"*\">\n          <h1>\n            Welcome to <font style={{ color: '#26B020' }}>Pan-Lang</font>!\n          </h1>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <React.Fragment>\n      <CssBaseline />\n      <App />\n    </React.Fragment>\n  </React.StrictMode>,\n\n \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}